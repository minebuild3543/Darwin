{
  "D:SKIP_ESI_CHECKS",
  "{}",
  "D:boot",
  "{\
  \"F:Orbital.script\",\
  \"\\\"-- Example ESI boot script.\\\\\\\
\\\\\\\
RunInternal \\\\\\\"esisprite\\\\\\\" -- run sprite.b so we get the intro\\\\\\\
RunMap \\\\\\\"kernel\\\\\\\" -- run kernel.map\\\\\\\
RunMap \\\\\\\"security\\\\\\\" -- run security.map\\\\\\\
Boot \\\\\\\"darwin-0.0.4.6-rolling\\\\\\\" -- boot the kernel\\\\\\\
UserMode \\\\\\\"Default\\\\\\\" -- go user mode\\\"\",\
  \"D:bcd\",\
  \"{\\\
  \\\"F:orbital\\\",\\\
  \\\"\\\\\\\"dofile(\\\\\\\\\\\\\\\"/boot/modules/sprite.b\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
dofile(\\\\\\\\\\\\\\\"/boot/kernel\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
shell.setPath(shell.path()..\\\\\\\\\\\\\\\":/system/bin\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
shell.run(\\\\\\\\\\\\\\\"/boot/security.map\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
shell.run(\\\\\\\\\\\\\\\"/system/bin/sh\\\\\\\\\\\\\\\")\\\\\\\"\\\",\\\
  \\\"F:orbital-re\\\",\\\
  \\\"\\\\\\\"local function boot_printColoredTextLine(y, txt, bg, fg)\\\\\\\\\\\\\\\
 term.setCursorPos(1, y)\\\\\\\\\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\\\\\\\\\
 term.write(\\\\\\\\\\\\\\\"                                                   \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 term.setCursorPos(1, y)\\\\\\\\\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\\\\\\\\\
 print(txt)\\\\\\\\\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
 term.setTextColor(colors.white)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recovery_drawProgressBar()\\\\\\\\\\\\\\\
    local bgColor = term.getBackgroundColor()\\\\\\\\\\\\\\\
\\\\\\\\009local textColor = term.getTextColor()\\\\\\\\\\\\\\\
    --term.clear()\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(13,4)\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
\\\\\\\\009print(\\\\\\\\\\\\\\\"Orbital is loading files...\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(textColor)\\\\\\\\\\\\\\\
\\\\\\\\009term.setBackgroundColor(colors.lightGray)\\\\\\\\\\\\\\\
    term.setCursorPos(4,6)\\\\\\\\\\\\\\\
\\\\\\\\009textutils.slowPrint(\\\\\\\\\\\\\\\"                                             \\\\\\\\\\\\\\\", 10)\\\\\\\\\\\\\\\
\\\\\\\\009term.setBackgroundColor(bgColor)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recovery_drawScreen(opt)\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
    term.clear()\\\\\\\\\\\\\\\
    term.setCursorPos(1,1)\\\\\\\\\\\\\\\
    boot_printColoredTextLine(2, \\\\\\\\\\\\\\\"             Orbital Boot Manager v1.0             \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009if not opt then\\\\\\\\\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\\\\\\\\\" ARROW KEYS=Choose                      ENTER=Boot \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009else\\\\\\\\\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\\\\\\\\\"                                                   \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recovery_annotate()\\\\\\\\\\\\\\\
    local annotate = {\\\\\\\\\\\\\\\"   Fetching Orbital RE image...\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Unpacking image...\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Execute: /boot/recovery/drivers.pkg\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Execute: /boot/recovery/libraries.pkg\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Execute: /boot/recovery/initrd\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\
\\\\\\\\009local textColorA = term.getTextColor()\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(1,8)\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
\\\\\\\\009for _,v in ipairs(annotate) do\\\\\\\\\\\\\\\
\\\\\\\\009    print(v)\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009sleep(0.5)\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(textColorA)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
recovery_drawScreen(true)\\\\\\\\\\\\\\\
recovery_drawProgressBar()\\\\\\\\\\\\\\\
recovery_annotate()\\\\\\\\\\\\\\\
sleep(5)\\\\\\\\\\\\\\\
_G[\\\\\\\\\\\\\\\"__RECOVERY\\\\\\\\\\\\\\\"] = true\\\\\\\"\\\",\\\
}\",\
  \"D:ext\",\
  \"{\\\
  \\\"F:mouse.kext\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\"\\\",\\\
}\",\
  \"D:kernel\",\
  \"{\\\
  \\\"F:darwin-0.0.4.6-rolling\\\",\\\
  \\\"\\\\\\\"-- Darwin alpha 0.0.4.6-rolling\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
term.clear()\\\\\\\\\\\\\\\
term.setCursorPos(1,1)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
os.version = function()\\\\\\\\\\\\\\\
 return \\\\\\\\\\\\\\\"Orbital 0.0.4.6 Developer Preview\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if not dofile(\\\\\\\\\\\\\\\"/boot/kernel.map\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 printError(\\\\\\\\\\\\\\\"[ X ] Failed to initialize kernel library\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 while true do\\\\\\\\\\\\\\\
  coroutine.yield()\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
__declare(\\\\\\\\\\\\\\\"__DEBUG\\\\\\\\\\\\\\\", ESI.ROMStructure({true}))\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if not settings and not dofile(\\\\\\\\\\\\\\\"/boot/ext/legacy.kext\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 return __kstop(0x00000003, \\\\\\\\\\\\\\\"CC 1.8 is required for Orbital to run\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- load drivers and libraries\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/lib/libstdlua.2.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/lib/libuser.2.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/lib/libgui_txui.1.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
if not settings then\\\\\\\\\\\\\\\
 __kload(\\\\\\\\\\\\\\\"/lib/libstdlua_settings.1.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- finalize kernel-mode init\\\\\\\\\\\\\\\
__kfinalize()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- output\\\\\\\\\\\\\\\
printk(1, \\\\\\\\\\\\\\\"Darwin kernel loaded\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
sleep(5)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
term.clear()\\\\\\\\\\\\\\\
term.setCursorPos(1,1)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
dofile(\\\\\\\\\\\\\\\"/system/init\\\\\\\\\\\\\\\")\\\\\\\"\\\",\\\
}\",\
  \"F:kernel.map\",\
  \"\\\"-- Darwin native API\\\\\\\
\\\\\\\
-- LOCALS\\\\\\\
\\\\\\\
-- declare bug check codes\\\\\\\
local tmp_kc = {}\\\\\\\
tmp_kc[0x0000] = \\\\\\\"UNDEFINED_EXCEPTION\\\\\\\"\\\\\\\
tmp_kc[0x0001] = \\\\\\\"KERNEL_INTEGRITY_VIOLATION\\\\\\\"\\\\\\\
tmp_kc[0x0002] = \\\\\\\"KERNEL_ASSEMBLY_NOT_ACCESSIBLE\\\\\\\"\\\\\\\
tmp_kc[0x0003] = \\\\\\\"FIRMWARE_VERSION_INCOMPATIBLE\\\\\\\"\\\\\\\
tmp_kc[0x0004] = \\\\\\\"ATTEMPTED_KERNEL_ENVIRONMENT_BYPASS\\\\\\\"\\\\\\\
tmp_kc[0x0005] = \\\\\\\"ATTEMPTED_KERNEL_STRUCT_MODIFICATION\\\\\\\"\\\\\\\
tmp_kc[0xFFFE] = \\\\\\\"DELIBERATELY_THROWN_EXCEPTION\\\\\\\"\\\\\\\
tmp_kc[0xFFFF] = \\\\\\\"UNHANDLED_USER_MODE_EXCEPTION\\\\\\\"\\\\\\\
\\\\\\\
-- handle the bug check codes\\\\\\\
local function handleBugCheckCode(code)\\\\\\\
 if code > 0xFFFFFFFF then\\\\\\\
  return \\\\\\\"0xFFFFFFFF\\\\\\\"\\\\\\\
 end\\\\\\\
 local h = \\\\\\\"0x00000000\\\\\\\"\\\\\\\
 local code_s = string.format(\\\\\\\"%X\\\\\\\", code)\\\\\\\
 return string.format(\\\\\\\"%s%s\\\\\\\", string.sub(h, 1, h:len() - code_s:len()), code_s)\\\\\\\
end\\\\\\\
\\\\\\\
local function getCodeID(c)\\\\\\\
 if code > 0xFFFFFFFF then\\\\\\\
  return tmp_kc[0x00000000]\\\\\\\
 end\\\\\\\
 return tmp_kc[c] or tmp_kc[0x00000000]\\\\\\\
end\\\\\\\
\\\\\\\
\\\\\\\
-- GLOBALS\\\\\\\
\\\\\\\
-- declare log function\\\\\\\
__declare(\\\\\\\"log\\\\\\\", function(l)\\\\\\\
if __RECOVERY then\\\\\\\
 if not fs.exists(\\\\\\\"/boot/recovery.log\\\\\\\") then\\\\\\\
  x = fs.open(\\\\\\\"/boot/recovery.log\\\\\\\", \\\\\\\"w\\\\\\\")\\\\\\\
 else\\\\\\\
  x = fs.open(\\\\\\\"/boot/recovery.log\\\\\\\", \\\\\\\"a\\\\\\\")\\\\\\\
 end\\\\\\\
 x.writeLine(tostring(os.day())..\\\\\\\"d:\\\\\\\"..textutils.formatTime(os.time(), true)..\\\\\\\" | \\\\\\\"..l)\\\\\\\
 x.close()\\\\\\\
else\\\\\\\
 if not fs.exists(\\\\\\\"/system/darwin.log\\\\\\\") then\\\\\\\
  x = fs.open(\\\\\\\"/system/darwin.log\\\\\\\", \\\\\\\"w\\\\\\\")\\\\\\\
 else\\\\\\\
  x = fs.open(\\\\\\\"/system/darwin.log\\\\\\\", \\\\\\\"a\\\\\\\")\\\\\\\
 end\\\\\\\
 x.writeLine(tostring(os.day())..\\\\\\\"d:\\\\\\\"..textutils.formatTime(os.time(), true)..\\\\\\\" | \\\\\\\"..l)\\\\\\\
 x.close()\\\\\\\
end\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare bug check stub\\\\\\\
__declare(\\\\\\\"__kstop\\\\\\\", function(code, p1, p2, p3, p4)\\\\\\\
 os.pullEvent = os.pullEventRaw\\\\\\\
 local code_a = 0x00000000\\\\\\\
 if tmp_kc[code] ~= nil then\\\\\\\
  code_a = code\\\\\\\
 end\\\\\\\
 \\\\\\\
 t = string.format(\\\\\\\"KSTOP CALLED! %s %s %s %s %s %s\\\\\\\", handleBugCheckCode(code_a), tmp_kc[code_a], tostring(p1), tostring(p2), tostring(p3), tostring(p4))\\\\\\\
 log(t)\\\\\\\
 \\\\\\\
 if not  __DEBUG and settings.get(\\\\\\\"kernel.reboot_on_bug_check\\\\\\\", true) then\\\\\\\
  os.reboot()\\\\\\\
 end\\\\\\\
 \\\\\\\
 term.setBackgroundColor(colors.blue)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
 term.clear()\\\\\\\
 term.setCursorPos(1,1)\\\\\\\
 \\\\\\\
 x = string.format([[\\\\\\\
The system has encountered an unrecoverable error.\\\\\\\
Your computer needs to be restarted.\\\\\\\
\\\\\\\
Please write down the following parameters\\\\\\\
and send them to the Darwin development team:\\\\\\\
\\\\\\\
[%s] %s\\\\\\\
 \\\\\\\
[1] %s\\\\\\\
[2] %s\\\\\\\
[3] %s\\\\\\\
[4] %s\\\\\\\
\\\\\\\
15 seconds until reboot.\\\\\\\
]], handleBugCheckCode(code_a), tmp_kc[code_a], tostring(p1), tostring(p2), tostring(p3), tostring(p4))\\\\\\\
stdout(x..\\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
sleep(15)\\\\\\\
os.reboot()\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare executive\\\\\\\
__declare(\\\\\\\"run\\\\\\\", function(ap)\\\\\\\
 return os.run(getfenv(1), ap)\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare library persistence loader\\\\\\\
__declare(\\\\\\\"persist\\\\\\\", function(n, c)\\\\\\\
 local h = fs.open(\\\\\\\"/tmp/\\\\\\\"..n, \\\\\\\"w\\\\\\\")\\\\\\\
 h.writeLine(c)\\\\\\\
 h.close()\\\\\\\
 os.loadAPI(\\\\\\\"/tmp/\\\\\\\"..n)\\\\\\\
 fs.delete(\\\\\\\"/tmp/\\\\\\\"..n)\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare device IDs\\\\\\\
local d = {}\\\\\\\
d.MONITOR = \\\\\\\"monitor\\\\\\\"\\\\\\\
d.FLOPPY = \\\\\\\"drive\\\\\\\"\\\\\\\
d.MODEM = \\\\\\\"modem\\\\\\\"\\\\\\\
d.PRINTER = \\\\\\\"printer\\\\\\\"\\\\\\\
__declare(\\\\\\\"DEVICE_ID\\\\\\\", ESI.ROMStructure(d))\\\\\\\
\\\\\\\
-- declare FS access flags\\\\\\\
__declare_api(\\\\\\\"fs\\\\\\\", \\\\\\\"AF_READ\\\\\\\", \\\\\\\"r\\\\\\\")\\\\\\\
__declare_api(\\\\\\\"fs\\\\\\\", \\\\\\\"AF_WRITE\\\\\\\", \\\\\\\"w\\\\\\\")\\\\\\\
__declare_api(\\\\\\\"fs\\\\\\\", \\\\\\\"AF_APPEND\\\\\\\", \\\\\\\"a\\\\\\\")\\\\\\\
__declare_api(\\\\\\\"fs\\\\\\\", \\\\\\\"AF_READBINARY\\\\\\\", \\\\\\\"rb\\\\\\\")\\\\\\\
__declare_api(\\\\\\\"fs\\\\\\\", \\\\\\\"AF_WRITEBINARY\\\\\\\", \\\\\\\"wb\\\\\\\")\\\\\\\
__declare_api(\\\\\\\"fs\\\\\\\", \\\\\\\"AF_APPENDBINARY\\\\\\\", \\\\\\\"ab\\\\\\\")\\\\\\\
\\\\\\\
-- declare stream descriptors\\\\\\\
__declare(\\\\\\\"stdin\\\\\\\", read)\\\\\\\
__declare(\\\\\\\"stdout\\\\\\\", write)\\\\\\\
__declare(\\\\\\\"stderr\\\\\\\", printError)\\\\\\\
\\\\\\\
-- declare format descriptor\\\\\\\
__declare(\\\\\\\"printf\\\\\\\", function(...)\\\\\\\
stdout(string.format(...))\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare kernel descriptor\\\\\\\
__declare(\\\\\\\"printk\\\\\\\", function(n, i)\\\\\\\
 local LOG_TYPES = {}\\\\\\\
 LOG_TYPES[0] = {colors.lightGray, \\\\\\\" i \\\\\\\"}\\\\\\\
 LOG_TYPES[1] = {colors.lime, \\\\\\\" v \\\\\\\"}\\\\\\\
 LOG_TYPES[2] = {colors.cyan, \\\\\\\" * \\\\\\\"}\\\\\\\
 LOG_TYPES[3] = {colors.orange, \\\\\\\" ! \\\\\\\"}\\\\\\\
 LOG_TYPES[4] = {colors.red, \\\\\\\"!!!\\\\\\\"}\\\\\\\
 if n > 4 then\\\\\\\
  n = 4\\\\\\\
 end\\\\\\\
 if __RECOVERY and not __RECOVERY_SILENT then\\\\\\\
  term.setTextColor(colors.lightGray)\\\\\\\
  stdout(i..\\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
  term.setTextColor(colors.white)\\\\\\\
 elseif __DEBUG then\\\\\\\
  term.setBackgroundColor(colors.black)\\\\\\\
  term.setTextColor(colors.gray)\\\\\\\
  stdout(\\\\\\\"[\\\\\\\")\\\\\\\
  term.setTextColor(LOG_TYPES[n][1])\\\\\\\
  stdout(LOG_TYPES[n][2])\\\\\\\
  term.setTextColor(colors.gray)\\\\\\\
  stdout(\\\\\\\"]\\\\\\\")\\\\\\\
  if n == 4 then\\\\\\\
   term.setTextColor(colors.red)\\\\\\\
  else\\\\\\\
   term.setTextColor(colors.lightGray)   \\\\\\\
  end\\\\\\\
  stdout(\\\\\\\" \\\\\\\"..i..\\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
  term.setTextColor(colors.white)\\\\\\\
 end\\\\\\\
 log(i)\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare kernel reader\\\\\\\
__declare(\\\\\\\"__kread\\\\\\\", function(path)\\\\\\\
 local handle = fs.open(path, \\\\\\\"r\\\\\\\")\\\\\\\
 local content = handle.readAll()\\\\\\\
 handle.close()\\\\\\\
 return content\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare temporary kernel-mode loader\\\\\\\
local function loadAssembly(path)\\\\\\\
 sleep(0.2)\\\\\\\
 if not fs.exists(path) or fs.isDir(path) then\\\\\\\
  printk(4, \\\\\\\"FAILED TO LOAD KERNEL-MODE ASSEMBLY: \\\\\\\"..path)\\\\\\\
  return false\\\\\\\
 else\\\\\\\
  if dofile(path) then\\\\\\\
   printk(1, \\\\\\\"Loaded system file: \\\\\\\"..path)\\\\\\\
   return true\\\\\\\
  else\\\\\\\
   printk(4, \\\\\\\"FAILED TO LOAD KERNEL-MODE ASSEMBLY: \\\\\\\"..path)\\\\\\\
   return false\\\\\\\
  end\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
__declare(\\\\\\\"__kload\\\\\\\", function(path)\\\\\\\
if not loadAssembly(path) then\\\\\\\
 return false, __kstop(0x00000002, path)\\\\\\\
else\\\\\\\
 return true, nil\\\\\\\
end\\\\\\\
end)\\\\\\\
\\\\\\\
-- declare finalizer\\\\\\\
__declare(\\\\\\\"__kfinalize\\\\\\\", function()\\\\\\\
__declare(\\\\\\\"__kload\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"__kread\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"__kfinalize\\\\\\\", nil)\\\\\\\
if __DEBUG then\\\\\\\
 __declare(\\\\\\\"__khandlecode\\\\\\\", handleBugCheckCode)\\\\\\\
 return\\\\\\\
end\\\\\\\
__declare(\\\\\\\"RunInternal\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"RunMap\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"RunExternal\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"Boot\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"UserMode\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"__declare\\\\\\\", nil)\\\\\\\
__declare(\\\\\\\"__declare_api\\\\\\\", nil)\\\\\\\
end)\\\\\\\
\\\\\\\
-- return\\\\\\\
return 1\\\"\",\
  \"D:modules\",\
  \"{\\\
  \\\"F:esisprite.b\\\",\\\
  \\\"\\\\\\\"-- BOOT LOADER MODULE DESCRIPTION\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- @name sprite.b\\\\\\\\\\\\\\\
-- @internalName SpriteBoot\\\\\\\\\\\\\\\
-- @desc Display an animated intro\\\\\\\\\\\\\\\
-- @channel CONSUMER_RELEASE\\\\\\\\\\\\\\\
-- @manual /data/darwin-ddk/docs/boot/modules.sprite\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Local variables\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Stage descriptors\\\\\\\\\\\\\\\
local stage = function(lx, ly, rx, ry)\\\\\\\\\\\\\\\
 return {lx, ly, rx, ry}\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local array = {{3, 1, 41, 1}, {6, 1, 38, 1}, {9, 1, 35, 1}, {12, 1, 32, 1}, {15, 1, 29, 1}, {18, 1, 26, 1}}\\\\\\\\\\\\\\\
 \\\\\\\\\\\\\\\
local left = paintutils.loadImage(\\\\\\\\\\\\\\\"/boot/res/sprite_left.img\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
local right = paintutils.loadImage(\\\\\\\\\\\\\\\"/boot/res/sprite_right.img\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
local center = paintutils.loadImage(\\\\\\\\\\\\\\\"/boot/res/sprite_center.img\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local clearScreen = function(c)\\\\\\\\\\\\\\\
 term.setBackgroundColor(c or colors.white)\\\\\\\\\\\\\\\
 term.clear()\\\\\\\\\\\\\\\
 term.setCursorPos(1,1)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Main code\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
clearScreen()\\\\\\\\\\\\\\\
sleep(1)\\\\\\\\\\\\\\\
for _,v in ipairs(array) do\\\\\\\\\\\\\\\
 clearScreen()\\\\\\\\\\\\\\\
 paintutils.drawImage(left, v[1], v[2])\\\\\\\\\\\\\\\
 paintutils.drawImage(right, v[3], v[4])\\\\\\\\\\\\\\\
 sleep(0.15)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
sleep(0.5)\\\\\\\\\\\\\\\
term.setBackgroundColor(colors.white)\\\\\\\\\\\\\\\
term.setTextColor(colors.blue)\\\\\\\\\\\\\\\
term.setCursorPos(17, 18)\\\\\\\\\\\\\\\
textutils.slowPrint(\\\\\\\\\\\\\\\"Crimson Interactive\\\\\\\\\\\\\\\", 10)\\\\\\\\\\\\\\\
term.setCursorPos(2, 8)\\\\\\\\\\\\\\\
textutils.slowWrite(\\\\\\\\\\\\\\\"minebuild02\\\\\\\\\\\\\\\", 20)\\\\\\\\\\\\\\\
term.setCursorPos(2, 10)\\\\\\\\\\\\\\\
textutils.slowWrite(\\\\\\\\\\\\\\\"Lead Developer\\\\\\\\\\\\\\\", 20)\\\\\\\\\\\\\\\
term.setCursorPos(39, 8)\\\\\\\\\\\\\\\
textutils.slowWrite(\\\\\\\\\\\\\\\"VirgilEnCiel\\\\\\\\\\\\\\\", 20)\\\\\\\\\\\\\\\
term.setCursorPos(38, 10)\\\\\\\\\\\\\\\
textutils.slowWrite(\\\\\\\\\\\\\\\"Lead Designer\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
sleep(1)\\\\\\\\\\\\\\\
clearScreen(colors.black)\\\\\\\"\\\",\\\
}\",\
  \"D:recovery\",\
  \"{\\\
  \\\"D:app\\\",\\\
  \\\"{\\\\\\\
  \\\\\\\"F:SRWBoot.app\\\\\\\",\\\\\\\
  \\\\\\\"\\\\\\\\\\\\\\\"local w, h = term.getSize()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local window = GUI.Window:new({w = w; h = h;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label1 = GUI.Label:new({x = 4; y = 4; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"The Boot Recovery Wizard allows you to repair\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label2 = GUI.Label:new({x = 4; y = 5; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"various boot configuration parameters, BIOS\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label3 = GUI.Label:new({x = 4; y = 6; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"settings and the Master Boot Record.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_CheckBox1 = GUI.Checkbox:new({x = 4; y = 8; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Repair MBR\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_CheckBox2 = GUI.Checkbox:new({x = 4; y = 10; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Repair BCD files\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_CheckBox3 = GUI.Checkbox:new({x = 4; y = 12; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Repair BIOS settings\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_commit = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    if b_CheckBox1.checked == true or b_CheckBox2.checked == true then\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009    local repair = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"/boot/recovery/bootsect\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009    if b_CheckBox1.checked == true then\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009    repair = repair..\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /mbr\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009if b_CheckBox2.checked == true then\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009    repair = repair..\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" /bcd:orbital /bcd:orbital-re\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009shell.run(repair)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009if b_CheckBox3.checked == true then\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009\\\\\\\\\\\\\\\\009shell.run(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"/boot/recovery/sysprep --silent\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009stdout(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Recovery operations complete, rebooting...\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009sleep(0.5)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009os.reboot()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_back = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009shell.run(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"/boot/recovery/app/SRWMain.app\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
GUI.Controller:addWindow(window)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:setTitleLabel(GUI.Label:new({text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Orbital RE - Boot Recovery Wizard\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textColor = colors.white; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(b_CheckBox1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(b_CheckBox2)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(b_CheckBox3)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(GUI.Button:new({x = 2; y = 16; w = 24; action = b_commit; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Proceed with repair\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(GUI.Button:new({x = 26; y = 16; w = 24; action = b_back; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Back\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
GUI.Controller:startUpdateCycle()\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\
  \\\\\\\"F:SRWMain.app\\\\\\\",\\\\\\\
  \\\\\\\"\\\\\\\\\\\\\\\"local w, h = term.getSize()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local window = GUI.Window:new({w = w; h = h;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_repairBCDandMBR = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009shell.run(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"/boot/recovery/app/SRWBoot.app\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_refreshPC = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009shell.run(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"/boot/recovery/app/SRWRefresh.app\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_rebootComputer = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009stdout(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Recovery operations complete, rebooting...\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009sleep(0.5)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009os.reboot()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
GUI.Controller:addWindow(window)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:setTitleLabel(GUI.Label:new({text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Orbital Recovery Environment\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textColor = colors.white; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label1 = GUI.Label:new({x = 4; y = 4; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Welcome to the Orbital Recovery Environment.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label2 = GUI.Label:new({x = 4; y = 5; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"This application allows you to perform various\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label3 = GUI.Label:new({x = 4; y = 6; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"repair and maintenance tasks on your system.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_repair = GUI.Button:new({x = 2; y = 8; w = 47; action = a_repairBCDandMBR; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Repair your computer\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_refresh = GUI.Button:new({x = 2; y = 12; w = 47; action = a_refreshPC; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Refresh your Orbital installation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_reboot = GUI.Button:new({x = 2; y = 16; w = 47; action = a_rebootComputer; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Cancel recovery operations\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(a_label1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(a_label2)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(a_label3)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(a_repair)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(a_refresh)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(a_reboot)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
GUI.Controller:startUpdateCycle()\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\
  \\\\\\\"F:SRWRefresh.app\\\\\\\",\\\\\\\
  \\\\\\\"\\\\\\\\\\\\\\\"local w, h = term.getSize()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local window = GUI.Window:new({w = w; h = h;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label1 = GUI.Label:new({x = 4; y = 4; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"The Refresh Your PC Wizard allows you to\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label2 = GUI.Label:new({x = 4; y = 5; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"repair errors in your system installation\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local a_label3 = GUI.Label:new({x = 4; y = 6; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"by selectively reinstalling parts of the OS.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_CheckBox1 = GUI.Checkbox:new({x = 4; y = 8; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reinstall kernel extensions\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_CheckBox2 = GUI.Checkbox:new({x = 4; y = 10; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reinstall standard libraries\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_CheckBox3 = GUI.Checkbox:new({x = 4; y = 12; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reinstall system applications\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";})\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_commit = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009stdout(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"The Refresh Your PC Wizard is unavailable.\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009stdout(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Recovery operations complete, rebooting...\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009sleep(0.5)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009os.reboot()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
local b_back = function(self)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009self.parent:close()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.clear()\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009term.setCursorPos(1,1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\009shell.run(\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"/boot/recovery/app/SRWMain.app\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
GUI.Controller:addWindow(window)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:setTitleLabel(GUI.Label:new({text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Orbital RE - Refresh your PC\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"; textColor = colors.white; textAlign = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(b_CheckBox1)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(b_CheckBox2)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(b_CheckBox3)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(GUI.Button:new({x = 2; y = 16; w = 24; action = b_commit; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Proceed with repair\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
window:addComponent(GUI.Button:new({x = 26; y = 16; w = 24; action = b_back; text = \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Back\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
GUI.Controller:startUpdateCycle()\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\
}\\\",\\\
  \\\"F:bootsect\\\",\\\
  \\\"\\\\\\\"local tArgs = {...}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local orbital = [[\\\\\\\\\\\\\\\
dofile(\\\\\\\\\\\\\\\"/boot/kernel\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
shell.setPath(shell.path()..\\\\\\\\\\\\\\\":/system/bin\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
shell.run(\\\\\\\\\\\\\\\"/boot/security.map\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
shell.run(\\\\\\\\\\\\\\\"/system/bin/sh\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
]]\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local orbital_re = [[\\\\\\\\\\\\\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\\\\\\\\\\\\\
 term.setCursorPos(1, y)\\\\\\\\\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\\\\\\\\\
 term.write(\\\\\\\\\\\\\\\"                                                   \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 term.setCursorPos(1, y)\\\\\\\\\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\\\\\\\\\
 print(txt)\\\\\\\\\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
 term.setTextColor(colors.white)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recovery_drawProgressBar()\\\\\\\\\\\\\\\
    local bgColor = term.getBackgroundColor()\\\\\\\\\\\\\\\
\\\\\\\\009local textColor = term.getTextColor()\\\\\\\\\\\\\\\
    --term.clear()\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(13,4)\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
\\\\\\\\009print(\\\\\\\\\\\\\\\"Orbital is loading files...\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(textColor)\\\\\\\\\\\\\\\
\\\\\\\\009term.setBackgroundColor(colors.lightGray)\\\\\\\\\\\\\\\
    term.setCursorPos(4,6)\\\\\\\\\\\\\\\
\\\\\\\\009textutils.slowPrint(\\\\\\\\\\\\\\\"                                             \\\\\\\\\\\\\\\", 10)\\\\\\\\\\\\\\\
\\\\\\\\009term.setBackgroundColor(bgColor)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recovery_drawScreen(opt)\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
    term.clear()\\\\\\\\\\\\\\\
    term.setCursorPos(1,1)\\\\\\\\\\\\\\\
    boot_printColoredTextLine(2, \\\\\\\\\\\\\\\"             Orbital Boot Manager v1.0             \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009if not opt then\\\\\\\\\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\\\\\\\\\" ARROW KEYS=Choose                      ENTER=Boot \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009else\\\\\\\\\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\\\\\\\\\"                                                   \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recovery_annotate()\\\\\\\\\\\\\\\
    local annotate = {\\\\\\\\\\\\\\\"   Fetching Orbital RE image...\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Unpacking image...\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Execute: /boot/recovery/drivers.pkg\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Execute: /boot/recovery/libraries.pkg\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"   Execute: /boot/recovery/initrd\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\
\\\\\\\\009local textColorS = term.getTextColor()\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(1,8)\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
\\\\\\\\009for _,v in ipairs(annotate) do\\\\\\\\\\\\\\\
\\\\\\\\009    print(v)\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009sleep(0.5)\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(textColorS)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
recovery_drawScreen(true)\\\\\\\\\\\\\\\
recovery_drawProgressBar()\\\\\\\\\\\\\\\
recovery_annotate()\\\\\\\\\\\\\\\
sleep(5)\\\\\\\\\\\\\\\
]]\\\\\\\\\\\\\\\
local mbr = [[\\\\\\\\\\\\\\\
local function boot_handleBootElement(str)\\\\\\\\\\\\\\\
   local s1 = \\\\\\\\\\\\\\\"                                           \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
   local n1 = s1:len()\\\\\\\\\\\\\\\
   local n2 = str:len()\\\\\\\\\\\\\\\
   local s2 = string.sub(s1, 1, n1-n2)\\\\\\\\\\\\\\\
   return \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"..str..s2..\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function boot_mprint(array, this, x, y, h, g)\\\\\\\\\\\\\\\
   local c1 = term.getBackgroundColor()\\\\\\\\\\\\\\\
   local c2 = term.getTextColor()\\\\\\\\\\\\\\\
   term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
   for i = 1, #array do\\\\\\\\\\\\\\\
      term.setCursorPos(x, y)\\\\\\\\\\\\\\\
      --Check if option selected\\\\\\\\\\\\\\\
      if i == this then \\\\\\\\\\\\\\\
      --Option selected   \\\\\\\\\\\\\\\
         term.setBackgroundColor(h)\\\\\\\\\\\\\\\
         term.setTextColor(g)\\\\\\\\\\\\\\\
      else \\\\\\\\\\\\\\\
      --Option NOT selected \\\\\\\\\\\\\\\
         term.setBackgroundColor(g)\\\\\\\\\\\\\\\
         term.setTextColor(h)\\\\\\\\\\\\\\\
      end\\\\\\\\\\\\\\\
      --Print the string\\\\\\\\\\\\\\\
      term.write(boot_handleBootElement(array[i]))\\\\\\\\\\\\\\\
      y = y + 1 \\\\\\\\\\\\\\\
   end\\\\\\\\\\\\\\\
   term.setBackgroundColor(c1)\\\\\\\\\\\\\\\
   term.setTextColor(c2)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function boot_drawBootMenu(array, pos_x, pos_y, highlight, generic)\\\\\\\\\\\\\\\
   local select = 1\\\\\\\\\\\\\\\
   local x, y = term.getCursorPos()\\\\\\\\\\\\\\\
   \\\\\\\\\\\\\\\
   while true do\\\\\\\\\\\\\\\
      term.setCursorPos(x, y)\\\\\\\\\\\\\\\
      boot_mprint(array, select, pos_x, pos_y, highlight, generic)\\\\\\\\\\\\\\\
      event, key = os.pullEvent(\\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
      --Enter\\\\\\\\\\\\\\\
      if key == 28 then \\\\\\\\\\\\\\\
         return select \\\\\\\\\\\\\\\
      end\\\\\\\\\\\\\\\
      \\\\\\\\\\\\\\\
      if #array > 1 then\\\\\\\\\\\\\\\
         --Arrow UP or W key\\\\\\\\\\\\\\\
         if key == 200 or key == 17 then \\\\\\\\\\\\\\\
      \\\\\\\\009\\\\\\\\009    select = select - 1 \\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009\\\\\\\\009\\\\\\\\\\\\\\\
            if select < 1 then \\\\\\\\\\\\\\\
               select = #array \\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
         --Arrow Down or S key\\\\\\\\\\\\\\\
         elseif key == 208 or key == 31 then \\\\\\\\\\\\\\\
      \\\\\\\\009\\\\\\\\009    select = select + 1     \\\\\\\\\\\\\\\
        \\\\\\\\009\\\\\\\\009\\\\\\\\009 if select > #array then select = 1 end\\\\\\\\\\\\\\\
  \\\\\\\\009      end\\\\\\\\\\\\\\\
      end   \\\\\\\\\\\\\\\
   end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\\\\\\\\\\\\\
 term.setCursorPos(1, y)\\\\\\\\\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\\\\\\\\\
 term.write(\\\\\\\\\\\\\\\"                                                   \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 term.setCursorPos(1, y)\\\\\\\\\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\\\\\\\\\
 print(txt)\\\\\\\\\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
 term.setTextColor(colors.white)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function drawBootManager(err)\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
    term.clear()\\\\\\\\\\\\\\\
    term.setCursorPos(1,1)\\\\\\\\\\\\\\\
    boot_printColoredTextLine(2, \\\\\\\\\\\\\\\"             Orbital Boot Manager v1.0             \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009if not err then\\\\\\\\\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\\\\\\\\\" ARROW KEYS=Choose                      ENTER=Boot \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009else\\\\\\\\\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\\\\\\\\\"                                                   \\\\\\\\\\\\\\\", colors.lightGray, colors.black)\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if not fs.exists(\\\\\\\\\\\\\\\"/boot/bcd\\\\\\\\\\\\\\\") or not fs.isDir(\\\\\\\\\\\\\\\"/boot/bcd\\\\\\\\\\\\\\\") or not loadfile(\\\\\\\\\\\\\\\"/boot/bcd/orbital\\\\\\\\\\\\\\\") or not loadfile(\\\\\\\\\\\\\\\"/boot/bcd/orbital-re\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
    drawBootManager(true)\\\\\\\\\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\\\\\\\\\
    term.setTextColor(colors.lightGray)\\\\\\\\009\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(2,7)\\\\\\\\\\\\\\\
\\\\\\\\009print(\\\\\\\\\\\\\\\"The required Boot Configuration Data (BCD) files\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(2,8)\\\\\\\\\\\\\\\
\\\\\\\\009print(\\\\\\\\\\\\\\\"are not present on this computer.\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009term.setCursorPos(2,10)\\\\\\\\\\\\\\\
\\\\\\\\009print(\\\\\\\\\\\\\\\"Please reinstall the Orbital operating system.\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
    while true do\\\\\\\\\\\\\\\
\\\\\\\\009    sleep(1)\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
while true do\\\\\\\\\\\\\\\
    drawBootManager(false)\\\\\\\\\\\\\\\
    local a={\\\\\\\\\\\\\\\"Orbital 0.0.2.7 Developer Preview\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Orbital Recovery Environment\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Boot from floppy disk\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\
    local gmn=boot_drawBootMenu(a, 4, 5, colors.lightGray, colors.black)\\\\\\\\\\\\\\\
    if gmn == 1 then\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009shell.run(\\\\\\\\\\\\\\\"/boot/bcd/orbital\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009break\\\\\\\\\\\\\\\
    elseif gmn == 2 then\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009shell.run(\\\\\\\\\\\\\\\"/boot/bcd/orbital-recovery\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009break\\\\\\\\\\\\\\\
    elseif gmn==3 then \\\\\\\\\\\\\\\
        if fs.exists(\\\\\\\\\\\\\\\"/disk/startup\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009    shell.run(\\\\\\\\\\\\\\\"/disk/startup\\\\\\\\\\\\\\\") \\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009\\\\\\\\009break\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            term.setCursorPos(1, 16)\\\\\\\\\\\\\\\
            term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009\\\\\\\\009print(\\\\\\\\\\\\\\\"        ERROR: Unable to detect MBR on disk\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009\\\\\\\\009sleep(1)\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009end\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
]]\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function findArg(arg)\\\\\\\\\\\\\\\
 for _,v in ipairs(tArgs) do\\\\\\\\\\\\\\\
  if v == arg then\\\\\\\\\\\\\\\
   return true\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
 return false\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function writeFile(path, code)\\\\\\\\\\\\\\\
    if loadfile(path) then\\\\\\\\\\\\\\\
\\\\\\\\009    return true\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
    local desc = fs.open(path, \\\\\\\\\\\\\\\"w\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009desc.writeLine(code)\\\\\\\\\\\\\\\
\\\\\\\\009desc.close()\\\\\\\\\\\\\\\
\\\\\\\\009return true\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if #tArgs < 1 and not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
    UI.outputInfo(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", [[Orbital boot sector management utility\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\\\\\\\\
Arguments:\\\\\\\\\\\\\\\
/mbr        Write the MBR (/startup) to disk\\\\\\\\\\\\\\\
/bcd:<ID>   Write the specified BCD file to disk]])\\\\\\\\\\\\\\\
    return\\\\\\\\\\\\\\\
elseif fs.exists(\\\\\\\\\\\\\\\"/boot/bcd\\\\\\\\\\\\\\\") and fs.isDir(\\\\\\\\\\\\\\\"/boot/bcd\\\\\\\\\\\\\\\") and loadfile(\\\\\\\\\\\\\\\"/boot/bcd/orbital\\\\\\\\\\\\\\\") and loadfile(\\\\\\\\\\\\\\\"/boot/bcd/orbital-re\\\\\\\\\\\\\\\") and loadfile(\\\\\\\\\\\\\\\"/startup\\\\\\\\\\\\\\\") and not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
    if not UI.request(\\\\\\\\\\\\\\\"Orbital boot sector files already present, overwrite\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
\\\\\\\\009    return\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
elseif not __DEBUG or not __RECOVERY or not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
    UI.outputInfo(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"cannot run on consumer build\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if findArg(\\\\\\\\\\\\\\\"/mbr\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
    if not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
        UI.outputInfo(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"writing MBR to disk\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
\\\\\\\\009if writeFile(\\\\\\\\\\\\\\\"/startup\\\\\\\\\\\\\\\", startup) and not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
\\\\\\\\009    UI.outputSuccess(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"operation completed\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
elseif findArg(\\\\\\\\\\\\\\\"/bcd:orbital\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
    if not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
        UI.outputInfo(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"writing BCD 'orbital' to disk\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
\\\\\\\\009if writeFile(\\\\\\\\\\\\\\\"/boot/bcd/orbital\\\\\\\\\\\\\\\", orbital) and not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
\\\\\\\\009    UI.outputSuccess(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"operation completed\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
elseif findArg(\\\\\\\\\\\\\\\"/bcd:orbital-re\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
    if not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
        UI.outputInfo(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"writing BCD 'orbital-re' to disk\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
\\\\\\\\009if writeFile(\\\\\\\\\\\\\\\"/boot/bcd/orbital-re\\\\\\\\\\\\\\\", orbital_re) and not __RECOVERY_SILENT then\\\\\\\\\\\\\\\
\\\\\\\\009    UI.outputSuccess(\\\\\\\\\\\\\\\"bootsect\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"operation completed\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
end\\\\\\\"\\\",\\\
  \\\"F:dism\\\",\\\
  \\\"\\\\\\\"local tArgs = {...}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local FFormat = \\\\\\\\\\\\\\\".odi\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
local nFile, nDir, size = 0, 0\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function getPath(input)\\\\\\\\\\\\\\\
 if string.sub(input, 1, 1)==\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
  path = input\\\\\\\\\\\\\\\
 else\\\\\\\\\\\\\\\
  path=(\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" .. shell.dir() .. \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" .. input)\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
 return path\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function fopen(path, mode)\\\\\\\\\\\\\\\
  local f = fs.open(path, mode)\\\\\\\\\\\\\\\
  if not f then \\\\\\\\\\\\\\\
    stderr(\\\\\\\\\\\\\\\"ERROR: Could not open \\\\\\\\\\\\\\\"..path..\\\\\\\\\\\\\\\" with mode \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"..mode..\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
    exit()\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
  return f\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function skip(df)\\\\\\\\\\\\\\\
  local skip = {\\\\\\\\\\\\\\\"rom\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"treasure\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"tmp\\\\\\\\\\\\\\\"}\\\\\\\\\\\\\\\
  for _,v in ipairs(skip) do\\\\\\\\\\\\\\\
    if fs.getName(df) == v then\\\\\\\\\\\\\\\
\\\\\\\\009  return true\\\\\\\\\\\\\\\
\\\\\\\\009end\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
  return false\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function zip(file)\\\\\\\\\\\\\\\
  UI.outputInfo(\\\\\\\\\\\\\\\"dism\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Capturing from FS: \\\\\\\\\\\\\\\".. file)\\\\\\\\\\\\\\\
  local f = fopen(file, \\\\\\\\\\\\\\\"r\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
  local z = textutils.serialize(f.readAll())\\\\\\\\\\\\\\\
  f.close()\\\\\\\\\\\\\\\
  return z\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function capture(path)\\\\\\\\\\\\\\\
  local list = fs.list(path)\\\\\\\\\\\\\\\
  local array = {}\\\\\\\\\\\\\\\
  local t, name, d = 0, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", 0\\\\\\\\\\\\\\\
  \\\\\\\\\\\\\\\
  for i = 2, #list * 2, 2 do\\\\\\\\\\\\\\\
    t = i/2\\\\\\\\\\\\\\\
    local tpath = path..\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\"..list[t]\\\\\\\\\\\\\\\
    if fs.isDir(tpath) then\\\\\\\\\\\\\\\
      if not skip(tpath) then\\\\\\\\\\\\\\\
        name = \\\\\\\\\\\\\\\"D:\\\\\\\\\\\\\\\"..list[t]\\\\\\\\\\\\\\\
        array[i] = capture(tpath)\\\\\\\\\\\\\\\
        nDir = nDir + 1\\\\\\\\\\\\\\\
      end\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
      name = \\\\\\\\\\\\\\\"F:\\\\\\\\\\\\\\\"..list[t]\\\\\\\\\\\\\\\
      array[i] = zip(tpath)\\\\\\\\\\\\\\\
      nFile = nFile + 1\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    array[i - 1] = name\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
  \\\\\\\\\\\\\\\
  return textutils.serialize(array)\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function unzip(text, path)\\\\\\\\\\\\\\\
  UI.outputInfo(\\\\\\\\\\\\\\\"dism\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Applying to FS: \\\\\\\\\\\\\\\"..path)\\\\\\\\\\\\\\\
  local f = fopen(path, \\\\\\\\\\\\\\\"w\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
  f.write(textutils.unserialize(text))\\\\\\\\\\\\\\\
  f.close()\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function apply(text, path)\\\\\\\\\\\\\\\
  local array = textutils.unserialize(text)\\\\\\\\\\\\\\\
  local unz, dp\\\\\\\\\\\\\\\
  local d = 0\\\\\\\\\\\\\\\
  for i = 2, #array, 2 do\\\\\\\\\\\\\\\
    if string.sub(array[i-1], 1, 1) == \\\\\\\\\\\\\\\"D\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
      dp = string.sub(array[i-1], 3, #array[i-1])\\\\\\\\\\\\\\\
      fs.makeDir(path..\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\"..dp)\\\\\\\\\\\\\\\
      apply(array[i], path..\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\"..dp)\\\\\\\\\\\\\\\
      nDir = nDir + 1\\\\\\\\\\\\\\\
    elseif string.sub(array[i-1], 1, 1) == \\\\\\\\\\\\\\\"F\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
      local p = string.sub(array[i-1], 3, #array[i-1])\\\\\\\\\\\\\\\
      unzip(array[i], path..\\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\"..p)\\\\\\\\\\\\\\\
      nFile = nFile + 1\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function result()\\\\\\\\\\\\\\\
  UI.outputInfo(\\\\\\\\\\\\\\\"dism\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Operation completed.\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    ..\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n   size: \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    ..tostring(size).. \\\\\\\\\\\\\\\" B   \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    ..tostring(math.floor(size/1024)).. \\\\\\\\\\\\\\\" KB\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    ..\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n   Files:   \\\\\\\\\\\\\\\".. tostring(nFile)\\\\\\\\\\\\\\\
    ..\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n   Folders: \\\\\\\\\\\\\\\".. tostring(nDir)\\\\\\\\\\\\\\\
  )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local outStr = \\\\\\\\\\\\\\\"Deployment Image Servicing and Management \\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if tArgs[2] then\\\\\\\\\\\\\\\
 tArgs[2]=getPath(tArgs[2])\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if #tArgs < 3 then \\\\\\\\\\\\\\\
  outStr = outStr..[[\\\\\\\\\\\\\\\
Usage:\\\\\\\\\\\\\\\
dism capture <source directory> <output image>\\\\\\\\\\\\\\\
     OR\\\\\\\\\\\\\\\
     apply <source image> <target directory>\\\\\\\\\\\\\\\
     \\\\\\\\\\\\\\\
     Original code by 1Ridav.\\\\\\\\\\\\\\\
     Modified for Orbital by minebuild02.\\\\\\\\\\\\\\\
]]\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
UI.outputInfo(\\\\\\\\\\\\\\\"dism\\\\\\\\\\\\\\\", outStr)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if tArgs[1] == \\\\\\\\\\\\\\\"capture\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
  if fs.exists(tArgs[2]) and fs.isDir(tArgs[2]) then\\\\\\\\\\\\\\\
    local zipped = capture(shell.resolve(tArgs[2]))\\\\\\\\\\\\\\\
    local f = fs.open(tArgs[3]..FFormat, \\\\\\\\\\\\\\\"w\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
    f.write(zipped)\\\\\\\\\\\\\\\
    f.close()\\\\\\\\\\\\\\\
    zipped = nil\\\\\\\\\\\\\\\
    size = fs.getSize(tArgs[3]..FFormat)\\\\\\\\\\\\\\\
    result()   \\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
  \\\\\\\\\\\\\\\
elseif tArgs[1] == \\\\\\\\\\\\\\\"apply\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
    local f = fopen(tArgs[2], \\\\\\\\\\\\\\\"r\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
    if not fs.exists(tArgs[3]) then \\\\\\\\\\\\\\\
      fs.makeDir(tArgs[3]) \\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    apply(f.readAll(), tArgs[3])\\\\\\\\\\\\\\\
    size = fs.getSize(tArgs[2])\\\\\\\\\\\\\\\
    result()\\\\\\\\\\\\\\\
end\\\\\\\"\\\",\\\
  \\\"F:kernel\\\",\\\
  \\\"\\\\\\\"term.clear()\\\\\\\\\\\\\\\
term.setCursorPos(1,1)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
os.version = function()\\\\\\\\\\\\\\\
 return \\\\\\\\\\\\\\\"Orbital Recovery Environment\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- initialize kernel-mode functions\\\\\\\\\\\\\\\
if not dofile(\\\\\\\\\\\\\\\"/boot/kernel.map\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 printError(\\\\\\\\\\\\\\\"[ X ] Failed to initialize kernel library\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 if __DEBUG then\\\\\\\\\\\\\\\
  return 0\\\\\\\\\\\\\\\
 else\\\\\\\\\\\\\\\
  while true do\\\\\\\\\\\\\\\
   coroutine.yield()\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
__declare(\\\\\\\\\\\\\\\"__DEBUG\\\\\\\\\\\\\\\", __kstruct({true}))\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- load drivers and libraries\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/boot/ext/mouse.kext\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/boot/recovery/lib/libstdlua.2.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/boot/recovery/lib/libuser.2.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
__kload(\\\\\\\\\\\\\\\"/boot/recovery/lib/libgui_txui.1.so\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- syscall wrapper\\\\\\\\\\\\\\\
__declare(\\\\\\\\\\\\\\\"syscall\\\\\\\\\\\\\\\", function(sc, ...)\\\\\\\\\\\\\\\
 return dofile(\\\\\\\\\\\\\\\"/boot/system.map\\\\\\\\\\\\\\\")[sc](...)\\\\\\\\\\\\\\\
end)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- finalize kernel-mode init\\\\\\\\\\\\\\\
__kfinalize()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- output\\\\\\\\\\\\\\\
printk(1, \\\\\\\\\\\\\\\"Darwin kernel loaded\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
sleep(5)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
term.clear()\\\\\\\\\\\\\\\
term.setCursorPos(1,1)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
shell.run(\\\\\\\\\\\\\\\"/boot/recovery/app/SRWMain.app\\\\\\\\\\\\\\\")\\\\\\\"\\\",\\\
  \\\"F:sysprep\\\",\\\
  \\\"\\\\\\\"-- Darwin OOBE executable\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tArgs = {...}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if not settings then\\\\\\\\\\\\\\\
 if not __RECOVERY_SILENT and not tArgs[1] == \\\\\\\\\\\\\\\"--silent\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
  print(\\\\\\\\\\\\\\\"[ ! ] Settings API not found\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
  print(\\\\\\\\\\\\\\\"[ * ] Installing Settings API\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
 response = http.get(\\\\\\\\\\\\\\\"https://pastebin.com/raw/sULc26Yp\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 x = fs.open(\\\\\\\\\\\\\\\"/lib/libstdlua_settings.1.so\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"w\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 x.writeLine(response.readAll())\\\\\\\\\\\\\\\
 x.close()\\\\\\\\\\\\\\\
 response.close()\\\\\\\\\\\\\\\
 x = fs.open(\\\\\\\\\\\\\\\"/boot/drivers/legacy.kext\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"w\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 x.writeLine(\\\\\\\\\\\\\\\"return 1\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 x.close()\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if settings then\\\\\\\\\\\\\\\
 -- Change default extensions\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"edit.default_extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"paint.default_extension\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"img\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 -- Disable autocompletion\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"shell.autocomplete\\\\\\\\\\\\\\\", false)\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"lua.autocomplete\\\\\\\\\\\\\\\", false)\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"edit.autocomplete\\\\\\\\\\\\\\\", false)\\\\\\\\\\\\\\\
 -- Disable removable device override\\\\\\\\\\\\\\\
 -- so that /startup gets control and handles all boot events\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"shell.allow_disk_startup\\\\\\\\\\\\\\\", false)\\\\\\\\\\\\\\\
 settings.set(\\\\\\\\\\\\\\\"shell.allow_startup\\\\\\\\\\\\\\\", true)\\\\\\\\\\\\\\\
 -- Save settings\\\\\\\\\\\\\\\
 settings.save(\\\\\\\\\\\\\\\"/.settings\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if not __RECOVERY_SILENT and not tArgs[1] == \\\\\\\\\\\\\\\"--silent\\\\\\\\\\\\\\\" then print(\\\\\\\\\\\\\\\"[ v ] OOBE settings applied.\\\\\\\\\\\\\\\") end\\\\\\\"\\\",\\\
}\",\
  \"F:recovery.log\",\
  \"\\\"1d:11:09 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:11:09 | FAILED TO LOAD KERNEL-MODE ASSEMBLY: /boot/recovery/lib/libstdlua.2.so\\\\\\\
1d:11:09 | KSTOP CALLED! 0x00000002 KERNEL_ASSEMBLY_NOT_ACCESSIBLE /boot/recovery/lib/libstdlua.2.so nil nil nil\\\\\\\
1d:12:07 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:12:07 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:12:07 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:12:08 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:12:08 | Darwin kernel loaded\\\"\",\
  \"D:res\",\
  \"{\\\
  \\\"F:sprite_center.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
                       444\\\\\\\\\\\\\\\
                      44444\\\\\\\\\\\\\\\
                     1444441\\\\\\\\\\\\\\\
                    114444411\\\\\\\\\\\\\\\
                   11144444111\\\\\\\\\\\\\\\
                  e11444444411e\\\\\\\\\\\\\\\
                 ee11444444411ee\\\\\\\\\\\\\\\
                ee1114444444111ee\\\\\\\\\\\\\\\
                 ee11444444411ee\\\\\\\\\\\\\\\
                  e11444444411e\\\\\\\\\\\\\\\
                   11144444111\\\\\\\\\\\\\\\
                    114444411\\\\\\\\\\\\\\\
                     1444441\\\\\\\\\\\\\\\
                      44444\\\\\\\\\\\\\\\
                       444\\\\\\\"\\\",\\\
  \\\"F:sprite_left.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
       4\\\\\\\\\\\\\\\
      44\\\\\\\\\\\\\\\
     144\\\\\\\\\\\\\\\
    1144\\\\\\\\\\\\\\\
   11144\\\\\\\\\\\\\\\
  e11444\\\\\\\\\\\\\\\
 ee11444\\\\\\\\\\\\\\\
ee111444\\\\\\\\\\\\\\\
 ee11444\\\\\\\\\\\\\\\
  e11444\\\\\\\\\\\\\\\
   11144\\\\\\\\\\\\\\\
    1144\\\\\\\\\\\\\\\
     144\\\\\\\\\\\\\\\
      44\\\\\\\\\\\\\\\
       4\\\\\\\"\\\",\\\
  \\\"F:sprite_right.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
44\\\\\\\\\\\\\\\
444\\\\\\\\\\\\\\\
4441\\\\\\\\\\\\\\\
44411\\\\\\\\\\\\\\\
444111\\\\\\\\\\\\\\\
444411e\\\\\\\\\\\\\\\
444411ee\\\\\\\\\\\\\\\
4444111ee\\\\\\\\\\\\\\\
444411ee\\\\\\\\\\\\\\\
444411e\\\\\\\\\\\\\\\
444111\\\\\\\\\\\\\\\
44411\\\\\\\\\\\\\\\
4441\\\\\\\\\\\\\\\
444\\\\\\\\\\\\\\\
44\\\\\\\"\\\",\\\
}\",\
  \"F:security.map\",\
  \"\\\"local oldReadOnly = _G[\\\\\\\"fs\\\\\\\"][\\\\\\\"isReadOnly\\\\\\\"]\\\\\\\
local oldMove = _G[\\\\\\\"fs\\\\\\\"][\\\\\\\"move\\\\\\\"]\\\\\\\
local oldDelete = _G[\\\\\\\"fs\\\\\\\"][\\\\\\\"delete\\\\\\\"]\\\\\\\
local oldHttpGet = _G[\\\\\\\"http\\\\\\\"][\\\\\\\"get\\\\\\\"]\\\\\\\
local oldError = _G[\\\\\\\"error\\\\\\\"]\\\\\\\
_G[\\\\\\\"fs\\\\\\\"][\\\\\\\"isReadOnly\\\\\\\"] = function(path)\\\\\\\
 local find1 = shell.resolve(path) or path\\\\\\\
 if string.find(find1, \\\\\\\"boot\\\\\\\") or string.find(find1, \\\\\\\"system\\\\\\\") then\\\\\\\
  log(\\\\\\\"Attempt to access system files!\\\\\\\")\\\\\\\
  if  __DEBUG then\\\\\\\
   log(\\\\\\\"Superuser access verified.\\\\\\\")\\\\\\\
   return false\\\\\\\
  else\\\\\\\
   log(\\\\\\\"Attempt blocked.\\\\\\\")\\\\\\\
   return true\\\\\\\
  end\\\\\\\
 elseif find1 == \\\\\\\"startup\\\\\\\" or find1 == \\\\\\\"/startup\\\\\\\" then\\\\\\\
  log(\\\\\\\"Attempt to access bootloader!\\\\\\\")\\\\\\\
  log(\\\\\\\"Attempt blocked.\\\\\\\")\\\\\\\
  return true\\\\\\\
 end \\\\\\\
 return oldReadOnly(path)\\\\\\\
end\\\\\\\
_G[\\\\\\\"fs\\\\\\\"][\\\\\\\"move\\\\\\\"] = function(path1, path2)\\\\\\\
 local find2 = shell.resolve(path1)\\\\\\\
 if string.find(find2, \\\\\\\"boot\\\\\\\") or string.find(find2, \\\\\\\"system\\\\\\\") then\\\\\\\
  log(\\\\\\\"Attempt to access system files!\\\\\\\")\\\\\\\
  if  __DEBUG then\\\\\\\
   log(\\\\\\\"Superuser access verified.\\\\\\\")\\\\\\\
  else\\\\\\\
   log(\\\\\\\"Attempt blocked.\\\\\\\")\\\\\\\
   return nil\\\\\\\
  end\\\\\\\
 elseif find2 == \\\\\\\"startup\\\\\\\" or find2 == \\\\\\\"/startup\\\\\\\" then\\\\\\\
  log(\\\\\\\"Attempt to access boot loader!\\\\\\\")\\\\\\\
  log(\\\\\\\"Attempt blocked.\\\\\\\")\\\\\\\
  return nil\\\\\\\
 end \\\\\\\
 return oldMove(path1, path2)\\\\\\\
end\\\\\\\
_G[\\\\\\\"fs\\\\\\\"][\\\\\\\"delete\\\\\\\"] = function(path)\\\\\\\
 local find3 = shell.resolve(path) or path\\\\\\\
 if string.find(find3, \\\\\\\"boot\\\\\\\") or string.find(find3, \\\\\\\"system\\\\\\\") then\\\\\\\
  log(\\\\\\\"Attempt to access system files!\\\\\\\")\\\\\\\
  if  __DEBUG then\\\\\\\
   log(\\\\\\\"Superuser access verified.\\\\\\\")\\\\\\\
  else\\\\\\\
   log(\\\\\\\"Attempt blocked.\\\\\\\")\\\\\\\
   return nil\\\\\\\
  end\\\\\\\
 elseif find3 == \\\\\\\"startup\\\\\\\" or find3 == \\\\\\\"/startup\\\\\\\" then\\\\\\\
  log(\\\\\\\"Attempt to access bootloader!\\\\\\\")\\\\\\\
  log(\\\\\\\"Attempt blocked.\\\\\\\")\\\\\\\
  return nil\\\\\\\
 end \\\\\\\
 return oldDelete(path)\\\\\\\
end\\\\\\\
_G[\\\\\\\"http\\\\\\\"][\\\\\\\"get\\\\\\\"] = function(url, headers)\\\\\\\
 log(\\\\\\\"Downloaded contents of \\\\\\\"..url)\\\\\\\
 return oldHttpGet(url, headers)\\\\\\\
end\\\\\\\
--_G[\\\\\\\"error\\\\\\\"] = function(text, lvl)\\\\\\\
-- local x = lvl or 2\\\\\\\
-- local logger = fs.open(\\\\\\\"/etc/errorLog\\\\\\\", \\\\\\\"a\\\\\\\")\\\\\\\
-- logger.writeLine(tostring(os.day())..\\\\\\\"d:\\\\\\\"..textutils.formatTime(os.time(), true)..\\\\\\\" | \\\\\\\"..text)\\\\\\\
-- logger.close()\\\\\\\
-- oldError(text, x or 1)\\\\\\\
--end\\\"\",\
}",
  "D:data",
  "{}",
  "D:dev-resources",
  "{\
  \"F:.std_list\",\
  \"\\\"--[[\\\\\\\
\\\\009['shortname'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"full-name-of-program\\\\\\\",\\\\009\\\\009*\\\\\\\
\\\\009\\\\009url = \\\\\\\"url-to-direct-download\\\\\\\",\\\\009\\\\009*\\\\\\\
\\\\009\\\\009creator = \\\\\\\"name-of-creator\\\\\\\",\\\\009\\\\009*\\\\\\\
\\\\009\\\\009description = \\\\\\\"brief-description\\\\\\\",\\\\009*\\\\\\\
\\\\009\\\\009catagory = 1,\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009*\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"url-to-cc-forum-post\\\\\\\",\\\\\\\
\\\\009\\\\009icon = \\\\\\\"NFT-icon-5x3\\\\\\\",                this is not supported yet\\\\\\\
\\\\009\\\\009banner = \\\\\\\"NFT-banner-26x15\\\\\\\"           this is not supported yet either\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"beep\\\\\\\",\\\\\\\"boop\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\\\\
\\\\009* is required, all else is optional. Don't actually put an asterisk in the format though!\\\\\\\
\\\\\\\
\\\\009Bare minimum:\\\\\\\
\\\\009\\\\\\\
\\\\009['shortname'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"full-name-of-program\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"url-to-direct-download\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"name-of-creator\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"brief-description\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"url-to-cc-forum-post\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"beep\\\\\\\",\\\\\\\"boop\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\\\\
\\\\009Contract the GUI today! pastebin get P9dDhQ2m stdgui\\\\\\\
--]]\\\\\\\
\\\\\\\
local al = { --alias\\\\\\\
\\\\009ldd = \\\\\\\"~f&1LDD&8estroier\\\\\\\",\\\\\\\
\\\\009eldidi = \\\\\\\"~f&1Eldidi&8Stroyrr\\\\\\\",\\\\\\\
\\\\009oeed = \\\\\\\"~d&0oeed\\\\\\\",\\\\\\\
\\\\009lur = \\\\\\\"~b&fLur\\\\\\\",\\\\\\\
\\\\009theoriginalbit = \\\\\\\"&ftheoriginal&3bit\\\\\\\",\\\\\\\
\\\\009cloudninja = \\\\\\\"~b&0Cloud Ninja\\\\\\\",\\\\\\\
\\\\009run = \\\\\\\"&0~dRUN\\\\\\\",\\\\\\\
\\\\009download = \\\\\\\"&0~dDOWNLOAD\\\\\\\"\\\\\\\
}\\\\\\\
\\\\\\\
for k,v in pairs(al) do al[k] = v..\\\\\\\"&r~r\\\\\\\" end\\\\\\\
\\\\\\\
std.storeCatagoryNames = {\\\\\\\
\\\\009[1] = \\\\\\\"Utility\\\\\\\",  --a general utility\\\\\\\
\\\\009[2] = \\\\\\\"Pocket\\\\\\\",   --tailored specifically for pocket computers\\\\\\\
\\\\009[3] = \\\\\\\"Game\\\\\\\",  --an actual game, not an animation or whatever\\\\\\\
\\\\009[4] = \\\\\\\"Toy\\\\\\\",  --this is where animations and whatnot would go\\\\\\\
\\\\009[5] = \\\\\\\"Operating System\\\\\\\",  --links to an operating system install\\\\\\\
\\\\009[6] = \\\\\\\"Networking\\\\\\\",  --more specific utility that uses modems\\\\\\\
\\\\009[7] = \\\\\\\"Malicious\\\\\\\",  --malicious code is allowed here, but PLEASE label it as such\\\\\\\
\\\\009[8] = \\\\\\\"API\\\\\\\",  --if it doesn't do anything on its own\\\\\\\
\\\\009[9] = \\\\\\\"Turtle\\\\\\\",  --For turtles, using the Turtle API.\\\\\\\
\\\\009[10] = \\\\\\\"Command\\\\\\\",  --If it uses the command API at all\\\\\\\
\\\\009[11] = \\\\\\\"HTTP\\\\\\\",  --If it is centred around HTTP, put it here.\\\\\\\
}\\\\\\\
\\\\\\\
std.storeCatagoryColors = {\\\\\\\
\\\\009[1] = {\\\\\\\
\\\\009\\\\009txt = colors.black,\\\\\\\
\\\\009\\\\009bg = colors.pink\\\\\\\
\\\\009},\\\\\\\
\\\\009[2] = {\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009bg = colors.red\\\\\\\
\\\\009},\\\\\\\
\\\\009[3] = {\\\\\\\
\\\\009\\\\009txt = colors.lightBlue,\\\\\\\
\\\\009\\\\009bg = colors.blue\\\\\\\
\\\\009},\\\\\\\
\\\\009[4] = {\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009bg = colors.green\\\\\\\
\\\\009},\\\\\\\
\\\\009[5] = {\\\\\\\
\\\\009\\\\009txt = colors.black,\\\\\\\
\\\\009\\\\009bg = colors.white\\\\\\\
\\\\009},\\\\\\\
\\\\009[6] = {\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009bg = colors.purple\\\\\\\
\\\\009},\\\\\\\
\\\\009[7] = {\\\\\\\
\\\\009\\\\009txt = colors.red,\\\\\\\
\\\\009\\\\009bg = colors.orange\\\\\\\
\\\\009},\\\\\\\
\\\\009[8] = {\\\\\\\
\\\\009\\\\009txt = colors.black,\\\\\\\
\\\\009\\\\009bg = colors.yellow\\\\\\\
\\\\009},\\\\\\\
\\\\009[9] = {\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009bg = colors.brown\\\\\\\
\\\\009},\\\\\\\
\\\\009[10] = {\\\\\\\
\\\\009\\\\009txt = colors.gray,\\\\\\\
\\\\009\\\\009bg = colors.lime\\\\\\\
\\\\009},\\\\\\\
\\\\009[11] = {\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009bg = colors.cyan\\\\\\\
\\\\009},\\\\\\\
}\\\\\\\
\\\\\\\
std.storeURLs = {\\\\\\\
\\\\009['std'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"~d&0Super Text Downloader\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/3PBKGR4k\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced file downloader intended to replace Pastebin, but with many more sources to download from.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24739-super-text-downloader-v141-pastebin-clone-downloader/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"superb\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['stdgui'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"~d&0Super Text Downloader &4GUI\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/P9dDhQ2m\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A decent GUI interface for my program STD. In case you want it, because it's good. Can sort though categories and has a search function. Works with advanced and normal computers alike, along with pocket computers.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26561-super-text-downloader-gui-interface/\\\\\\\",\\\\\\\
\\\\009\\\\009icon = {\\\\\\\"\\\\\\\\0308\\\\\\\\0317STD\\\\\\\\031f \\\\\\\\030f \\\\\\\",\\\\\\\"\\\\\\\\0308\\\\\\\\0317GUI\\\\\\\\031f \\\\\\\\0300 \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f    \\\\\\\\0300 \\\\\\\"},\\\\\\\
\\\\009\\\\009banner = {\\\\\\\"\\\\\\\\0307\\\\\\\\031f                            \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f   \\\\\\\\030f                      \\\\\\\\0307   \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f  \\\\\\\\030f  \\\\\\\\0304     \\\\\\\\030f  \\\\\\\\0304       \\\\\\\\030f  \\\\\\\\0304    \\\\\\\\030f  \\\\\\\\0307  \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f  \\\\\\\\030f \\\\\\\\0304 \\\\\\\\030f    \\\\\\\\0304  \\\\\\\\030f    \\\\\\\\0304 \\\\\\\\030f     \\\\\\\\0304 \\\\\\\\030f  \\\\\\\\0304  \\\\\\\\030f \\\\\\\\0307  \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f  \\\\\\\\030f \\\\\\\\0304 \\\\\\\\030f       \\\\\\\\0308  \\\\\\\\030f \\\\\\\\0304 \\\\\\\\030f \\\\\\\\0308   \\\\\\\\030f \\\\\\\\0304 \\\\\\\\030f\\\\\\\\0314 \\\\\\\\031f  \\\\\\\\0304 \\\\\\\\030f \\\\\\\\0307  \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f  \\\\\\\\030f \\\\\\\\0304     \\\\\\\\030f  \\\\\\\\0308  \\\\\\\\030f  \\\\\\\\0304 \\\\\\\\030f \\\\\\\\0308  \\\\\\\\030f  \\\\\\\\0304 \\\\\\\\030f   \\\\\\\\0304 \\\\\\\\030f \\\\\\\\0307  \\\\\\\",\\\\\\\"\\\\\\\\030f\\\\\\\\031f        \\\\\\\\0304 \\\\\\\\030f \\\\\\\\0308 \\\\\\\\030f  \\\\\\\\0304  \\\\\\\\030f \\\\\\\\0308 \\\\\\\\030f  \\\\\\\\0304 \\\\\\\\030f   \\\\\\\\0304  \\\\\\\\030f \\\\\\\\0307  \\\\\\\",\\\\\\\"\\\\\\\\030f\\\\\\\\031f \\\\\\\\0304 \\\\\\\\030f     \\\\\\\\0304  \\\\\\\\030f   \\\\\\\\0304  \\\\\\\\030f    \\\\\\\\0304  \\\\\\\\030f \\\\\\\\0304   \\\\\\\\030f  \\\\\\\\0307  \\\\\\\",\\\\\\\"\\\\\\\\030f\\\\\\\\031f \\\\\\\\0304       \\\\\\\\030f  \\\\\\\\0304   \\\\\\\\030f  \\\\\\\\0308 \\\\\\\\030f \\\\\\\\0304     \\\\\\\\030f   \\\\\\\\0307   \\\\\\\",\\\\\\\"\\\\\\\\030f\\\\\\\\031f              \\\\\\\\0308  \\\\\\\\030f       \\\\\\\\0308  \\\\\\\\0307   \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f   \\\\\\\\0308                    \\\\\\\\0307     \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f \\\\\\\\030f \\\\\\\\0310GRAPHICAL USER INTERFACE \\\\\\\\0307 \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f    \\\\\\\\0308 \\\\\\\\0307 \\\\\\\\0308              \\\\\\\\0307        \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f         \\\\\\\\0308  \\\\\\\\0307  \\\\\\\\0308  \\\\\\\\0307 \\\\\\\\0308  \\\\\\\\0307          \\\\\\\",\\\\\\\"\\\\\\\\0307\\\\\\\\031f                            \\\\\\\"},\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"superb\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['neovari'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"NeoVariable Client API\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/LDDestroier/neovari/master/neovari\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A networking API that stores 'cloud variables' on neovariable servers, as well as having network 'events', to make creating modem-based multiplayer games or applications easier.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/29392-neovariable-modem-based-cloud-variable-solution-with-support-for-events/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"varsword\\\\\\\",\\\\\\\"neovarsword\\\\\\\",\\\\\\\"network\\\\\\\",\\\\\\\"modem\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['neoserver'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"NeoVariable Server\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/LDDestroier/neovari/master/neoserver\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A networking server for use with the client API. Stores 'cloud variables' and can relay network 'events' sent from clients. Intended to make creating multiplayer games or applications easier.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/29392-neovariable-modem-based-cloud-variable-solution-with-support-for-events/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"varsword\\\\\\\",\\\\\\\"neovarsword\\\\\\\",\\\\\\\"network\\\\\\\",\\\\\\\"modem\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['advancedpaint'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Advanced Paint\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/AWbyyx5E\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"HPWebcamAble\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A paint program tailored specifically to use on multiple advanced monitors at the same time. Useful for making a room out of monitors and painting the walls.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/21558-advanced-paint/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ap\\\\\\\",\\\\\\\"monitors\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['gitget'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Gitget\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://pastebin.com/raw/TZd5PYgz\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A simple Github repository downloader.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/29376-gitget-a-simple-github-repository-downloader/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"github\\\\\\\",\\\\\\\"repository\\\\\\\",\\\\\\\"downloader\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ccdoom'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Doom\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/8RwQQk3B\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Xelostar\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A flippin' game of Doom, created in Xelostar's 3-D polygonal engine. While it has maps more in line with Wolfenstein 3-D, enemies are 3-D models and you've got a gun.\\\\\\\\nThis is an installer, so I implore that you \\\\\\\"..al.run..\\\\\\\".\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/29365-doom-ccs-first-first-person-shooter-with-online-highscores/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ccdoom\\\\\\\",\\\\\\\"wolfenstein3d\\\\\\\",\\\\\\\"wolf3d\\\\\\\",\\\\\\\"id\\\\\\\",\\\\\\\"3-d\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pue'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Paintutils Extra\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://pastebin.com/raw/7XAmsAbX\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An extension to the existing paintutils API that adds stretching, centering, merging, and various optimizations/extra functions.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/29109-paint-utils-extra-the-essential-api-extention-for-your-paintutils-needs/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"colors\\\\\\\",\\\\\\\"colours\\\\\\\",\\\\\\\"nfp\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['axiom-ui'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Axiom UI\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/nothjarnan/axiom/master/install.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Nothy\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A neato user interface with various programs pre-installed. Although if you ask me, it's as much an OS as any other \\\\\\\\\\\\\\\"OS\\\\\\\\\\\\\\\" is.\\\\\\\\nSince this is an install file, I urge you to \\\\\\\"..al.run..\\\\\\\".\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26686-axiom-the-easy-to-use-uios/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"os\\\\\\\",\\\\\\\"nothjarnan\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['textpaint'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Textpaint\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Programs/textpaint.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A Paint Program for .nft files, a format that allows text as well as background colors.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28859-textpaint-a-better-paint-program/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"nft\\\\\\\",\\\\\\\"characters\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['chatkeyboard'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Chatkeyboard\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Command/chatkeyboard.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"This program uses the chat for keyboard input!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 10,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28729-chatkeyboard/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"chatbox\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['screentool'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Screentool\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Tools/screentool.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"This allows you to make Screenshots! Just start the Screentool. Now you have to press Pause to make a Screenshot. Supports only CraftOS 1.7.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28845-screentool-make-screenshots/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"screenshot\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['imagecon'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Imagecon\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Tools/imagecon.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"This tool convert a .nfp image to code.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28816-imagecon-convert-a-image-to-code/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"paint\\\\\\\",\\\\\\\"code\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['faketime'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Faketime\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Other/faketime.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Fake what time it is by setting os.time() to return whatever you input.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28717-faketimefakeday/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"time\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['fakeday'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Fakeday\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Other/fakeday.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Fake what day it is by setting os.day() to return whatever you input.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28717-faketimefakeday/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"day\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['cron'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Cron\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/Other/cron.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Cron let you run your programs at a custom time\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28136-cron-runs-programs-automatic\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"cron\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lightspeed'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Lightspeed Alpha Installer\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://pastebin.com/raw/JjFsqCMD\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Xelostar\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A top-down spaceship game inspired by Faster Than Light. Has a big ol' world to explode, enemy spaceships to blast, and the ability to upgrade your ship.\\\\\\\\nThis is an installer, so please \\\\\\\"..al.run..\\\\\\\" and have the Argument be where you will extract the game.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28645-lightspeed-alpha-v10/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ftl\\\\\\\",\\\\\\\"fasterthanlight\\\\\\\",\\\\\\\"spaceships\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['zombease'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Zombease (beta)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://pastebin.com/raw/SNnkfxnx\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"viluon\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A top-down survival shooter where you kill zombies with various weapons. Lemme tell ya, this game has some of the best graphics ComputerCraft can handle.\\\\\\\\nThis game's in beta, so expect bugs and poor framerate.\\\\\\\\nThis is an installer, so please \\\\\\\"..al.run..\\\\\\\" this.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28093-zombease-beta/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"zombies\\\\\\\",\\\\\\\"shooter\\\\\\\",\\\\\\\"top-down\\\\\\\",\\\\\\\"graffiks\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009[\\\\\\\"mynaptic\\\\\\\"] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Mynaptic\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://pastebin.com/raw/UG43PZZ7\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"&9Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A graphical interface for Lyqyd's own Packman package manager.\\\\\\\\nThis is an installer, so please \\\\\\\"..al.run..\\\\\\\".\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27327-mynaptic-a-gui-for-packman/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"packman\\\\\\\",\\\\\\\"pacman\\\\\\\",\\\\\\\"gui\\\\\\\",\\\\\\\"graphical user interface\\\\\\\",\\\\\\\"programms\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['itemsystem'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Item System for Plethora + CCTweaks\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/6jrfV0sZ\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"roger109z\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An item management program for use with computers connected to chests.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28438-item-system-for-use-with-plethora-and-cctweaks/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"chest\\\\\\\",\\\\\\\"management\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['wave-amp'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"wave-amp\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/pAEiHKK1\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"CrazedProgrammer\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A player of NBS (Note Block Studio) files using iron note blocks in ComputerCraft! It comes with a built-in sexy UI, a sexy visualizer, various play modes (normal, stop, repeat, shuffle), and has theming capability!\\\\\\\\nBecause it uses iron note blocks, wave-amp requires either a command computer or MinimalPeripherals.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28091-wave-amp-a-fully-featured-music-player/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"noteblockstudio\\\\\\\",\\\\\\\"nbs\\\\\\\",\\\\\\\"musical\\\\\\\",\\\\\\\"ironnoteblock\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ccfbrowse'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ccfBrowse\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://raw.twijnweb.com/ccfbrowse/ccfbrowse\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Twjin\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A ComputerCraft program for viewing the ComputerCraft forums! While not the most versitile, if a forum post follows the right format, you can download the program straight from the post!\\\\\\\\nCommenting on posts is impossible, and so is logging on, however.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28182-ccfbrowse-computercraft-forum-program-browser/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"computercraft\\\\\\\",\\\\\\\"forums\\\\\\\",\\\\\\\"browsing\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['opuseditor'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Opus Editor\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/pEFCYXX1\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Kepler\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"The standard edit program of Opus OS, now standalone. Comes with several new features to make it superior to regular 'edit', such as mouse text selecting, built-in copy/cut/paste, a goto line function, multiple undo, and more standard key shortcuts (hold CTRL, then press C or V or X).\\\\\\\\n\\\\\\\\nThis is not an installer, so DOWNLOAD all you like.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28096-opus-editor/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"opusos\\\\\\\",\\\\\\\"undo\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['opusos'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Opus OS\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/sj4VMVJj\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Kepler\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced, multitasking, computer/turtle/pocket OS with built-in remote shell access, screen sharing, file manager, and a damn fine UI.\\\\\\\\nComes with its own store based on STDGUI! Ain't that something?\\\\\\\\n\\\\\\\\nThis is an installer, so please \\\\\\\"..al.run..\\\\\\\" it if you wish to install Opus OS right now.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27810-opus-os/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"opal\\\\\\\",\\\\\\\"multitasking\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lighttext'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"LightText\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/PFa3LY1Y\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"supernicejohn\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A text editor with Lua syntax highlighting.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28045-lighttext/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"editor\\\\\\\",\\\\\\\"highlighting\\\\\\\"}\\\\\\\
\\\\009},\\\\\\\
\\\\009['tps'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Turtle Positioning System\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/PsTiQ5eu\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"For wireless turtles.\\\\\\\\nTurn your single turtle into a GPS server! Every time it gets a GPS request, it continutes moving in a set 2*2*2 pattern to simulate four GPS server PCs. For the frugal player!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 9,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28060-tps-turtle-positioning-system-emulate-a-four-computer-gps-cluster-with-one-turtle/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"gps\\\\\\\",\\\\\\\"global\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['monc2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Monc 2.0\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/LxbBS18S\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A completely upgraded version of the original Monc (despite not sharing code...rewrite!)\\\\\\\\nMirrors the output of the terminal to connected monitors through network cables or direct connections.\\\\\\\\nThis completely obsoletes Monc 1, so good on you for clicking this one.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28076-monc-v20-terminal-to-monitors-mirroring/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"monitors\\\\\\\",\\\\\\\"mirroring\\\\\\\",\\\\\\\"monk\\\\\\\",\\\\\\\"terminal\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['micropaint'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Micropaint\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/tMRzJXx2\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An experimental painting program that specializes in pictures with the new tiny pixel (teletext?) characters.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27331-micropaint-experimental-painting-program-for-tiny-pixels/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"tiny\\\\\\\",\\\\\\\"pixels\\\\\\\",\\\\\\\"teletext\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['gravjump'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Grav Jump\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/c3iM9Kxu\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"RatcheT2497\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An arcade game for advanced (pocket) computers. Flip up and down onto platforms to keep yourself from touching the floor and ceiling menace. You can only flip once per platform, so don't suck too much at it!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27964-grav-jump/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"gravity\\\\\\\",\\\\\\\"jumping\\\\\\\",\\\\\\\"flip\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['recgif'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"RecGif\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/MgMmd2dC\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Bomb Bloke\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A GIF recorder! You can save your screen output as a GIF! This program is super useful for making screenshots of your programs, if you can't use something like Gyazo GIF.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24840-recgif/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"jif\\\\\\\",\\\\\\\"recorder\\\\\\\",\\\\\\\"screenshot\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['fsexpose'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"FsExpose\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/93ERVyeQ\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Piorjade\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic file explorer...with a lemon twist! Clicking on files will 'expose' them on the left bar. Other than that, it's a file explorer as any other.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27770-filebrowser-fsexpose/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"file\\\\\\\",\\\\\\\"browser\\\\\\\",\\\\\\\"manager\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['wolf3d'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Wolf3d-style 3D engine\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/qpV90qbM\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"GopherAtl\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"This is a 3-D raycaster engine reminiscent of the old game Wolfenstein 3-D, where all walls are aligned to a grid and of a single height. Did you know this engine was used for Maze-3D, which is a treasure disk? I thought that was interesting.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/10786-wolf3d-style-3d-engine-proof-of-concept/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"3-d\\\\\\\",\\\\\\\"wolfenstein\\\\\\\",\\\\\\\"raycasters\\\\\\\",\\\\\\\"3dmaze\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['settingsman'] = { --man has capcom gotten lazy with the robot master names\\\\\\\
\\\\009\\\\009title = \\\\\\\"Settingsmanager\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/Wilma456/Computercraft/master/settingsmanager.lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wilma456\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A simple-to-use graphical interface for modifying ComputerCraft settings.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27890-settingsmanager-manage-the-settings-of-your-computer/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ghv'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Glorified Help Viewer\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/gzz1Gt4V\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Admicos\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A fancy schmancy way of looking at program help files. Uses a proprietary format (.ghv), but it downloads a precompiled list of program help texts.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27898-ghv-glorified-help-viewer/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"fancy\\\\\\\",\\\\\\\"schmancy\\\\\\\",\\\\\\\"graphical\\\\\\\",\\\\\\\"gui\\\\\\\",\\\\\\\"manual\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['trace'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"trace\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/CYQp63kb\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Bomb Bloke\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Stack tracing for finding errors in programs. Usually better than just running a buggy program and seeing what red text washes ashore.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27844-trace-simple-stack-traces-for-errors/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stack\\\\\\\",\\\\\\\"tracing\\\\\\\",\\\\\\\"trace\\\\\\\",\\\\\\\"errors\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['housecloud-cli'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"HouseCloud (Client)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/yVAEnMuf\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"houseofkraft\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A file-syncing program/FTP server. Its main purpose is to allow easy downloading of a premade set of files, but can also be used for remote file storage.\\\\\\\\nThis is NOT encrypted (yet), and soon it will be HTTP based.\\\\\\\\nClient.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27847-housecloud-the-next-cloud-in-minecraft/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ftp\\\\\\\",\\\\\\\"syncing\\\\\\\",\\\\\\\"file\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['housecloud-srv'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"HouseCloud (Server)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/XqyhE7S6\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"houseofkraft\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A file-syncing program/FTP server. Its main purpose is to allow easy downloading of a premade set of files, but can also be used for remote file storage.\\\\\\\\nThis is NOT encrypted (yet), and soon it will be HTTP based.\\\\\\\\nServer.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27847-housecloud-the-next-cloud-in-minecraft/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ftp\\\\\\\",\\\\\\\"syncing\\\\\\\",\\\\\\\"file\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ipv1-cli'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"InZernet Protocol v1 (Client)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/y9vEAzRg\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"codywtworld\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An attempt at recreating the whole TCP/IP network structure in ComputerCraft.\\\\\\\\nClient.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23772-ipv1-inzernet-protocol-version-1-in-game-internet/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"internet\\\\\\\",\\\\\\\"tcp ip\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ipv1-srv'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"InZernet Protocol v1 (Server)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Cv8JmnzC\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"codywtworld\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An attempt at recreating the whole TCP/IP network structure in ComputerCraft.\\\\\\\\nServer.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23772-ipv1-inzernet-protocol-version-1-in-game-internet/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"internet\\\\\\\",\\\\\\\"tcp ip\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ipv1-switch'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"InZernet Protocol v1 (Switch)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/4m1wGz37\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"codywtworld\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An attempt at recreating the whole TCP/IP network structure in ComputerCraft.\\\\\\\\nNetwork switch.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23772-ipv1-inzernet-protocol-version-1-in-game-internet/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"internet\\\\\\\",\\\\\\\"tcp ip\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ipv1-router'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"InZernet Protocol v1 (Router)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/sPBtt9j2\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"codywtworld\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An attempt at recreating the whole TCP/IP network structure in ComputerCraft.\\\\\\\\nNetwork router.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23772-ipv1-inzernet-protocol-version-1-in-game-internet/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"internet\\\\\\\",\\\\\\\"tcp ip\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lddfm'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"LDDFM\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/wfdb986Z\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An API-based file manager/picker intended for picking a specific file/folder without the use of a read() prompt.\\\\\\\\nCan be scaled to fit into a specific set of coordinates, so you can cram it into an existing GUI or CLI.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27584-lddfm-an-api-based-file-manager-for-your-programs/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"file\\\\\\\",\\\\\\\"folder\\\\\\\",\\\\\\\"manager\\\\\\\",\\\\\\\"picker\\\\\\\"}\\\\\\\
\\\\009},\\\\\\\
\\\\009['fakechat'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"FakeChat Player Chat Spoofer\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/n3K9Nt3D\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"This connects to fakechat servers, or can be used directly on command computers. Spoof the chat of players by typing in a message, and it converts to a JSON format and runs it through tellraw. This is both a client and server!\\\\\\\\nOh, and be responsible, eh?\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 10,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/28139-fakechat-player-chat-spoofing-via-commandstellraw/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"spoofer\\\\\\\",\\\\\\\"client\\\\\\\",\\\\\\\"server\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['progdor'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Progdor\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/YXx5jjMV\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"This is a quick utility for turning folders into files, and back. Also compresses using the CCA API.\\\\\\\\nHas been blessed by the fabled &eburninator&r of legend.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27273-progdor-an-even-easier-way-to-bundle-a-folder-into-one-file/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"bundle\\\\\\\",\\\\\\\"trogdor\\\\\\\",\\\\\\\"burninate\\\\\\\",\\\\\\\"folder\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['stitch'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Stitch\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/CTrVdFK9\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"KingOfGamesYami\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An API used to make big monitors out of smaller monitors. Not an original idea, but this solution works damn well. It creates a 'stitch' terminal object that can be safely redirected to with term.redirect(stitch)\\\\\\\\nThis is the minified version.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26307-stitch-massive-monitors/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"monitors\\\\\\\",\\\\\\\"billboard\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['dodge'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Wall Dodge!\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/fDTts7wz\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic game where you dodge walls coming from the right. The space you have to dodge within gets smaller gradually.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27230-wall-dodge/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['monc'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Monc\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/FRJRneKL\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A utility for mirroring your terminal to your monitor. Only works with one at a time, though, and is otherwise still buggy...but it works, more or less.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23044-monc-monitor-program-that-prints-to-screen/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"monitor\\\\\\\",\\\\\\\"mirror\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['cobalt'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Cobalt\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/h5h4fm3t\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"CompuTech\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"(CCJam 2016 contender!)\\\\\\\\n\\\\\\\\nA callback wrapper for ComputerCraft Lua, similarly to how Love2D handles. The aim is to make programming in ComputerCraft easier and more centralized. This is also an installer file, so do be sure to \\\\\\\"..al.run..\\\\\\\" it.\\\\\\\\n\\\\\\\\nThis comes bundled with Cobalt UI, a graphical framework used for interface design. If you want that, select 'Y' on the installer.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27064-cobalt-a-callback-wrapper-for-computercraft/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ccjam2016\\\\\\\",\\\\\\\"framework\\\\\\\",\\\\\\\"ui\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pmang'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Peripheral Manager\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/4UrrFHzS\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lego Stax\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"(CCJam 2016 contender!)\\\\\\\\n\\\\\\\\nA graphical interface to display and configure wired or otherwise connected peripherals. It has icons for every one of the usual ComputerCraft peripherals, and can even do some slightly advanced functions with some peripherals, like running a program on a monitor.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27078-ccjam-2016-peripheral-manager/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ccjam2016\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['jamrogue'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"jamROGUE\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/t9aev7fA\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lemmmy\\\\\\\", --And a big thanks to you for this!\\\\\\\
\\\\009\\\\009description = \\\\\\\"(CCJam 2016 contender!)\\\\\\\\n\\\\\\\\nAn online multiplayer roguelike game with an inventory system, item drops, enemies with AI, chat, and everything is rendered with the beautiful smaller pixels! As such, this requires ComputerCraft 1.76 or later. This game is - hands down - the best CC game for the entire mod.\\\\\\\\nThis is the instaler, so make sure to \\\\\\\"..al.run..\\\\\\\" it.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"none exists, yet... \\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ccjam2016\\\\\\\",\\\\\\\"roguelike\\\\\\\",\\\\\\\"online\\\\\\\",\\\\\\\"multiplayer\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['classic'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Classic - pretty OOP\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/MfsdVz6U\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Kouksi44\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A rather attractive implementation of object oriented programming in Lua. OOP programming still kinda illudes me, so I can't go on that much about its awesome features and whatnot.\\\\\\\\nTo use this, use dofile() instead of os.loadAPI()\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26305-classic-pretty-oop-in-cc/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"object oriented\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['3gamepak'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"3 Game Pak (Dr. Dan, Stacker DX, Bird Hunt!)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/EmLqt5D2\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"CrazedProgrammer\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"(CCJam 2016 contender!)\\\\\\\\n\\\\\\\\nA rad pack of three games for ComputerCraft 1.76 and later, because it utilizes the pixel characters to look cool as hell!\\\\\\\\n\\\\\\\\nDr. Dan - A clone of Dr. Mario on the Gameboy\\\\\\\\nStacker DX - A remake of 'Stacker' by KingOfGamesYami\\\\\\\\nBird Hunt - A carbon copy of Duck Hunt on the good ol' NES\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27079-ccjam-2016-3-game-pak-3-fun-games-in-one-tight-package/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ccjam2016\\\\\\\",\\\\\\\"duck hunt\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['far'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"FAR Remote Shell\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://raw.githubusercontent.com/InternetUnexplorer/CCJam-2016/master/far\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"InternetUnexplorer\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"(CCJam 2016 contender!)\\\\\\\\n\\\\\\\\nA smart remote shell, similar in function to NSH but...smarter! It can even work with terminal sizes differing from the client's. The method of gathering and transmitting screen data is also well-optimized, pretty much fixing screen flickering or lag.\\\\\\\\nThis is the program, not an installer, so feel free to DOWNLOAD it.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/27077-far-actual-remote-shell-for-cc/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ccjam2016\\\\\\\",\\\\\\\"nsh\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['solitaire'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Solitaire\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/wg6xLisV\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"It's solitaire! Available in the Klondike, Blackjack, Spider Solitaire, and Golf. This game is probably the number one source of procrastination in the realm of computers! This is NOT an installer, so DOWNLOAD all you like.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20632-nfs-games-page-skyfall-released/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"cards\\\\\\\",\\\\\\\"klondike\\\\\\\",\\\\\\\"blackjack\\\\\\\",\\\\\\\"spider\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['columndrop'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Column Drop\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/ScBncvEw\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A simple game where you control falling pillars composed of three colours, and you match three or more in a row (or diagonally.) This is an installer, so \\\\\\\"..al.run..\\\\\\\" it.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20632-nfs-games-page-skyfall-released/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['bankvault'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Bank Vault\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/q7XJD7Q0\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A recreation of the classic Japanese puzzle game Sokoban, where you push blocks into goal zones to proceed. This is an installer, so \\\\\\\"..al.run..\\\\\\\" it instead of downloading.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20283-game-bank-vault/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"sokoban\\\\\\\",\\\\\\\"puzzle\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['elements'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Periodic Table of Elements\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/vxLQ1fVb\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A scrollable, clickable, coloured periodic table of elements for advanced computers! Because it serves no in-game purpose, it's a 'toy'. But, it's a pretty bohring one as far as toys go.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26814-periodic-table-of-elements-scrollable-clickable-colored/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"science\\\\\\\",\\\\\\\"chemistry\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['backspace'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Backspace\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/NF5uxU2n\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"H4X0RZ\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Backspace is an open-source alternative to Pastebin designed mainly to store small snippets of code (although you could store big things on it.) This is the API for CraftOS.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24850-backspace-the-opensource-pastebin-alternative/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"pastebin\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['reboost'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ReboOSt\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/LmmNQjSB\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Chickenbreadlp\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced graphical OS. Not much else to say, but it looks nice. It's a recreation of ApfelOS (which is crap) made with the new-found coding skills of Chickenbreadlp. It's an installer, so use the \\\\\\\"..al.run..\\\\\\\" button, not DOWNLOAD.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25542-reboost-beta-1/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['bsod'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"BSOD test\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/z8FX8ZzA\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A joke demonstration of an error screen that resembles the infamous Windows blue screen of death. This code is meant to be put in your program (as a joke, of course), and the BSOD function to be called should your program error.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"Forum post? No forum post here... \\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"blue screen death\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['bread'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Bread - BLittle redirect script\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/aL6cKC6a\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Bomb Bloke, mostly\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A small script that redirects a program through BLittle. Only works on CC 1.76 and later versions (for Minecraft 1.8 and later), and can be used with the 'monitor' command to achieve stunning resolutions (at the cost of a garbage framerate).\\\\\\\\nI called it bread because I felt like it. Please don't get sour, 'doh.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"It doesn't 'ave one. \\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"blittle\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['shell-sc'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Shell\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Av5AL75s\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"dan200\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A script that clears the screen and executes '/rom/programs/shell'. Nothing more. I put this on the store in case you are in a situation where you need this.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"Doesn't have one, nor does it need one. \\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['skyfall'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Skyfall\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/mjyCbPks\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A cool little arcade game for advanced computers where you try to reach the sky while blocks of doom are trying to crush you to your untimely demise.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20632-nfs-games-page-skyfall-released/\\\\\\\", --this program does not have a dedicated forum post, just as a game for nitrogenfingers' game store\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['goldrunner'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Gold Runner\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/tEEpxPyh\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A carbon copy of the classic video game Lode Runner. It really is, it's that faithful!\\\\\\\\nThis is an installer, not the game itself, so use the \\\\\\\"..al.run..\\\\\\\" command.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/13269-gold-runner/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"lode runner\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['jumpgame'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Jumping Game (BETA)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/tDe6g6gw\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"KingOfGamesYami\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A simple (to play) game where you jump over randomly generated pillars. Gets rather hard, I must say.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24250-beta-jumping-game/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['luaide'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"LuaIDE\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/vyAZc6tJ\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"GravityScore\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced IDE for the Lua programming language. Has many features that you don't see in many other editors, including a find, goto line, even a per-line error checker functions. You'll like editing in-game!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/12347-luaide-10-you-might-actually-like-editing-in-game/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['circle-scr'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Circle Screensaver\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/rXQhBupz/\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A really trippy screensaver that makes lots of super-colorful concentric circles on your screen. It redraws the whole screen every frame, so I wouldn't use it in multiplayer. Oh, who am I kidding...\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26618-circular-screensaver/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['packman'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Packman\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/4zyreNZy\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lyqyd\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A packaging program used to install applications through packman repositories (like STD, but different). Can be used to easily install Lyqyd's programs. This is the install script, and not the actual program.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22268-packman-a-package-management-tool/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"pacman\\\\\\\",\\\\\\\"package\\\\\\\",\\\\\\\"packaging\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['voice'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Voice\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/r32RjcK0\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"KnightMiner\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A remote control program for turtles that uses chatboxes as the input.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 9,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25925-voice-a-twist-on-the-classic-turtle-remote-using-a-chatbox/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"turtle\\\\\\\",\\\\\\\"chatbox\\\\\\\",\\\\\\\"remote control\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['goto'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Simple \\\\\\\\\\\\\\\"GOTO\\\\\\\\\\\\\\\" program\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/HS3Vv8z8\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"macss_\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic program which sends a turtle to specified coordinates using GPS.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 9,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/18827-simple-goto-program/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"turtle\\\\\\\",\\\\\\\"gps\\\\\\\",\\\\\\\"coordinates\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['sinfo'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"sInfo\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/dEZn5mDe\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Waitdev_\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A program that grabs information about minecraft servers and displays it. Whether it's online/offline, amount of players, server name and description...it can do it all! This is an install script, not the program itself, so use the \\\\\\\"..al.run..\\\\\\\" command.. As it uses the 'pastebin' command during installation, do NOT name this 'sinfo'.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25742-sinfo-server-information-grabber/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"server\\\\\\\",\\\\\\\"ping\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['crateapi'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Crate API\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/QNhhry4M\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"ItsRodrick\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A command API that spawns chests of items from the sky as falling sand entities, like supply drops from airplanes!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 10,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22805-crate-api-summon-chests-with-items/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"drops\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['bannereditor'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Banner Editor (MC1.8 +)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/YxLzGY53\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Bomb Bloke\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A tool that exports picture files onto a chestful of banners, so you can your own custom design! As it uses banners, it is for Minecraft 1.8 and newer.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 10,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26391-mc18-banner-editor/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['worldporter'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"WorldPorter\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/pXjdQDf6\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Bomb Bloke\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A super awesome program that scans all the blocks in a specified coordinate range, and can print them out later. This is the next best thing if you don't use bukkit/spigot (cough cough acora cough)\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 10,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22769-worldporter/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"worldedit\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['skyterm'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"skyTerm\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Wq132HyT\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Bomb Bloke\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A command API that uses minecraft blocks in the sky as a terminal object. While rad as fuck, it lags like mad.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 10,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22967-skyterm/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"terminal\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pain'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"PAIN paint program\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/wJQ7jav0\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A paint program that saves in a table format, and has a scrolling canvas. Supports NFP, NFT, BLT, UCG, and GIF as well.\\\\\\\\nSince I made it, lemme tell you it's a million times better than the default paint program.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26418-pain-my-first-paint-program/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"nfp\\\\\\\",\\\\\\\"nft\\\\\\\",\\\\\\\"blt\\\\\\\",\\\\\\\"ucg\\\\\\\",\\\\\\\"gif\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['nova'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Nova Horizon\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/m342HLd6\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Exerro\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced graphical OS with a very well polished interface. So good, I actually confused the creator with Oeed. Not kidding.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20888-nova-horizon-v12/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['oneos'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"OneOS Version 2\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/E1xftzLa\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.oeed,\\\\\\\
\\\\009\\\\009description = \\\\\\\"Arguably the most advanced OS on the forums, and has a GUI and mindset inspired by Mac OS X. Had an app store once, but it since went offline. It also uses the Bedrock framework, which isn't well optimized for use on servers, so avoid using tons of animations while online.\\\\\\\\n~e&0Important!&r~r This OS has been obsoleted by Oeed.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/17286-oneos-version-2-the-all-in-one-operating-system/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['xeonos'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Xeon OS\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/zY24cE2L\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"StrangeGamerHD\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An elegant looking graphical OS for advanced computers, built around the menu (similar to Windows's start menu).\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26457-xeon-os/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['simsoft'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"SimSoft Yellow (1.7.x and below)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/jP1qXpUX\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Simlor\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A cool graphical OS for advanced computer with icons and a menu. Also has a special SimSoft store! Speaking of which...\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26046-simsoft-3-a-simple-and-fast-os/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['simsoft189'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"SimSoft Yellow (1.8.9 and above)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/jP1qXpUX\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Simlor\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A cool graphical OS for advanced computer with icons and a menu. Also has a special SimSoft store! Speaking of which...\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26046-simsoft-3-a-simple-and-fast-os/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['o'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"O\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/4HLxeETG\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"ProjectB\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A secure and good lookin' terminal-based OS. Probably the most complete one on the forums, what with it not being terribly complicated.\\\\\\\\nThis is an installer, so please kindly \\\\\\\"..al.run..\\\\\\\" this.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23391-o/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"ohhhhhhhh\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['omnios'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"OmniOS\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/2DMDuHci\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Creator\\\\\\\", --ha ha\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced, multitasking graphical OS that aims to be able to be used as generally as possible. I would be more specific, if it would bloody work under CCEmuRedux.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 5,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24321-omnios-the-os-than-can-do-almost-anything/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['trollos'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"TrollOS\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/dPqkFjKq\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"ExplosiveFerrets\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"While not an OS, and not TRULY malicious, it's not a toy, I'll just put it under Malicious (7). A joke 'OS' that gives custom error messages instead of an actual shell.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 7,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25033-trollos-version-20-released-new-features/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['map'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"GPS Minimap\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/x9ajKSc0\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced/grayscale pocket computer GPS minimap. Has many features, such as the ability to track other people using it (configurable), and has a well-polished GUI. This is the first program I've made that I'm not ashamed of.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 2,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23066-gps-minimap-v139-graphical-minimap-for-your-pda-advancedregular-see-other-clients-on-the-screen/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"mini map\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['greasemonkey'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"GreaseMonkey's Virus\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/LBxiTTeP\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"GreaseMonkey\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A virus I found on the LurCraft server. It spreads to floppy disks when computers are on, and moves all your files into a sandbox. For the love of &epasta&r, don't use this on servers...just don't. It causes more grief than fun.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 7,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"You can't DO that, man... \\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"fucking\\\\\\\",\\\\\\\"greasy\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['on'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"On\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/W4GLNE39\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A program that seeks out all computers connected through modem cables and keeps them on (or off, configurable). Can reboot them at the press of a button. Also a testament to how crap my programs names are.\\\\\\\\nUseful for keeping network systems online without having to manually turn each of them on.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22622-on-automatic-computer-activator/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"off\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['quickdraw'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"QuickDraw!\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/uGTzMxNL\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A game where you quickly shoot someone in a desert. Kinda like Wild Gunman on NES, but for CC. Which is less apt for making games than a 30+ year old machine, somehow.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26452-quickdraw-western-shootout-game/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"wild gunman\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['enchat'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Enchat v2.2\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/JtgbWdV5\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An encrypted, decentralized, color-formatted chat program that encrypts chat messages with both a key and os.time(). Supports text obfuscation via &{&k&}. Uses the AES encryption API.\\\\\\\\nThis is probably my (\\\\\\\"..al.ldd..\\\\\\\") best program, next to your's truly.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25290-enchat-v20-encrypted-decentralized-chat/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"encrypted\\\\\\\",\\\\\\\"AES\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['sinelock'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Sinelock SHA256 door/computer lock\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/XDgeSDTq\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A relatively advanced door/computer lock that uses SHA256 encryption. It also displays a sine wave pattern while at the prompt, hence the name.\\\\\\\\nSupports many features, including multiple passwords (enter all/enter one), anti-termination chiding, pretty patterns, and floppy disk key cards.\\\\\\\\n\\\\\\\\nSuck it, LoganDark!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26502-sinelock-v1-sha256-encryption-multiple-passwords-key-cards/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"hashed\\\\\\\",\\\\\\\"SHA256\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['msend'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"mSend\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/0FW50ZZ1\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A file-sending program that uses the string metatable bug for communication. Patched by CC1.7x, but if re-enabled (somehow), might yet work.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/21906-msend-file-transfer-using-the-string-metatable-exploit/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ports'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Ports\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/XxkBiYJ6\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A utility to open/close modem channels, view all open channels, send modem messages, or lock all modem communication altogether.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24861-ports-a-useful-tool-for-managing-modems/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"network\\\\\\\",\\\\\\\"lock\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['nsh'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Net Shell\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/X5Fysdi4\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lyqyd\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A remote-desktop utility. View other computer's screens, and send/receive files using 'nsh-get' and 'nsh-put'.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/6472-nsh-now-with-previous-session-resume/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"remote desktop\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['nsh-get'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Net Shell GET command\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/KJ9Tu2Y9\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lyqyd\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"The GET command for nsh. Allows you to retrieve files from a remote host.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/6472-nsh-now-with-previous-session-resume/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"remote desktop\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['nsh-put'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Net Shell PUT command\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/zeS6uFY7\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lyqyd\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"The PUT command for nsh. Allows you to put files onto a remote host.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/6472-nsh-now-with-previous-session-resume/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"remote desktop\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['framebuffer'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Lyqyd's Framebuffer API\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Aaza6h5v\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lyqyd\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Framebuffer API used by nsh. A replacement to the poorly-coded window API.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 8,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/6472-nsh-now-with-previous-session-resume/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"remote desktop\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lsa'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"List Advanced\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/fWDrjtvL\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"nitrogenfingers\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced list (ls) command that gives you more information about the files.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23314-lsa-list-advanced/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['udo'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"udo - pocket todo list\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/LKguNrXk\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Zambonie\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A to-do list program for pocket computers with a healthy amount of features and polish. Comes with a nice GUI, and as such is advanced only.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 2,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/17913-udo-a-pocket-todo-list/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['hdfiller'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Filler\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/XYexT41S\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A malicious program that fills your hard drive to the brim, even deleting itself to top it off.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 7,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/23125-filler-program-that-fills-up-hard-drive-with-nonsense/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['boot'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Boot\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Jn48zZjG\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"doublequestionmark\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced multi-OS bootloader.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25790-boot-a-cc-bootloader-version-12-released/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['whisk'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Whisk File Transmitter\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/4ZRHE4Ar\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A file transmitting program that has the ability to send folders (including root) as well as individual files. Has GUI and CLI. It's completely encrypted too, so that's nice, even if it's Valithor's encryption API and not AES.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26063-whisk-filefolder-transfer/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"encrypted\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['sleptim'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Sleptim HDD encrypter\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/0DUyWTFc\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A program that encrypts all the files on your hard drive with a password and Valithor's encryption algorithm. Stands for 'Small Little Encryption Program That I Made' It does work as intended, but practice caution when using it. You can easily corrupt your stuff.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26236-cc-harddrive-endecrypter/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"encrypted\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pdaterm-cli'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"PDATerm (client)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/r6UYySPN\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"jimthenerd1999\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A server-based chat program tailored for pocket computers. Client.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 2,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/18210-pdaterm-a-tele-communication-terminal-for-pocket-computers/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"chat\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pdaterm-srv'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"PDATerm (server)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/aF9xrt9q\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"jimthenerd1999\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A server-based chat program tailored for pocket computers. Server.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 2,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/18210-pdaterm-a-tele-communication-terminal-for-pocket-computers/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"chat\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ping'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Ping\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/R4DKXbzm\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An HTTP pinging program. Pings a URL however many times, returns the delay each time, and returns the average delay in ticks.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24981-an-http-ping-program/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"pong\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pocketgps'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"pocketgps\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/wQaGzaK7\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Lyqyd\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A GPS program tailored for pocket computers that stores waypoints and calculates their distance to you. It can also record paths, and is compatible with Oeed's Ultimate Door Lock.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 2,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/17740-pocketgps-waypoints-heading-and-distance/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['oeedlock'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Ultimate Door Lock\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/4QeAEiTM\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.oeed,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An intuitive door lock that opens doors whenever registered pocket computers are a certain distance away.\\\\\\\\nInstalls on an advanced computer and a wireless pocket computer to work properly.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 2,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/17614-ultimate-door-lock-pda-opened-doors/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lattice'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Lattice\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/5A2xujvw\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Konlab\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A well-made graphical FS file browser for advanced computers. Can display in both icon mode and a list.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24364-multiselection-file-browser-lattice/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"file\\\\\\\",\\\\\\\"browser\\\\\\\",\\\\\\\"manager\\\\\\\",\\\\\\\"explorer\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pschat-reloaded'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"PSChat Reloaded\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/hyNxvCHZ\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"minizbot2012\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"HTTP-based chat client. Allows people from any minecraft server (or singleplayer session/emulator) to chat together on CC.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/21674-http-pschat-reloaded-now-with-titles/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"webchat\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['tron'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Tron\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/jgyepx3g\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"&3PixelToast\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Rednet multiplayer lightcycle game for advanced computers. Very fun and competitive, but spams the shit out of rednet. Easily one of the most fun games on CC.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/12416-tron-game-wipmultiplayer/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"lightcycles\\\\\\\",\\\\\\\"multiplayer\\\\\\\",\\\\\\\"spaceparanoids\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['battle'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Battle\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/MbvMiiCU\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Scoptile\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A turn-based game where you fight an enemy AI by choosing to increase attack/defence, attack, or heal in turn-based combat. It's quite well balanced.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24112-battle/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"turnbased\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['miniaturecraft'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"MiniatureCraft 2.x\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/FgAggvy1\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Detective_Smith\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Multi/singleplayer open-world survival game similar to Minicraft. Top-down, and very advanced. This link downloads the installer file, so use the \\\\\\\"..al.run..\\\\\\\" function.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/21350-miniaturecraft-2x-alpha-edition/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"multiplayer\\\\\\\",\\\\\\\"minecraft\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['breakout'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Breakout! for CC\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"https://gist.githubusercontent.com/LDDestroier/c7528d95bc0103545c2a/raw/\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic recreation of Breakout for ComputerCraft. You're a paddle, bounce the ball to break bricks.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 3,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26345-breakout/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"bricks\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['strafe'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Strafe\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/bj3qj1Pj\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"CrazedProgrammer\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A ComputerCraft game distribution platform similar to Steam.\\\\\\\",\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22958-strafe-download-and-play-games/\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"steam\\\\\\\",\\\\\\\"origin\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['edit+'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Edit+\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/sR9t4iRZ\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"GopherAtl\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An improved version of the 'edit' program, with more functions.\\\\\\\",\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22257-edit-enhanced-editor-non-qwerty-ready/\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"editplus\\\\\\\",\\\\\\\"editor\\\\\\\",\\\\\\\"texteditor\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['cctar'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"CC Tar\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/bcgmNT2Q\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"columna1\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An implementation of the TAR packaging standard in CC.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/18280-cc-tar-create-and-unpack-real-tar-files-in-cc/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"tarball\\\\\\\",\\\\\\\"archiver\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lddlock'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"LDDLock\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/uW0X4aKn\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic, encrypted door/computer lock. Can accept multiple passwords, and works on normal computers as well as advanced. Obsoleted by Sinelock, but this still works.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25308-hashed-computer-lock/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['loganlock'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"LoganDark's Password Lock System v4\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pasteibn.com/raw/BhPk3z1E\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"LoganDark\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic door lock that uses PBKDF2 salted hashing algorithm.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/26148-v41-coming-logandarks-password-lock/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"pbkdf2\\\\\\\",\\\\\\\"salted\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['firewolf2.5'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Firewolf v2.5\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/A7wGH3ty\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"GravityScore and 1lann\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Firewolf rednet webpage client/server, for hosting custom web servers in CC!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/4677-firewolf-website-browser-25-brand-new-internals-again/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"webpage\\\\\\\",\\\\\\\"website\\\\\\\",\\\\\\\"internet\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['less'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Less\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/en8GA73P\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"The 'less' unix command put in ComputerCraft. Sometimes, less is more.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25592-less-like-the-unix-command/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"more\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['pcan'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Pcan\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/w8RHW808\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A basic, but semi-functional, pastebin client for ComputerCraft. Cannot edit pastes, but can upload/delete on a user's or guest's behalf. It's the API's fault.\\\\\\\\nShort for 'PasteCCan'\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25633-pcan-local-pastebin-client/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",\\\\\\\"pastebin\\\\\\\",\\\\\\\"pasteccan\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['sketch'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Sketch\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Mm5hd97E\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.oeed,\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced paint program that uses the Bedrock API. Can write to three formats, one of which is proprietary, and has many paint tools.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/17587-sketch-photoshop-inspired-image-editor-for-computercraft/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"paint\\\\\\\",\\\\\\\"drawing\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['quest-srv'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Quest (wifi server)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/qpWzu0HA\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.oeed,\\\\\\\
\\\\009\\\\009description = \\\\\\\"The modem API implementation of the Quest CC web server.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20882-quest-the-html-web-browser-for-computercraft/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"internet\\\\\\\",\\\\\\\"website\\\\\\\",\\\\\\\"webpage\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['quest'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Quest (client)\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/VDUGPdiA\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.oeed,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A ComputerCraft HTTP web browser, capable of displaying special CCML webpages.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/20882-quest-the-html-web-browser-for-computercraft/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"internet\\\\\\\",\\\\\\\"website\\\\\\\",\\\\\\\"webpage\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['filex'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"FileX\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/AVqAFH8h\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Creator\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An advanced graphical file browser.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22108-filex-a-powerful-file-explorer-with-guibig-updateopen-with/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"browser\\\\\\\",\\\\\\\"explorer\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['talk'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Talk\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/j6YjhWYp\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"GopherAtl\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A very simple, unencrypted, decentralized chat program.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/14305-talk-an-uber-simple-chat-program/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"chat\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['fm2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Mouse File Browser\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/jKZBPFTs\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"HPWebcamAble\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A graphical file manager that uses the mouse, sans many functions like copy/paste. But it's for grayscale!\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/24579-file-manager-20-history-run-w-args-grayscale-support/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"file\\\\\\\",\\\\\\\"explorer\\\\\\\",\\\\\\\"manager\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['roflcopter'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ROFL Copter\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/3RZMs1xa\\\\\\\",\\\\\\\
\\\\009\\\\009creator = al.ldd,\\\\\\\
\\\\009\\\\009description = \\\\\\\"A funny animation of a roflcopter. Recommended for block computers, not pocket ones.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 4,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"No forum post.\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"eldidi\\\\\\\",\\\\\\\"ldd\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['mfb'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Mouse File Manager\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/jKZBPFTs\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"BigSHinyToys\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A graphical file manager that uses the mouse.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/5509-advanced-computer-mouse-file-browser/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"browser\\\\\\\",\\\\\\\"explorer\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['brainfuck'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Brainfuck Interpreter\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/MmJv002n\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"bluebird173\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An implementation of the 'brainfuck' esoteric programming language, for CC.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25347-brainf-interpreter/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"esoteric\\\\\\\",\\\\\\\"esolanguage\\\\\\\",\\\\\\\"fucking\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['lockette'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Lockette\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/cGM4iF1d\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Wojbie\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Intuitive lock program that activates after computer is inactive for too long, then unlocks after a password is entered.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25025-lockette-computer-access-limiter-v1/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {},\\\\\\\
\\\\009},\\\\\\\
\\\\009['discover'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Discover App v7.4\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://discoverapi.xyz/files/download/discoverapp/lua\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"~7&adannysmc95\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A fully-functional HTTP app store for ComputerCraft. You can make accounts, upload programs, download programs, sort via type, access social networking elements etc. It's really nice.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 11,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22133-app-store-discover-api50/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"appstore\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['kristwallet'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Kristwallet\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Yv0fChz5\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"3d6\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A wallet program for the crypto-currency Krist. Used to manage transactions and domains.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/22201-krist-minable-currency-that-works-across-servers/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"cryptocurrency\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009\\\\\\\
\\\\009['ccdhd2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ccDHD 2.0\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/39UhE8Nz\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"LanteaCraft/SGCraft stargate controller for block computers.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['gateliaison2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"gateLiaison 2.0\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/NZrxstWF\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"LanteaCraft/SGCraft stargate interface for use with ccDialer and/or ccDHD.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ccdialer2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ccDialer 2.0\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/MKAZXSny\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Portable version of ccDHD, for pocket computers.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['gatebuddy2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"gateBuddy 2.0\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/B81kt39c\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Similar to gateliaison, but for use specifically with ccDialer and not ccDHD.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['discoverydialer2'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Discovery Dialer 2.0\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/yg67N4UT\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"LanteaCraft/SGCraft stargate dialer.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ccdhd1.5'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ccDHD 1.5\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/jriyySTL\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"LanteaCraft/SGCraft stargate controller for block computers. Outdated.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['gateliaison1.5'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"gateLiaison 1.5\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/PLy9GAWt\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"LanteaCraft/SGCraft stargate interface for use with ccDialer and/or ccDHD. Outdated.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['ccdialer1.5'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"ccDialer 1.5\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/TUQvDbbm\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Portable version of ccDHD, for pocket computers. Outdated.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['gatebuddy1.5'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"gateBuddy 1.5\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/1U2XPPCw\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"Similar to gateliaison, but for use specifically with ccDialer and not ccDHD. Outdated.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['discoverydialer1'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Discovery Dialer 1\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/BiXu3DfW\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Dog\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"LanteaCraft/SGCraft stargate dialer. Outdated.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/16656-lanteacraft-sgcraft-ccdhd-20-rc9m/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"stargate\\\\\\\",},\\\\\\\
\\\\009},\\\\\\\
\\\\009['piclock'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Piclock\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/ikhdmyMq\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Watsuprico\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"A neat picture-based lock where to unlock the computer, you must click in the exact spots set during setup.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25713-piclock-a-picture-based-lock-program/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"picture\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['luva'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Luva\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/Kus6yZwV\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Detective_Smith\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An alternative compiled language to Lua for ComputerCraft.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 1,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25482-language-early-release-luva-compiles-to-lua/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"lua\\\\\\\",\\\\\\\"compiled\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009['firewolf3.5'] = {\\\\\\\
\\\\009\\\\009title = \\\\\\\"Firewolf v3.5\\\\\\\",\\\\\\\
\\\\009\\\\009url = \\\\\\\"http://pastebin.com/raw/nTVm5BZ2\\\\\\\",\\\\\\\
\\\\009\\\\009creator = \\\\\\\"Towtow10\\\\\\\",\\\\\\\
\\\\009\\\\009description = \\\\\\\"An updated version of the Firewolf modem webpage client/server.\\\\\\\",\\\\\\\
\\\\009\\\\009catagory = 6,\\\\\\\
\\\\009\\\\009forumPost = \\\\\\\"http://www.computercraft.info/forums2/index.php?/topic/25794-firewolf-website-browser-version-35/\\\\\\\",\\\\\\\
\\\\009\\\\009keywords = {\\\\\\\"webpage\\\\\\\",\\\\\\\"website\\\\\\\"},\\\\\\\
\\\\009},\\\\\\\
\\\\009\\\\\\\
}\\\\\\\
\\\\\\\
if not std.std_version then\\\\\\\
\\\\009return\\\\\\\
end\\\\\\\
\\\\\\\
if ((std.std_version or 0) < 101) or requireInjector then\\\\\\\
\\\\\\\
\\\\009local colors_names = {\\\\\\\
\\\\009\\\\009[\\\\\\\"0\\\\\\\"] = colors.white,\\\\\\\
\\\\009\\\\009[\\\\\\\"1\\\\\\\"] = colors.orange,\\\\\\\
\\\\009\\\\009[\\\\\\\"2\\\\\\\"] = colors.magenta,\\\\\\\
\\\\009\\\\009[\\\\\\\"3\\\\\\\"] = colors.lightBlue,\\\\\\\
\\\\009\\\\009[\\\\\\\"4\\\\\\\"] = colors.yellow,\\\\\\\
\\\\009\\\\009[\\\\\\\"5\\\\\\\"] = colors.lime,\\\\\\\
\\\\009\\\\009[\\\\\\\"6\\\\\\\"] = colors.pink,\\\\\\\
\\\\009\\\\009[\\\\\\\"7\\\\\\\"] = colors.gray,\\\\\\\
\\\\009\\\\009[\\\\\\\"8\\\\\\\"] = colors.lightGray,\\\\\\\
\\\\009\\\\009[\\\\\\\"9\\\\\\\"] = colors.cyan,\\\\\\\
\\\\009\\\\009[\\\\\\\"a\\\\\\\"] = colors.purple,\\\\\\\
\\\\009\\\\009[\\\\\\\"b\\\\\\\"] = colors.blue,\\\\\\\
\\\\009\\\\009[\\\\\\\"c\\\\\\\"] = colors.brown,\\\\\\\
\\\\009\\\\009[\\\\\\\"d\\\\\\\"] = colors.green,\\\\\\\
\\\\009\\\\009[\\\\\\\"e\\\\\\\"] = colors.red,\\\\\\\
\\\\009\\\\009[\\\\\\\"f\\\\\\\"] = colors.black,\\\\\\\
\\\\009}\\\\\\\
\\\\009local blit_names = {}\\\\\\\
\\\\009for k,v in pairs(colors_names) do\\\\\\\
\\\\009\\\\009blit_names[v] = k\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009local codeNames = { --just for checking, not for any translation\\\\\\\
\\\\009\\\\009[\\\\\\\"r\\\\\\\"] = \\\\\\\"reset\\\\\\\",\\\\\\\
\\\\009}\\\\\\\
\\\\009\\\\\\\
\\\\009local moveOn\\\\\\\
\\\\009local textToBlit = function(str)\\\\\\\
\\\\009\\\\009local p = 1\\\\\\\
\\\\009\\\\009local output = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009\\\\009local txcolorout = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009\\\\009local bgcolorout = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009\\\\009local txcode = \\\\\\\"&\\\\\\\"\\\\\\\
\\\\009\\\\009local bgcode = \\\\\\\"~\\\\\\\"\\\\\\\
\\\\009\\\\009local doFormatting = true\\\\\\\
\\\\009\\\\009local usedformats = {}\\\\\\\
\\\\009\\\\009local txcol,bgcol = blit_names[term.getTextColor()], blit_names[term.getBackgroundColor()]\\\\\\\
\\\\009\\\\009local origTX,origBG = blit_names[term.getTextColor()], blit_names[term.getBackgroundColor()]\\\\\\\
\\\\009\\\\009local cx,cy\\\\\\\
\\\\009\\\\009moveOn = function(tx,bg)\\\\\\\
\\\\009\\\\009\\\\009output = output..str:sub(p,p)\\\\\\\
\\\\009\\\\009\\\\009txcolorout = txcolorout..tx --(doFormatting and tx or origTX)\\\\\\\
\\\\009\\\\009\\\\009bgcolorout = bgcolorout..bg --(doFormatting and bg or origBG)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009while p <= #str do\\\\\\\
\\\\009\\\\009\\\\009if str:sub(p,p) == txcode then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if colors_names[str:sub(p+1,p+1)] and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009txcol = str:sub(p+1,p+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009usedformats.txcol = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif codeNames[str:sub(p+1,p+1)] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if str:sub(p+1,p+1) == \\\\\\\"r\\\\\\\" and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009txcol = blit_names[term.getTextColor()]\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009elseif str:sub(p+1,p+1) == \\\\\\\"{\\\\\\\" and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009doFormatting = false\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009elseif str:sub(p+1,p+1) == \\\\\\\"}\\\\\\\" and (not doFormatting) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009doFormatting = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009elseif str:sub(p,p) == bgcode then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if colors_names[str:sub(p+1,p+1)] and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009bgcol = str:sub(p+1,p+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009usedformats.bgcol = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif codeNames[str:sub(p+1,p+1)] and (str:sub(p+1,p+1) == \\\\\\\"r\\\\\\\") and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009bgcol = blit_names[term.getBackgroundColor()]\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009return output, txcolorout, bgcolorout, usedformats\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009for k,v in pairs(std.storeURLs) do\\\\\\\
\\\\009\\\\009std.storeURLs[k].title = textToBlit(std.storeURLs[k].title)\\\\\\\
\\\\009\\\\009std.storeURLs[k].creator = textToBlit(std.storeURLs[k].creator)\\\\\\\
\\\\009\\\\009std.storeURLs[k].description = textToBlit(std.storeURLs[k].description)\\\\\\\
\\\\009end\\\\\\\
end\\\"\",\
  \"F:bootsect\",\
  \"\\\"local tArgs = {...}\\\\\\\
\\\\\\\
local orbital = [[\\\\\\\
dofile(\\\\\\\"/boot/modules/sprite.b\\\\\\\")\\\\\\\
dofile(\\\\\\\"/boot/kernel\\\\\\\")\\\\\\\
shell.setPath(shell.path()..\\\\\\\":/system/bin\\\\\\\")\\\\\\\
shell.run(\\\\\\\"/boot/security.map\\\\\\\")\\\\\\\
shell.run(\\\\\\\"/system/bin/sh\\\\\\\")\\\\\\\
]]\\\\\\\
\\\\\\\
local orbital_re = [[\\\\\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\
 term.write(\\\\\\\"                                                   \\\\\\\")\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\
 print(txt)\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
local function recovery_drawProgressBar()\\\\\\\
    local bgColor = term.getBackgroundColor()\\\\\\\
\\\\009local textColor = term.getTextColor()\\\\\\\
    --term.clear()\\\\\\\
\\\\009term.setCursorPos(13,4)\\\\\\\
\\\\009term.setTextColor(colors.lightGray)\\\\\\\
\\\\009print(\\\\\\\"Orbital is loading files...\\\\\\\")\\\\\\\
\\\\009term.setTextColor(textColor)\\\\\\\
\\\\009term.setBackgroundColor(colors.lightGray)\\\\\\\
    term.setCursorPos(4,6)\\\\\\\
\\\\009textutils.slowPrint(\\\\\\\"                                             \\\\\\\", 10)\\\\\\\
\\\\009term.setBackgroundColor(bgColor)\\\\\\\
end\\\\\\\
\\\\\\\
local function recovery_drawScreen(opt)\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.clear()\\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    boot_printColoredTextLine(2, \\\\\\\"             Orbital Boot Manager v1.0             \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009if not opt then\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\" ARROW KEYS=Choose                      ENTER=Boot \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009else\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\"                                                   \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local function recovery_annotate()\\\\\\\
    local annotate = {\\\\\\\"   Fetching Orbital RE image...\\\\\\\", \\\\\\\"   Unpacking image...\\\\\\\", \\\\\\\"   Execute: /boot/recovery/drivers.pkg\\\\\\\", \\\\\\\"   Execute: /boot/recovery/libraries.pkg\\\\\\\", \\\\\\\"   Execute: /boot/recovery/initrd\\\\\\\"}\\\\\\\
\\\\009local textColorS = term.getTextColor()\\\\\\\
\\\\009term.setCursorPos(1,8)\\\\\\\
\\\\009term.setTextColor(colors.lightGray)\\\\\\\
\\\\009for _,v in ipairs(annotate) do\\\\\\\
\\\\009    print(v)\\\\\\\
\\\\009\\\\009sleep(0.5)\\\\\\\
\\\\009end\\\\\\\
\\\\009term.setTextColor(textColorS)\\\\\\\
end\\\\\\\
\\\\\\\
recovery_drawScreen(true)\\\\\\\
recovery_drawProgressBar()\\\\\\\
recovery_annotate()\\\\\\\
sleep(5)\\\\\\\
]]\\\\\\\
local mbr = [[\\\\\\\
local function boot_handleBootElement(str)\\\\\\\
   local s1 = \\\\\\\"                                           \\\\\\\"\\\\\\\
   local n1 = s1:len()\\\\\\\
   local n2 = str:len()\\\\\\\
   local s2 = string.sub(s1, 1, n1-n2)\\\\\\\
   return \\\\\\\" \\\\\\\"..str..s2..\\\\\\\" \\\\\\\"\\\\\\\
end\\\\\\\
\\\\\\\
local function boot_mprint(array, this, x, y, h, g)\\\\\\\
   local c1 = term.getBackgroundColor()\\\\\\\
   local c2 = term.getTextColor()\\\\\\\
   term.setTextColor(colors.lightGray)\\\\\\\
   for i = 1, #array do\\\\\\\
      term.setCursorPos(x, y)\\\\\\\
      --Check if option selected\\\\\\\
      if i == this then \\\\\\\
      --Option selected   \\\\\\\
         term.setBackgroundColor(h)\\\\\\\
         term.setTextColor(g)\\\\\\\
      else \\\\\\\
      --Option NOT selected \\\\\\\
         term.setBackgroundColor(g)\\\\\\\
         term.setTextColor(h)\\\\\\\
      end\\\\\\\
      --Print the string\\\\\\\
      term.write(boot_handleBootElement(array[i]))\\\\\\\
      y = y + 1 \\\\\\\
   end\\\\\\\
   term.setBackgroundColor(c1)\\\\\\\
   term.setTextColor(c2)\\\\\\\
end\\\\\\\
\\\\\\\
local function boot_drawBootMenu(array, pos_x, pos_y, highlight, generic)\\\\\\\
   local select = 1\\\\\\\
   local x, y = term.getCursorPos()\\\\\\\
   \\\\\\\
   while true do\\\\\\\
      term.setCursorPos(x, y)\\\\\\\
      boot_mprint(array, select, pos_x, pos_y, highlight, generic)\\\\\\\
      event, key = os.pullEvent(\\\\\\\"key\\\\\\\")\\\\\\\
      --Enter\\\\\\\
      if key == 28 then \\\\\\\
         return select \\\\\\\
      end\\\\\\\
      \\\\\\\
      if #array > 1 then\\\\\\\
         --Arrow UP or W key\\\\\\\
         if key == 200 or key == 17 then \\\\\\\
      \\\\009\\\\009    select = select - 1 \\\\\\\
\\\\009\\\\009\\\\009\\\\\\\
            if select < 1 then \\\\\\\
               select = #array \\\\\\\
            end\\\\\\\
         --Arrow Down or S key\\\\\\\
         elseif key == 208 or key == 31 then \\\\\\\
      \\\\009\\\\009    select = select + 1     \\\\\\\
        \\\\009\\\\009\\\\009 if select > #array then select = 1 end\\\\\\\
  \\\\009      end\\\\\\\
      end   \\\\\\\
   end\\\\\\\
end\\\\\\\
\\\\\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\
 term.write(\\\\\\\"                                                   \\\\\\\")\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\
 print(txt)\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
local function drawBootManager(opt)\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.clear()\\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    boot_printColoredTextLine(2, \\\\\\\"             Orbital Boot Manager v1.0             \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009if not opt then\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\" ARROW KEYS=Choose                      ENTER=Boot \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009else\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\"                                                   \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
if not fs.exists(\\\\\\\"/boot/bcd\\\\\\\") or not fs.isDir(\\\\\\\"/boot/bcd\\\\\\\") or not loadfile(\\\\\\\"/boot/bcd/orbital\\\\\\\") or not loadfile(\\\\\\\"/boot/bcd/orbital-re\\\\\\\") then\\\\\\\
    drawBootManager(true)\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.setTextColor(colors.lightGray)\\\\009\\\\\\\
\\\\009term.setCursorPos(2,7)\\\\\\\
\\\\009print(\\\\\\\"The required Boot Configuration Data (BCD) files\\\\\\\")\\\\\\\
\\\\009term.setCursorPos(2,8)\\\\\\\
\\\\009print(\\\\\\\"are not present on this computer.\\\\\\\")\\\\\\\
\\\\009term.setCursorPos(2,10)\\\\\\\
\\\\009print(\\\\\\\"Please reinstall the Orbital operating system.\\\\\\\")\\\\\\\
    while true do\\\\\\\
\\\\009    sleep(1)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
while true do\\\\\\\
    drawBootManager(false)\\\\\\\
    local a={\\\\\\\"Orbital 0.0.4.1 - Developer Preview\\\\\\\", \\\\\\\"Orbital Recovery Environment\\\\\\\", \\\\\\\"Boot from floppy disk\\\\\\\"}\\\\\\\
    local gmn=boot_drawBootMenu(a, 4, 5, colors.lightGray, colors.black)\\\\\\\
    if gmn == 1 then\\\\\\\
\\\\009\\\\009shell.run(\\\\\\\"/boot/bcd/orbital\\\\\\\")\\\\\\\
\\\\009\\\\009break\\\\\\\
    elseif gmn == 2 then \\\\\\\
\\\\009\\\\009shell.run(\\\\\\\"/boot/bcd/orbital-re\\\\\\\")\\\\\\\
        if __RECOVERY then\\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
        else\\\\\\\
            term.setCursorPos(1, 16)\\\\\\\
            term.setTextColor(colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009print(\\\\\\\"         ERROR: Orbital RE is unavailable.\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009sleep(1)\\\\\\\
\\\\009\\\\009end\\\\\\\
    elseif gmn==3 then \\\\\\\
        if fs.exists(\\\\\\\"/disk/startup\\\\\\\") then\\\\\\\
\\\\009\\\\009    shell.run(\\\\\\\"/disk/startup\\\\\\\") \\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
        else\\\\\\\
            term.setCursorPos(1, 16)\\\\\\\
            term.setTextColor(colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009print(\\\\\\\"        ERROR: Unable to detect MBR on disk\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009sleep(1)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
]]\\\\\\\
\\\\\\\
local function findArg(arg)\\\\\\\
 for _,v in ipairs(tArgs) do\\\\\\\
  if v == arg then\\\\\\\
   return true\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false\\\\\\\
end\\\\\\\
\\\\\\\
local function writeFile(path, code)\\\\\\\
    if loadfile(path) then\\\\\\\
\\\\009    return true\\\\\\\
\\\\009end\\\\\\\
    local desc = fs.open(path, \\\\\\\"w\\\\\\\")\\\\\\\
\\\\009desc.writeLine(code)\\\\\\\
\\\\009desc.close()\\\\\\\
\\\\009return true\\\\\\\
end\\\\\\\
\\\\\\\
if #tArgs < 1 and not __RECOVERY_SILENT then\\\\\\\
    UI.outputInfo(\\\\\\\"bootsect\\\\\\\", [[Orbital boot sector management utility\\\\\\\
\\\\009\\\\\\\
Arguments:\\\\\\\
/mbr        Write the MBR (/startup) to disk\\\\\\\
/bcd:<ID>   Write the specified BCD file to disk]])\\\\\\\
    return\\\\\\\
elseif fs.exists(\\\\\\\"/boot/bcd\\\\\\\") and fs.isDir(\\\\\\\"/boot/bcd\\\\\\\") and loadfile(\\\\\\\"/boot/bcd/orbital\\\\\\\") and loadfile(\\\\\\\"/boot/bcd/orbital-re\\\\\\\") and loadfile(\\\\\\\"/startup\\\\\\\") and not __RECOVERY_SILENT then\\\\\\\
    if not UI.request(\\\\\\\"Orbital boot sector files already present, overwrite\\\\\\\") then\\\\\\\
\\\\009    return\\\\\\\
\\\\009end\\\\\\\
elseif not __DEBUG or not __RECOVERY or not __RECOVERY_SILENT then\\\\\\\
    UI.outputInfo(\\\\\\\"bootsect\\\\\\\", \\\\\\\"cannot run on consumer build\\\\\\\")\\\\\\\
end\\\\\\\
\\\\\\\
if findArg(\\\\\\\"/mbr\\\\\\\") then\\\\\\\
    if not __RECOVERY_SILENT then\\\\\\\
        UI.outputInfo(\\\\\\\"bootsect\\\\\\\", \\\\\\\"writing MBR to disk\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009if writeFile(\\\\\\\"/startup\\\\\\\", startup) and not __RECOVERY_SILENT then\\\\\\\
\\\\009    UI.outputSuccess(\\\\\\\"bootsect\\\\\\\", \\\\\\\"operation completed\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
elseif findArg(\\\\\\\"/bcd:orbital\\\\\\\") then\\\\\\\
    if not __RECOVERY_SILENT then\\\\\\\
        UI.outputInfo(\\\\\\\"bootsect\\\\\\\", \\\\\\\"writing BCD 'orbital' to disk\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009if writeFile(\\\\\\\"/boot/bcd/orbital\\\\\\\", orbital) and not __RECOVERY_SILENT then\\\\\\\
\\\\009    UI.outputSuccess(\\\\\\\"bootsect\\\\\\\", \\\\\\\"operation completed\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
elseif findArg(\\\\\\\"/bcd:orbital-re\\\\\\\") then\\\\\\\
    if not __RECOVERY_SILENT then\\\\\\\
        UI.outputInfo(\\\\\\\"bootsect\\\\\\\", \\\\\\\"writing BCD 'orbital-re' to disk\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009if writeFile(\\\\\\\"/boot/bcd/orbital-re\\\\\\\", orbital_re) and not __RECOVERY_SILENT then\\\\\\\
\\\\009    UI.outputSuccess(\\\\\\\"bootsect\\\\\\\", \\\\\\\"operation completed\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
end\\\"\",\
  \"F:clone\",\
  \"\\\"local args = {...}\\\\\\\
local allowExit = false\\\\\\\
\\\\\\\
local function setColor(color)\\\\\\\
\\\\009-- shorthand color setting\\\\\\\
\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009term.setTextColor(color)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local function writeColor(...)\\\\\\\
\\\\009-- shorthand color writing\\\\\\\
\\\\009-- format: printColor(color1, 'text', color2, 'text', ...)\\\\\\\
\\\\009local curColor\\\\\\\
\\\\009for _, v in pairs{...} do\\\\\\\
\\\\009\\\\009if type(v) == 'number' then\\\\\\\
\\\\009\\\\009\\\\009curColor = v\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009if curColor then\\\\\\\
\\\\009\\\\009\\\\009\\\\009setColor(curColor)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009write(tostring(v))\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local function printColor(...)\\\\\\\
\\\\009-- same as writeColor but with a \\\\\\\\n\\\\\\\
\\\\009writeColor(...)\\\\\\\
\\\\009print()\\\\\\\
end\\\\\\\
\\\\\\\
local function openRednet()\\\\\\\
\\\\009-- shorthand rednet opening\\\\\\\
\\\\009for _, side in pairs(rs.getSides()) do\\\\\\\
\\\\009\\\\009if peripheral.getType(side) == 'modem' then\\\\\\\
\\\\009\\\\009\\\\009rednet.open(side)\\\\\\\
\\\\009\\\\009\\\\009return side\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009printColor(colors.red, 'Please attach rednet modem')\\\\\\\
end\\\\\\\
\\\\\\\
local function client(server)\\\\\\\
\\\\009-- password get\\\\\\\
\\\\009writeColor(colors.magenta, 'Password: ')\\\\009\\\\\\\
\\\\009setColor(colors.white)\\\\\\\
\\\\009local pass = read('*')\\\\\\\
\\\\009\\\\\\\
\\\\009printColor(colors.yellow, 'Sending clone request')\\\\\\\
\\\\009\\\\\\\
\\\\009-- request files from the server while sending pass as well\\\\\\\
\\\\009rednet.send(server, 'clone_req '..pass)\\\\\\\
\\\\009\\\\\\\
\\\\009-- listen for a sendback\\\\\\\
\\\\009-- only allow max 10 seconds of delay\\\\\\\
\\\\009local msg\\\\\\\
\\\\009repeat\\\\\\\
\\\\009\\\\009local id, _msg = rednet.receive(10)\\\\\\\
\\\\009\\\\009msg = _msg\\\\\\\
\\\\009until id == server or not id\\\\\\\
\\\\009\\\\\\\
\\\\009-- no message? probably timed out\\\\\\\
\\\\009if not msg then\\\\\\\
\\\\009\\\\009printColor(colors.red, 'Request timed out')\\\\\\\
\\\\009\\\\009return\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009-- the uSER SHOULD STOP TRYING TO HACK THE SERVER oMG\\\\\\\
\\\\009if msg == 'clone_failed_pass' then\\\\\\\
\\\\009\\\\009printColor(colors.red, 'Wrong password')\\\\\\\
\\\\009\\\\009return\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009printColor(colors.lime, 'Request successful')\\\\\\\
\\\\009printColor(colors.yellow, 'Writing files')\\\\\\\
\\\\009\\\\\\\
\\\\009-- get the program list and establish a directory for our new files\\\\\\\
\\\\009local programs = textutils.unserialize(msg)\\\\\\\
\\\\009local clonepath = 'cloned/'..server\\\\\\\
\\\\009\\\\\\\
\\\\009-- erase the current clone, then make a new one\\\\\\\
\\\\009if fs.exists(clonepath) then\\\\\\\
\\\\009\\\\009fs.delete(clonepath)\\\\\\\
\\\\009end\\\\\\\
\\\\009fs.makeDir(clonepath)\\\\\\\
\\\\009\\\\\\\
\\\\009-- write ALL OF THE PROGRAMS!\\\\\\\
\\\\009for i=1, #programs do\\\\\\\
\\\\009\\\\009local prog = programs[i]\\\\\\\
\\\\009\\\\009local path = clonepath..'/'..prog.path\\\\\\\
\\\\009\\\\\\\
\\\\009-- because i can't directly write \\\\\\\"cloned/254/stuff/stuff/more_stuff\\\\\\\"\\\\\\\
\\\\009-- gotta make the directory for it first\\\\\\\
\\\\009local pathfolder = path:match('(.+)/')\\\\\\\
\\\\009if not fs.exists(pathfolder) then\\\\\\\
\\\\009\\\\009fs.makeDir(pathfolder)\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009-- PROCEED WITH THE WRITING\\\\\\\
\\\\009\\\\009local file = fs.open(path, 'w')\\\\\\\
\\\\009\\\\009if file then\\\\\\\
\\\\009\\\\009\\\\009file.write(prog.contents)\\\\\\\
\\\\009\\\\009\\\\009file.close()\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\
\\\\009\\\\009\\\\009setColor(colors.lime)\\\\\\\
\\\\009\\\\009\\\\009printColor(colors.lime, 'Successfully wrote '..prog.path)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009-- wtf why? :C\\\\\\\
\\\\009\\\\009\\\\009printColor(colors.red, 'Could not write '..prog.path)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009shell.setDir(clonepath)\\\\\\\
end\\\\\\\
\\\\\\\
local function files()\\\\\\\
\\\\009printColor(colors.yellow, 'Generating file list')\\\\\\\
\\\\009\\\\\\\
\\\\009-- recursively make a file list\\\\\\\
\\\\009-- exclude specific directories\\\\\\\
\\\\009local filelist = {}\\\\\\\
\\\\009\\\\\\\
\\\\009local function genFiles(cdir)\\\\\\\
\\\\009\\\\009for _, localpath in pairs(fs.list(cdir)) do\\\\\\\
\\\\009\\\\009\\\\009local path = fs.combine(cdir, localpath)\\\\\\\
\\\\009\\\\009\\\\\\\
\\\\009\\\\009\\\\009if fs.isDir(path) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if not path:find('rom')\\\\\\\
\\\\009\\\\009\\\\009\\\\009and not path:find('cloned') then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009genFiles(path)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009if not localpath:match('^/?%.') then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009local file = fs.open(path,'r')\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if file then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009table.insert(filelist, {\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009path = path;\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009contents = file.readAll()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009})\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009file.close()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009printColor(colors.red, 'Could not read '..path)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009genFiles '/'\\\\\\\
\\\\009return filelist\\\\\\\
end\\\\\\\
\\\\\\\
local function server()\\\\\\\
\\\\009-- if there's a password file\\\\\\\
\\\\009-- read it and key it in to the read() function\\\\\\\
\\\\009-- by abusing events\\\\\\\
\\\\009local passfile = fs.open('.clone_pass','r')\\\\\\\
\\\\009if passfile then\\\\\\\
\\\\009\\\\009for v in (passfile.readAll()):gmatch('.') do\\\\\\\
\\\\009\\\\009\\\\009os.queueEvent('char',v)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009passfile.close()\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009-- get a server password\\\\\\\
\\\\009writeColor(colors.magenta, 'Password: ')\\\\\\\
\\\\009setColor(colors.white)\\\\\\\
\\\\009local password = read('*')\\\\\\\
\\\\009\\\\\\\
\\\\009-- go ahead and key in a y if the saved password exists,\\\\\\\
\\\\009-- and n if otherwise\\\\\\\
\\\\009-- for convenience\\\\\\\
\\\\009os.queueEvent('char', passfile and 'y' or 'n')\\\\\\\
\\\\009\\\\\\\
\\\\009-- save the password to the file\\\\\\\
\\\\009-- if the user chooses to remember it\\\\\\\
\\\\009writeColor(colors.magenta, 'Remember password? [y/n] ')\\\\\\\
\\\\009setColor(colors.white)\\\\\\\
\\\\009local answer = read():lower():sub(1,1)\\\\\\\
\\\\009\\\\\\\
\\\\009if answer == 'y' then\\\\\\\
\\\\009\\\\009local passfile = fs.open('.clone_pass','w')\\\\\\\
\\\\009\\\\009if passfile then\\\\\\\
\\\\009\\\\009\\\\009passfile.write(password)\\\\\\\
\\\\009\\\\009\\\\009passfile.close()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\\\\
\\\\009-- otherwise, delete the file\\\\\\\
\\\\009-- to prevent rememberance\\\\\\\
\\\\009elseif answer == 'n' then\\\\\\\
\\\\009\\\\009if fs.exists('.clone_pass') then\\\\\\\
\\\\009\\\\009\\\\009fs.delete('.clone_pass')\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009\\\\\\\
\\\\009printColor(colors.lime, 'Hosting clone server')\\\\\\\
\\\\009printColor(colors.yellow, 'Press backspace to quit.')\\\\\\\
\\\\009allowExit = true\\\\\\\
\\\\009\\\\\\\
\\\\009-- loooOOOOOOOoooop\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009local id, msg = rednet.receive()\\\\\\\
\\\\009\\\\009\\\\\\\
\\\\009\\\\009printColor(colors.yellow, 'Request from '..id)\\\\\\\
\\\\009\\\\009\\\\\\\
\\\\009\\\\009local pass = msg:match('clone_req (.+)')\\\\\\\
\\\\009\\\\009if pass == password then\\\\\\\
\\\\009\\\\009\\\\009printColor(colors.lime, 'Successful authentication')\\\\\\\
\\\\009\\\\009\\\\009local files = textutils.serialize(files())\\\\\\\
\\\\009\\\\009\\\\009printColor(colors.yellow, 'Sending files')\\\\\\\
\\\\009\\\\009\\\\009rednet.send(id, files)\\\\\\\
\\\\009\\\\009\\\\009printColor(colors.lime, 'Done')\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009printColor(colors.red, 'Access denied')\\\\\\\
\\\\009\\\\009\\\\009rednet.send(id, 'clone_failed_pass')\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local function exit()\\\\\\\
\\\\009-- when used with parallel,\\\\\\\
\\\\009-- allows exiting the program\\\\\\\
\\\\009-- at any time :D (when allowExit is true)\\\\\\\
\\\\009\\\\\\\
\\\\009repeat\\\\\\\
\\\\009\\\\009local _, k = os.pullEvent('key')\\\\\\\
\\\\009until k == keys.backspace\\\\\\\
\\\\009and allowExit\\\\\\\
end\\\\\\\
\\\\\\\
printColor(colors.yellow, 'Opening rednet')\\\\\\\
local modemSide = openRednet()\\\\\\\
if not modemSide then return end\\\\\\\
\\\\\\\
if args[1] == 'host' then\\\\\\\
\\\\009parallel.waitForAny(server, exit)\\\\\\\
elseif tonumber(args[1]) then\\\\\\\
\\\\009client(tonumber(args[1]))\\\\\\\
else\\\\\\\
\\\\009print 'Usage: \\\\\\\"clone <id>\\\\\\\" or \\\\\\\"clone host\\\\\\\"'\\\\\\\
end\\\\\\\
\\\\\\\
rednet.close(modemSide)\\\"\",\
  \"F:compilr\",\
  \"\\\"local file = [[--  Hideously Smashed Together by Compilr, a Hideous Smash-Stuff-Togetherer, (c) 2014 oeed  --\\\\\\\
\\\\\\\
--  This file REALLLLLLLY isn't suitable to be used for anything other than being executed --\\\\\\\
\\\\\\\
--  To extract all the files, run: \\\\\\\"<filename> --extract\\\\\\\" in the Shell --\\\\\\\
]]\\\\\\\
\\\\\\\
local files = {}\\\\\\\
\\\\\\\
local function addFolder(path, tree)\\\\\\\
  for i, v in ipairs(fs.list(path)) do\\\\\\\
    local subPath = path .. '/' .. v\\\\\\\
    if v == '.DS_Store' or v == '.git' or subPath == '/rom' or subPath == '/build.clp' or subPath == '/'..shell.getRunningProgram() then\\\\\\\
    elseif fs.isDir(subPath) then\\\\\\\
      tree[v] = {}\\\\\\\
      addFolder(subPath, tree[v])\\\\\\\
    else\\\\\\\
      local h = fs.open(subPath, 'r')\\\\\\\
      if h then\\\\\\\
        tree[v] = h.readAll()\\\\\\\
        h.close()\\\\\\\
      end\\\\\\\
    end\\\\\\\
  end\\\\\\\
end\\\\\\\
\\\\\\\
addFolder('', files)\\\\\\\
\\\\\\\
if not files['init.lua'] then\\\\\\\
  error('init.lua missing')\\\\\\\
end\\\\\\\
\\\\\\\
file = file .. 'local files = ' .. textutils.serialize(files) .. '\\\\\\\\n'\\\\\\\
\\\\\\\
file = file .. [[\\\\\\\
\\\\\\\
local function run(tArgs)\\\\\\\
\\\\\\\
  local fnFile, err = loadstring(files['/init.lua'], 'init')\\\\\\\
  if err then\\\\\\\
    error(err)\\\\\\\
  end\\\\\\\
\\\\\\\
  local function split(str, pat)\\\\\\\
     local t = {}\\\\\\\
     local fpat = \\\\\\\"(.-)\\\\\\\" .. pat\\\\\\\
     local last_end = 1\\\\\\\
     local s, e, cap = str:find(fpat, 1)\\\\\\\
     while s do\\\\\\\
        if s ~= 1 or cap ~= \\\\\\\"\\\\\\\" then\\\\\\\
     table.insert(t,cap)\\\\\\\
        end\\\\\\\
        last_end = e+1\\\\\\\
        s, e, cap = str:find(fpat, last_end)\\\\\\\
     end\\\\\\\
     if last_end <= #str then\\\\\\\
        cap = str:sub(last_end)\\\\\\\
        table.insert(t, cap)\\\\\\\
     end\\\\\\\
     return t\\\\\\\
  end\\\\\\\
\\\\\\\
  local function resolveTreeForPath(path, single)\\\\\\\
    local _files = files\\\\\\\
    local parts = split(path, '/')\\\\\\\
    if parts then\\\\\\\
      for i, v in ipairs(parts) do\\\\\\\
        if #v > 0 then\\\\\\\
          if _files[v] then\\\\\\\
            _files = _files[v]\\\\\\\
          else\\\\\\\
            _files = nil\\\\\\\
            break\\\\\\\
          end\\\\\\\
        end\\\\\\\
      end\\\\\\\
    elseif #path > 0 and path ~= '/' then\\\\\\\
      _files = _files[path]\\\\\\\
    end\\\\\\\
    if not single or type(_files) == 'string' then\\\\\\\
      return _files\\\\\\\
    end\\\\\\\
  end\\\\\\\
\\\\\\\
  local oldFs = fs\\\\\\\
  local env\\\\\\\
  env = {\\\\\\\
    fs = {\\\\\\\
      list = function(path)\\\\\\\
              local list = {}\\\\\\\
              if fs.exists(path) then\\\\\\\
            list = fs.list(path)\\\\\\\
              end\\\\\\\
        for k, v in pairs(resolveTreeForPath(path)) do\\\\\\\
          if not fs.exists(path .. '/' ..k) then\\\\\\\
            table.insert(list, k)\\\\\\\
          end\\\\\\\
        end\\\\\\\
        return list\\\\\\\
      end,\\\\\\\
\\\\\\\
      exists = function(path)\\\\\\\
        if fs.exists(path) then\\\\\\\
          return true\\\\\\\
        elseif resolveTreeForPath(path) then\\\\\\\
          return true\\\\\\\
        else\\\\\\\
          return false\\\\\\\
        end\\\\\\\
      end,\\\\\\\
\\\\\\\
      isDir = function(path)\\\\\\\
        if fs.isDir(path) then\\\\\\\
          return true\\\\\\\
        else\\\\\\\
          local tree = resolveTreeForPath(path)\\\\\\\
          if tree and type(tree) == 'table' then\\\\\\\
            return true\\\\\\\
          else\\\\\\\
            return false\\\\\\\
          end\\\\\\\
        end\\\\\\\
      end,\\\\\\\
\\\\\\\
      isReadOnly = function(path)\\\\\\\
        if not fs.isReadOnly(path) then\\\\\\\
          return false\\\\\\\
        else\\\\\\\
          return true\\\\\\\
        end\\\\\\\
      end,\\\\\\\
\\\\\\\
      getName = fs.getName,\\\\\\\
\\\\\\\
      getSize = fs.getSize,\\\\\\\
\\\\\\\
      getFreespace = fs.getFreespace,\\\\\\\
\\\\\\\
      makeDir = fs.makeDir,\\\\\\\
\\\\\\\
      move = fs.move,\\\\\\\
\\\\\\\
      copy = fs.copy,\\\\\\\
\\\\\\\
      delete = fs.delete,\\\\\\\
\\\\\\\
      combine = fs.combine,\\\\\\\
\\\\\\\
      open = function(path, mode)\\\\\\\
        if fs.exists(path) then\\\\\\\
          return fs.open(path, mode)\\\\\\\
        elseif type(resolveTreeForPath(path)) == 'string' then\\\\\\\
          local handle = {close = function()end}\\\\\\\
          if mode == 'r' then\\\\\\\
            local content = resolveTreeForPath(path)\\\\\\\
            handle.readAll = function()\\\\\\\
              return content\\\\\\\
            end\\\\\\\
\\\\\\\
            local line = 1\\\\\\\
            local lines = split(content, '\\\\\\\\n')\\\\\\\
            handle.readLine = function()\\\\\\\
              if line > #lines then\\\\\\\
                return nil\\\\\\\
              else\\\\\\\
                return lines[line]\\\\\\\
              end\\\\\\\
              line = line + 1\\\\\\\
            end\\\\\\\
                      return handle\\\\\\\
          else\\\\\\\
            error('Cannot write to read-only file (compilr archived).')\\\\\\\
          end\\\\\\\
        else\\\\\\\
          return fs.open(path, mode)\\\\\\\
        end\\\\\\\
      end\\\\\\\
    },\\\\\\\
\\\\\\\
    io = {\\\\\\\
      input = io.input,\\\\\\\
      output = io.output,\\\\\\\
      type = io.type,\\\\\\\
      close = io.close,\\\\\\\
      write = io.write,\\\\\\\
      flush = io.flush,\\\\\\\
      lines = io.lines,\\\\\\\
      read = io.read,\\\\\\\
      open = function(path, mode)\\\\\\\
        if fs.exists(path) then\\\\\\\
          return io.open(path, mode)\\\\\\\
        elseif type(resolveTreeForPath(path)) == 'string' then\\\\\\\
          local content = resolveTreeForPath(path)\\\\\\\
          local f = fs.open(path, 'w')\\\\\\\
          f.write(content)\\\\\\\
          f.close()\\\\\\\
          if mode == 'r' then\\\\\\\
            return io.open(path, mode)\\\\\\\
          else\\\\\\\
            error('Cannot write to read-only file (compilr archived).')\\\\\\\
          end\\\\\\\
        else\\\\\\\
          return io.open(path, mode)\\\\\\\
        end\\\\\\\
      end\\\\\\\
    },\\\\\\\
\\\\\\\
    loadfile = function( _sFile )\\\\\\\
        local file = env.fs.open( _sFile, \\\\\\\"r\\\\\\\" )\\\\\\\
        if file then\\\\\\\
            local func, err = loadstring( file.readAll(), fs.getName( _sFile ) )\\\\\\\
            file.close()\\\\\\\
            return func, err\\\\\\\
        end\\\\\\\
        return nil, \\\\\\\"File not found: \\\\\\\".._sFile\\\\\\\
    end,\\\\\\\
\\\\\\\
    dofile = function( _sFile )\\\\\\\
        local fnFile, e = env.loadfile( _sFile )\\\\\\\
        if fnFile then\\\\\\\
            setfenv( fnFile, getfenv(2) )\\\\\\\
            return fnFile()\\\\\\\
        else\\\\\\\
            error( e, 2 )\\\\\\\
        end\\\\\\\
    end\\\\\\\
  }\\\\\\\
\\\\\\\
  setmetatable( env, { __index = _G } )\\\\\\\
\\\\\\\
  local tAPIsLoading = {}\\\\\\\
  env.os.loadAPI = function( _sPath )\\\\\\\
      local sName = fs.getName( _sPath )\\\\\\\
      if tAPIsLoading[sName] == true then\\\\\\\
          printError( \\\\\\\"API \\\\\\\"..sName..\\\\\\\" is already being loaded\\\\\\\" )\\\\\\\
          return false\\\\\\\
      end\\\\\\\
      tAPIsLoading[sName] = true\\\\\\\
          \\\\\\\
      local tEnv = {}\\\\\\\
      setmetatable( tEnv, { __index = env } )\\\\\\\
      local fnAPI, err = env.loadfile( _sPath )\\\\\\\
      if fnAPI then\\\\\\\
          setfenv( fnAPI, tEnv )\\\\\\\
          fnAPI()\\\\\\\
      else\\\\\\\
          printError( err )\\\\\\\
          tAPIsLoading[sName] = nil\\\\\\\
          return false\\\\\\\
      end\\\\\\\
      \\\\\\\
      local tAPI = {}\\\\\\\
      for k,v in pairs( tEnv ) do\\\\\\\
          tAPI[k] =  v\\\\\\\
      end\\\\\\\
      \\\\\\\
      env[sName] = tAPI    \\\\\\\
      tAPIsLoading[sName] = nil\\\\\\\
      return true\\\\\\\
  end\\\\\\\
\\\\\\\
  env.shell = shell\\\\\\\
\\\\\\\
  setfenv( fnFile, env )\\\\\\\
  fnFile(unpack(tArgs))\\\\\\\
end\\\\\\\
\\\\\\\
local function extract()\\\\\\\
    local function node(path, tree)\\\\\\\
        if type(tree) == 'table' then\\\\\\\
            fs.makeDir(path)\\\\\\\
            for k, v in pairs(tree) do\\\\\\\
                node(path .. '/' .. k, v)\\\\\\\
            end\\\\\\\
        else\\\\\\\
            local f = fs.open(path, 'w')\\\\\\\
            if f then\\\\\\\
                f.write(tree)\\\\\\\
                f.close()\\\\\\\
            end\\\\\\\
        end\\\\\\\
    end\\\\\\\
    node('', files)\\\\\\\
end\\\\\\\
\\\\\\\
local tArgs = {...}\\\\\\\
if #tArgs == 1 and tArgs[1] == '--extract' then\\\\\\\
  extract()\\\\\\\
else\\\\\\\
  run(tArgs)\\\\\\\
end\\\\\\\
]]\\\\\\\
\\\\\\\
fs.delete('/build')\\\\\\\
local h = fs.open('/build', 'w')\\\\\\\
h.write(file)\\\\\\\
h.close()\\\"\",\
  \"F:demo.lua\",\
  \"\\\"local program = require \\\\\\\"programs\\\\\\\"\\\\\\\
\\\\\\\
programs = {\\\\\\\
  program.new(function()\\\\\\\
    shell.run(\\\\\\\"paint\\\\\\\", \\\\\\\"tes\\\\\\\")\\\\\\\
  end, 5, 5, 20, 10),\\\\\\\
  program.new(function()\\\\\\\
    shell.run(\\\\\\\"edit\\\\\\\", \\\\\\\"tes\\\\\\\")\\\\\\\
  end, 1, 2, 10, 7),\\\\\\\
  program.new(function()\\\\\\\
    shell.run(\\\\\\\"worm\\\\\\\")\\\\\\\
  end, 30, 2, 15, 9),\\\\\\\
  program.new(function()\\\\\\\
    while true do\\\\\\\
      term.setBackgroundColor(colors.white)\\\\\\\
      term.clear()\\\\\\\
      coroutine.yield()\\\\\\\
    end\\\\\\\
  end, 28, 10, 20, 10)\\\\\\\
}\\\\\\\
\\\\\\\
while true do\\\\\\\
  local event, var1, var2, var3 = os.pullEventRaw()\\\\\\\
  if event == \\\\\\\"terminate\\\\\\\" then break end\\\\\\\
\\\\\\\
  term.setBackgroundColor(colors.black)\\\\\\\
  term.clear()\\\\\\\
  program.update(programs, event, var1, var2, var3)\\\\\\\
end\\\\\\\
\\\\\\\
term.setBackgroundColor(colors.black)\\\\\\\
term.clear()\\\\\\\
term.setCursorPos(1, 1)\\\"\",\
  \"F:dism\",\
  \"\\\"local tArgs = {...}\\\\\\\
\\\\\\\
if not UI then UI = {[\\\\\\\"outputInfo\\\\\\\"] = print,} end\\\\\\\
\\\\\\\
local FFormat = \\\\\\\".odi\\\\\\\"\\\\\\\
local nFile, nDir, size = 0, 0\\\\\\\
\\\\\\\
local function getPath(input)\\\\\\\
 if string.sub(input, 1, 1)==\\\\\\\"/\\\\\\\" then\\\\\\\
  path = input\\\\\\\
 else\\\\\\\
  path=(\\\\\\\"/\\\\\\\" .. shell.dir() .. \\\\\\\"/\\\\\\\" .. input)\\\\\\\
 end\\\\\\\
 return path\\\\\\\
end\\\\\\\
\\\\\\\
local function fopen(path, mode)\\\\\\\
  local f = fs.open(path, mode)\\\\\\\
  if not f then \\\\\\\
    stderr(\\\\\\\"ERROR: Could not open \\\\\\\"..path..\\\\\\\" with mode \\\\\\\\\\\\\\\"\\\\\\\"..mode..\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\")\\\\\\\
    exit()\\\\\\\
  end\\\\\\\
  return f\\\\\\\
end\\\\\\\
\\\\\\\
local function skip(df)\\\\\\\
  local skip = {\\\\\\\"rom\\\\\\\", \\\\\\\"treasure\\\\\\\", \\\\\\\"tmp\\\\\\\"}\\\\\\\
  for _,v in ipairs(skip) do\\\\\\\
    if fs.getName(df) == v then\\\\\\\
\\\\009  return true\\\\\\\
\\\\009end\\\\\\\
  end\\\\\\\
  return false\\\\\\\
end\\\\\\\
\\\\\\\
local function zip(file)\\\\\\\
  UI.outputInfo(\\\\\\\"dism\\\\\\\", \\\\\\\"Capturing from FS: \\\\\\\".. file)\\\\\\\
  local f = fopen(file, \\\\\\\"r\\\\\\\")\\\\\\\
  local z = textutils.serialize(f.readAll())\\\\\\\
  f.close()\\\\\\\
  return z\\\\\\\
end\\\\\\\
\\\\\\\
local function capture(path)\\\\\\\
  local list = fs.list(path)\\\\\\\
  local array = {}\\\\\\\
  local t, name, d = 0, \\\\\\\"\\\\\\\", 0\\\\\\\
  \\\\\\\
  for i = 2, #list * 2, 2 do\\\\\\\
    t = i/2\\\\\\\
    local tpath = path..\\\\\\\"/\\\\\\\"..list[t]\\\\\\\
    if fs.isDir(tpath) then\\\\\\\
      if not skip(tpath) then\\\\\\\
        name = \\\\\\\"D:\\\\\\\"..list[t]\\\\\\\
        array[i] = capture(tpath)\\\\\\\
        nDir = nDir + 1\\\\\\\
      end\\\\\\\
    else\\\\\\\
      name = \\\\\\\"F:\\\\\\\"..list[t]\\\\\\\
      array[i] = zip(tpath)\\\\\\\
      nFile = nFile + 1\\\\\\\
    end\\\\\\\
    array[i - 1] = name\\\\\\\
  end\\\\\\\
  \\\\\\\
  return textutils.serialize(array)\\\\\\\
end\\\\\\\
\\\\\\\
local function unzip(text, path)\\\\\\\
  UI.outputInfo(\\\\\\\"dism\\\\\\\", \\\\\\\"Applying to FS: \\\\\\\"..path)\\\\\\\
  local f = fopen(path, \\\\\\\"w\\\\\\\")\\\\\\\
  f.write(textutils.unserialize(text))\\\\\\\
  f.close()\\\\\\\
end\\\\\\\
\\\\\\\
local function apply(text, path)\\\\\\\
  local array = textutils.unserialize(text)\\\\\\\
  local unz, dp\\\\\\\
  local d = 0\\\\\\\
  for i = 2, #array, 2 do\\\\\\\
    if string.sub(array[i-1], 1, 1) == \\\\\\\"D\\\\\\\" then\\\\\\\
      dp = string.sub(array[i-1], 3, #array[i-1])\\\\\\\
      fs.makeDir(path..\\\\\\\"/\\\\\\\"..dp)\\\\\\\
      apply(array[i], path..\\\\\\\"/\\\\\\\"..dp)\\\\\\\
      nDir = nDir + 1\\\\\\\
    elseif string.sub(array[i-1], 1, 1) == \\\\\\\"F\\\\\\\" then\\\\\\\
      local p = string.sub(array[i-1], 3, #array[i-1])\\\\\\\
      unzip(array[i], path..\\\\\\\"/\\\\\\\"..p)\\\\\\\
      nFile = nFile + 1\\\\\\\
    end\\\\\\\
  end\\\\\\\
end\\\\\\\
\\\\\\\
local function result()\\\\\\\
  UI.outputInfo(\\\\\\\"dism\\\\\\\", \\\\\\\"Operation completed.\\\\\\\"\\\\\\\
    ..\\\\\\\"\\\\\\\\n   size: \\\\\\\"\\\\\\\
    ..tostring(size).. \\\\\\\" B   \\\\\\\"\\\\\\\
    ..tostring(math.floor(size/1024)).. \\\\\\\" KB\\\\\\\"\\\\\\\
    ..\\\\\\\"\\\\\\\\n   Files:   \\\\\\\".. tostring(nFile)\\\\\\\
    ..\\\\\\\"\\\\\\\\n   Folders: \\\\\\\".. tostring(nDir)\\\\\\\
  )\\\\\\\
end\\\\\\\
\\\\\\\
local outStr = \\\\\\\"Deployment Image Servicing and Management \\\\\\\\n\\\\\\\\n\\\\\\\"\\\\\\\
\\\\\\\
if tArgs[2] then\\\\\\\
 tArgs[2]=getPath(tArgs[2])\\\\\\\
end\\\\\\\
\\\\\\\
if #tArgs < 3 then \\\\\\\
  outStr = outStr..[[\\\\\\\
Usage:\\\\\\\
dism capture <source directory> <output image>\\\\\\\
     OR\\\\\\\
     apply <source image> <target directory>\\\\\\\
     \\\\\\\
     Original code by 1Ridav.\\\\\\\
     Modified for Orbital by minebuild02.\\\\\\\
]]\\\\\\\
end\\\\\\\
\\\\\\\
UI.outputInfo(\\\\\\\"dism\\\\\\\", outStr)\\\\\\\
\\\\\\\
if tArgs[1] == \\\\\\\"capture\\\\\\\" then\\\\\\\
  if fs.exists(tArgs[2]) and fs.isDir(tArgs[2]) then\\\\\\\
    local zipped = capture(shell.resolve(tArgs[2]))\\\\\\\
    local f = fs.open(tArgs[3]..FFormat, \\\\\\\"w\\\\\\\")\\\\\\\
    f.write(zipped)\\\\\\\
    f.close()\\\\\\\
    zipped = nil\\\\\\\
    size = fs.getSize(tArgs[3]..FFormat)\\\\\\\
    result()   \\\\\\\
  end\\\\\\\
  \\\\\\\
elseif tArgs[1] == \\\\\\\"apply\\\\\\\" then\\\\\\\
    local f = fopen(tArgs[2], \\\\\\\"r\\\\\\\")\\\\\\\
    if not fs.exists(tArgs[3]) then \\\\\\\
      fs.makeDir(tArgs[3]) \\\\\\\
    end\\\\\\\
    apply(f.readAll(), tArgs[3])\\\\\\\
    size = fs.getSize(tArgs[2])\\\\\\\
    result()\\\\\\\
end\\\"\",\
  \"F:init.lua\",\
  \"\\\"-- temp\\\"\",\
  \"F:libmenu\",\
  \"\\\"--[[\\\\\\\
The MIT License (MIT)\\\\\\\
Copyright (c) 2016 Isaac Trimble-Pederson \\\\\\\"cyanisaac\\\\\\\", \\\\\\\"ProjectB\\\\\\\"\\\\\\\
 \\\\\\\
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\\\\\"Software\\\\\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\\\\\\
 \\\\\\\
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\\\\\\
 \\\\\\\
THE SOFTWARE IS PROVIDED \\\\\\\"AS IS\\\\\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\\\\\\
]]\\\\\\\
 \\\\\\\
-- Dependencies\\\\\\\
function center(text, height, color)\\\\\\\
    local x,y=term.getSize()\\\\\\\
    if height ~= nil then\\\\\\\
        term.setCursorPos((x-string.len(text))/2, height)\\\\\\\
    else\\\\\\\
        term.setCursorPos((x-string.len(text))/2, y/2)\\\\\\\
    end\\\\\\\
    if color ~= nil then\\\\\\\
        term.setTextColor(color)\\\\\\\
    end\\\\\\\
    term.write(text)\\\\\\\
end\\\\\\\
 \\\\\\\
-- Main code\\\\\\\
local function drawTop(text)\\\\\\\
    local oldTC = term.getTextColor()\\\\\\\
    local oldBC = term.getBackgroundColor()\\\\\\\
 \\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    term.setBackgroundColor(colors.white)\\\\\\\
    term.setTextColor(colors.black)\\\\\\\
    term.clearLine()\\\\\\\
    center(text, 1, colors.black)\\\\\\\
 \\\\\\\
    term.setTextColor(oldTC)\\\\\\\
    term.setBackgroundColor(oldBC)\\\\\\\
end\\\\\\\
 \\\\\\\
local function drawBottom(text)\\\\\\\
    local w,h = term.getSize()\\\\\\\
    local oldTC = term.getTextColor()\\\\\\\
    local oldBC = term.getBackgroundColor()\\\\\\\
 \\\\\\\
    term.setCursorPos(1,h)\\\\\\\
    term.setBackgroundColor(colors.white)\\\\\\\
    term.setTextColor(colors.black)\\\\\\\
    term.clearLine()\\\\\\\
    center(text, h, colors.black)\\\\\\\
 \\\\\\\
    term.setTextColor(oldTC)\\\\\\\
    term.setBackgroundColor(oldBC)\\\\\\\
end\\\\\\\
 \\\\\\\
local function renderOptions(options, selectedOption)\\\\\\\
    local w,h = term.getSize()\\\\\\\
    if #options > h-2 then\\\\\\\
        error(\\\\\\\"Too many options to display. Page support will come in the future.\\\\\\\")\\\\\\\
    end\\\\\\\
 \\\\\\\
    for i=1, #options do\\\\\\\
        local oBG = term.getBackgroundColor()\\\\\\\
        local oTC = term.getTextColor()\\\\\\\
 \\\\\\\
        term.setCursorPos(1,i+2)\\\\\\\
        if selectedOption == i then\\\\\\\
            term.setBackgroundColor(colors.gray)\\\\\\\
        else\\\\\\\
            term.setBackgroundColor(colors.black)\\\\\\\
        end\\\\\\\
        term.clearLine()\\\\\\\
        center(options[i], i+2, colors.white)\\\\\\\
 \\\\\\\
        term.setBackgroundColor(oBG)\\\\\\\
        term.setTextColor(oTC)\\\\\\\
    end\\\\\\\
end\\\\\\\
 \\\\\\\
function drawMenu(topText, options)\\\\\\\
    local w,h = term.getSize()\\\\\\\
    local selectedOption = 1\\\\\\\
    local function render(sOption)\\\\\\\
        term.clear()\\\\\\\
        term.setCursorPos(1,1)\\\\\\\
        drawTop(topText)\\\\\\\
        renderOptions(options, sOption)\\\\\\\
    end\\\\\\\
    local function changeSelectedOption(a)\\\\\\\
        if selectedOption+a > 0 and selectedOption+a < #options+1 then\\\\\\\
            selectedOption = selectedOption+a\\\\\\\
        end\\\\\\\
        render(selectedOption)\\\\\\\
    end\\\\\\\
 \\\\\\\
    local oldBG = term.getBackgroundColor()\\\\\\\
    local oldTX = term.getTextColor()\\\\\\\
 \\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.setTextColor(colors.white)\\\\\\\
 \\\\\\\
    render(selectedOption)\\\\\\\
 \\\\\\\
    while true do\\\\\\\
        local event, param1, param2, param3 = os.pullEvent()\\\\\\\
        if event == \\\\\\\"key\\\\\\\" then\\\\\\\
            if param1 == keys.enter then\\\\\\\
                break\\\\\\\
            elseif param1 == keys.up then\\\\\\\
                changeSelectedOption(-1)\\\\\\\
            elseif param1 == keys.down then\\\\\\\
                changeSelectedOption(1)\\\\\\\
            end\\\\\\\
        end\\\\\\\
    end\\\\\\\
    term.setBackgroundColor(oldBG)\\\\\\\
    term.setTextColor(oldTX)\\\\\\\
    term.clear()\\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    return selectedOption\\\\\\\
end\\\\\\\
 \\\\\\\
function drawInfoScreen(title, info)\\\\\\\
    local w,h = term.getSize()\\\\\\\
    local oldBG = term.getBackgroundColor()\\\\\\\
    local oldTX = term.getTextColor()\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.setTextColor(colors.white)\\\\\\\
    term.clear()\\\\\\\
    term.setCursorPos(1,2)\\\\\\\
    print(info)\\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    drawTop(title)\\\\\\\
    drawBottom(\\\\\\\"Press ENTER to return...\\\\\\\")\\\\\\\
    while true do\\\\\\\
        local event, param1 = os.pullEvent()\\\\\\\
        if event == \\\\\\\"key\\\\\\\" and param1 == keys.enter then\\\\\\\
            break\\\\\\\
        end\\\\\\\
    end\\\\\\\
    term.setBackgroundColor(oldBG)\\\\\\\
    term.setTextColor(oldTX)\\\\\\\
    term.clear()\\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    return selectedOption\\\\\\\
end\\\"\",\
  \"F:libminimenu\",\
  \"\\\"function minimenu( ... )\\\\\\\
\\\\009local tArgs = { ... }\\\\\\\
\\\\009local tSelections = {}\\\\\\\
\\\\009local _, y = term.getSize()\\\\\\\
\\\\009local n = 1\\\\\\\
\\\\009for i, str in ipairs( tArgs ) do\\\\\\\
\\\\009\\\\009tSelections[ i ] = { str = str }\\\\\\\
\\\\009\\\\009tSelections[ i ][ \\\\\\\"x1\\\\\\\" ] = n\\\\\\\
\\\\009\\\\009tSelections[ i ][ \\\\\\\"x2\\\\\\\" ] = n + #str + 1\\\\\\\
\\\\009\\\\009n = n + 2 + #str\\\\\\\
\\\\009end\\\\\\\
\\\\009for k, v in ipairs( tSelections ) do\\\\\\\
\\\\009\\\\009term.setCursorPos( v[\\\\\\\"x1\\\\\\\"], y )\\\\\\\
\\\\009\\\\009term.write( ' ' .. v.str )\\\\\\\
\\\\009end\\\\\\\
\\\\009local slc = 1\\\\\\\
\\\\009local last = 1\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009term.setCursorPos( tSelections[ last ][\\\\\\\"x1\\\\\\\"], y )\\\\\\\
\\\\009\\\\009term.write( ' ' )\\\\\\\
\\\\009\\\\009term.setCursorPos( tSelections[ last ][\\\\\\\"x2\\\\\\\"], y )\\\\\\\
\\\\009\\\\009term.write( ' ' )\\\\\\\
\\\\009\\\\009term.setCursorPos( tSelections[ slc ][\\\\\\\"x1\\\\\\\"], y )\\\\\\\
\\\\009\\\\009term.setTextColor( term.isColor() and colors.yellow or colors.white )\\\\\\\
\\\\009\\\\009term.write( \\\\\\\"[\\\\\\\" )\\\\\\\
\\\\009\\\\009term.setCursorPos( tSelections[ slc ][\\\\\\\"x2\\\\\\\"], y )\\\\\\\
\\\\009\\\\009term.write( \\\\\\\"]\\\\\\\" )\\\\\\\
\\\\009\\\\009while true do\\\\\\\
\\\\009\\\\009\\\\009local event, key = os.pullEvent( \\\\\\\"key\\\\\\\" )\\\\\\\
\\\\009\\\\009\\\\009if key == 203 and tSelections[ slc - 1 ] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009last = slc\\\\\\\
\\\\009\\\\009\\\\009\\\\009slc = slc - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009elseif key == 205 and tSelections[ slc + 1 ] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009last = slc\\\\\\\
\\\\009\\\\009\\\\009\\\\009slc = slc + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009elseif key == 28 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009return tSelections[ slc ].str\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\"\",\
  \"F:modem\",\
  \"\\\"local mArgs = {...}\\\\\\\
local help = \\\\\\\"modem <open/close/status/help>\\\\\\\"\\\\\\\
\\\\\\\
function autoOpen()\\\\\\\
 for _, v in pairs(rs.getSides()) do\\\\\\\
  if peripheral.isPresent(v) and peripheral.getType(v) == \\\\\\\"modem\\\\\\\" then\\\\\\\
   if not rednet.isOpen(v) then\\\\\\\
    rednet.open(v)\\\\\\\
    print(\\\\\\\"Modem opened on \\\\\\\"..v..\\\\\\\" side\\\\\\\")\\\\\\\
   else\\\\\\\
    printError(\\\\\\\"Modem on \\\\\\\"..v..\\\\\\\" side already open\\\\\\\")\\\\\\\
   end\\\\\\\
  end\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function autoClose()\\\\\\\
 for _, v in pairs(rs.getSides()) do\\\\\\\
  if peripheral.isPresent(v) and peripheral.getType(v) == \\\\\\\"modem\\\\\\\" then\\\\\\\
   if rednet.isOpen(v) then\\\\\\\
    rednet.close(v)\\\\\\\
    print(\\\\\\\"Modem closed on \\\\\\\"..v..\\\\\\\" side\\\\\\\")\\\\\\\
   else\\\\\\\
    printError(\\\\\\\"Modem on \\\\\\\"..v..\\\\\\\" side already closed\\\\\\\")\\\\\\\
   end\\\\\\\
  end\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function list()\\\\\\\
 for _, v in pairs(rs.getSides()) do\\\\\\\
  if peripheral.isPresent(v) and peripheral.getType(v) == \\\\\\\"modem\\\\\\\" then\\\\\\\
   print(\\\\\\\"Modem detected on \\\\\\\"..v..\\\\\\\" side\\\\\\\")\\\\\\\
   if rednet.isOpen(v) then\\\\\\\
    print(\\\\\\\"Modem is open\\\\\\\")\\\\\\\
   elseif not rednet.isOpen(v) then\\\\\\\
    print(\\\\\\\"Modem is closed\\\\\\\")\\\\\\\
   end\\\\\\\
  end\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
if #mArgs < 1 then\\\\\\\
 print(help)\\\\\\\
else\\\\\\\
 if mArgs[1] == \\\\\\\"open\\\\\\\" then\\\\\\\
  autoOpen()\\\\\\\
 elseif mArgs[1] == \\\\\\\"close\\\\\\\" then\\\\\\\
  autoClose()\\\\\\\
 elseif mArgs[1] == \\\\\\\"status\\\\\\\" then\\\\\\\
  list()\\\\\\\
 elseif mArgs[1] == \\\\\\\"help\\\\\\\" then\\\\\\\
  print(help)\\\\\\\
 end\\\\\\\
end\\\"\",\
  \"F:pastebin.lua\",\
  \"\\\"\\\\\\\
local function printUsage()\\\\\\\
    print( \\\\\\\"Usages:\\\\\\\" )\\\\\\\
    print( \\\\\\\"pastebin put <filename>\\\\\\\" )\\\\\\\
    print( \\\\\\\"pastebin get <code> <filename>\\\\\\\" )\\\\\\\
    print( \\\\\\\"pastebin run <code> <arguments>\\\\\\\" )\\\\\\\
end\\\\\\\
 \\\\\\\
local tArgs = { ... }\\\\\\\
if #tArgs < 2 then\\\\\\\
    printUsage()\\\\\\\
    return\\\\\\\
end\\\\\\\
 \\\\\\\
if not http then\\\\\\\
    printError( \\\\\\\"Pastebin requires http API\\\\\\\" )\\\\\\\
    printError( \\\\\\\"Set http_enable to true in ComputerCraft.cfg\\\\\\\" )\\\\\\\
    return\\\\\\\
end\\\\\\\
 \\\\\\\
local function get(paste)\\\\\\\
    write( \\\\\\\"Connecting to pastebin.com... \\\\\\\" )\\\\\\\
    local response = http.get(\\\\\\\
        \\\\\\\"https://pastebin.com/raw/\\\\\\\"..textutils.urlEncode( paste )\\\\\\\
    )\\\\\\\
        \\\\\\\
    if response then\\\\\\\
        print( \\\\\\\"Success.\\\\\\\" )\\\\\\\
        \\\\\\\
        local sResponse = response.readAll()\\\\\\\
        response.close()\\\\\\\
        return sResponse\\\\\\\
    else\\\\\\\
        print( \\\\\\\"Failed.\\\\\\\" )\\\\\\\
    end\\\\\\\
end\\\\\\\
 \\\\\\\
local sCommand = tArgs[1]\\\\\\\
if sCommand == \\\\\\\"put\\\\\\\" then\\\\\\\
    -- Upload a file to pastebin.com\\\\\\\
    -- Determine file to upload\\\\\\\
    local sFile = tArgs[2]\\\\\\\
    local sPath = shell.resolve( sFile )\\\\\\\
    if not fs.exists( sPath ) or fs.isDir( sPath ) then\\\\\\\
        print( \\\\\\\"No such file\\\\\\\" )\\\\\\\
        return\\\\\\\
    end\\\\\\\
    \\\\\\\
    -- Read in the file\\\\\\\
    local sName = fs.getName( sPath )\\\\\\\
    local file = fs.open( sPath, \\\\\\\"r\\\\\\\" )\\\\\\\
    local sText = file.readAll()\\\\\\\
    file.close()\\\\\\\
    \\\\\\\
    -- POST the contents to pastebin\\\\\\\
    write( \\\\\\\"Connecting to pastebin.com... \\\\\\\" )\\\\\\\
    local key = \\\\\\\"0ec2eb25b6166c0c27a394ae118ad829\\\\\\\"\\\\\\\
    local response = http.post(\\\\\\\
        \\\\\\\"https://pastebin.com/api/api_post.php\\\\\\\", \\\\\\\
        \\\\\\\"api_option=paste&\\\\\\\"..\\\\\\\
        \\\\\\\"api_dev_key=\\\\\\\"..key..\\\\\\\"&\\\\\\\"..\\\\\\\
        \\\\\\\"api_paste_format=lua&\\\\\\\"..\\\\\\\
        \\\\\\\"api_paste_name=\\\\\\\"..textutils.urlEncode(sName)..\\\\\\\"&\\\\\\\"..\\\\\\\
        \\\\\\\"api_paste_code=\\\\\\\"..textutils.urlEncode(sText)\\\\\\\
    )\\\\\\\
        \\\\\\\
    if response then\\\\\\\
        print( \\\\\\\"Success.\\\\\\\" )\\\\\\\
        \\\\\\\
        local sResponse = response.readAll()\\\\\\\
        response.close()\\\\\\\
                \\\\\\\
        local sCode = string.match( sResponse, \\\\\\\"[^/]+$\\\\\\\" )\\\\\\\
        print( \\\\\\\"Uploaded as \\\\\\\"..sResponse )\\\\\\\
        print( \\\\\\\"Run \\\\\\\\\\\\\\\"pastebin get \\\\\\\"..sCode..\\\\\\\"\\\\\\\\\\\\\\\" to download anywhere\\\\\\\" )\\\\\\\
 \\\\\\\
    else\\\\\\\
        print( \\\\\\\"Failed.\\\\\\\" )\\\\\\\
    end\\\\\\\
    \\\\\\\
elseif sCommand == \\\\\\\"get\\\\\\\" then\\\\\\\
    -- Download a file from pastebin.com\\\\\\\
    if #tArgs < 3 then\\\\\\\
        printUsage()\\\\\\\
        return\\\\\\\
    end\\\\\\\
 \\\\\\\
    -- Determine file to download\\\\\\\
    local sCode = tArgs[2]\\\\\\\
    local sFile = tArgs[3]\\\\\\\
    local sPath = shell.resolve( sFile )\\\\\\\
    if fs.exists( sPath ) then\\\\\\\
        print( \\\\\\\"File already exists\\\\\\\" )\\\\\\\
        return\\\\\\\
    end\\\\\\\
    \\\\\\\
    -- GET the contents from pastebin\\\\\\\
    local res = get(sCode)\\\\\\\
    if res then        \\\\\\\
        local file = fs.open( sPath, \\\\\\\"w\\\\\\\" )\\\\\\\
        file.write( res )\\\\\\\
        file.close()\\\\\\\
        \\\\\\\
        print( \\\\\\\"Downloaded as \\\\\\\"..sFile )\\\\\\\
    end \\\\\\\
elseif sCommand == \\\\\\\"run\\\\\\\" then\\\\\\\
    local sCode = tArgs[2]\\\\\\\
 \\\\\\\
    local res = get(sCode)\\\\\\\
    if res then\\\\\\\
        local func, err = load(res, sCode, \\\\\\\"t\\\\\\\", _ENV)\\\\\\\
        if not func then\\\\\\\
            printError( err )\\\\\\\
            return\\\\\\\
        end\\\\\\\
        local success, msg = pcall(func, table.unpack(tArgs, 3))\\\\\\\
        if not success then\\\\\\\
            printError( msg )\\\\\\\
        end\\\\\\\
    end\\\\\\\
else\\\\\\\
    printUsage()\\\\\\\
    return\\\\\\\
end\\\"\",\
  \"F:programs.lua\",\
  \"\\\"local width, height = term.getSize()\\\\\\\
local programs = {}\\\\\\\
local userEvents = {\\\\\\\"mouse_click\\\\\\\", \\\\\\\"mouse_up\\\\\\\", \\\\\\\"mouse_drag\\\\\\\", \\\\\\\"char\\\\\\\", \\\\\\\"key\\\\\\\", \\\\\\\"monitor_touch\\\\\\\", \\\\\\\"key_up\\\\\\\", \\\\\\\"paste\\\\\\\", \\\\\\\"terminate\\\\\\\"}\\\\\\\
\\\\\\\
programs.new = function(func, x, y, w, h)\\\\\\\
  local x = x or 1\\\\\\\
  local y = y or 1\\\\\\\
  local w = w or widht\\\\\\\
  local h = h or height\\\\\\\
  local program = {\\\\\\\
    x = x, y = y, w = w, h = h,\\\\\\\
    term = window.create(\\\\\\\
      term.current(), x, y, w, h\\\\\\\
    ),\\\\\\\
    selected = false,\\\\\\\
    coroutine = coroutine.create(func),\\\\\\\
    reposition = function(self, x, y)\\\\\\\
      self.x, self.y = x, y\\\\\\\
      self.term.reposition(x, y)\\\\\\\
    end,\\\\\\\
    resize = function(self, w, h)\\\\\\\
      oldX, oldY = self.term.getPosition()\\\\\\\
      self.term.reposition(oldX, oldY, w, h)\\\\\\\
      os.queueEvent(\\\\\\\"term_resize\\\\\\\")\\\\\\\
    end,\\\\\\\
    reset = function(self, x, y, w, h)\\\\\\\
      self.x, self.y, self.w, self.h = x, y, w, h\\\\\\\
      self.term.reposition(x, y, w, h)\\\\\\\
      os.queueEvent(\\\\\\\"term_resize\\\\\\\")\\\\\\\
    end\\\\\\\
  }\\\\\\\
  return program\\\\\\\
end\\\\\\\
\\\\\\\
local updateProgram = function(programs, programNum, event, var1, var2, var3, isUserEvent)\\\\\\\
  local program = programs[programNum]\\\\\\\
  local event, var1, var2, var3 = event, var1, var2, var3\\\\\\\
\\\\\\\
  -- redirect to programs terminal\\\\\\\
  local oldTerm = term.redirect(program.term)\\\\\\\
\\\\\\\
  -- give the mouse click as seen from the program window\\\\\\\
  if string.sub(event, 1, #\\\\\\\"mouse\\\\\\\") == \\\\\\\"mouse\\\\\\\" then\\\\\\\
    var2 = var2-program.x+1\\\\\\\
    var3 = var3-program.y+1\\\\\\\
  end\\\\\\\
\\\\\\\
  -- find out if the program window is clicked\\\\\\\
  if event == \\\\\\\"mouse_click\\\\\\\" and var2>=0 and var3>=0 and var2<=program.w and var3<=program.h then\\\\\\\
    -- select this program and deselect every other one\\\\\\\
    for programNum = 1, #programs do\\\\\\\
      programs[programNum].selected = false\\\\\\\
    end\\\\\\\
    program.selected = true\\\\\\\
    if var3 == 0 then\\\\\\\
      program.barSelected = true\\\\\\\
      program.barSelectedX = var2\\\\\\\
      if var2 == 1 then\\\\\\\
        program.resizeIconSelected = true\\\\\\\
      end\\\\\\\
      if var2 == program.w then\\\\\\\
        table.remove(programs, programNum)\\\\\\\
        term.redirect(oldTerm)\\\\\\\
        return\\\\\\\
      end\\\\\\\
    end\\\\\\\
\\\\\\\
    -- resort program table\\\\\\\
\\\\\\\
    local selectedProgram\\\\\\\
    for i = 1, #programs do\\\\\\\
      if programs[i].selected then\\\\\\\
        selectedProgram = programs[i]\\\\\\\
        table.remove(programs, i)\\\\\\\
        break\\\\\\\
      end\\\\\\\
    end\\\\\\\
    table.insert(programs, selectedProgram)\\\\\\\
  end\\\\\\\
\\\\\\\
  -- move window when mouse is dragged\\\\\\\
  if event == \\\\\\\"mouse_drag\\\\\\\" and program.barSelected then\\\\\\\
    if program.resizeIconSelected then\\\\\\\
      program:reset(program.x + var2-program.barSelectedX, program.y+var3, program.w-var2+1, program.h-var3)\\\\\\\
    else\\\\\\\
      program:reposition(program.x + var2-program.barSelectedX, program.y+var3)\\\\\\\
    end\\\\\\\
  end\\\\\\\
\\\\\\\
  -- deselect bar if mouse is released\\\\\\\
  if event == \\\\\\\"mouse_up\\\\\\\" then\\\\\\\
    program.barSelected = false\\\\\\\
    program.resizeIconSelected = false\\\\\\\
  end\\\\\\\
\\\\\\\
  -- only give program user events if selected\\\\\\\
  if isUserEvent and not program.selected then\\\\\\\
    event, var1, var2, var3 = \\\\\\\"\\\\\\\"\\\\\\\
  end\\\\\\\
\\\\\\\
  -- resume program\\\\\\\
  coroutine.resume(program.coroutine, event, var1, var2, var3)\\\\\\\
\\\\\\\
  -- delete program if it is finished\\\\\\\
  if coroutine.status(program.coroutine) == \\\\\\\"dead\\\\\\\" then\\\\\\\
    table.remove(programs, programNum)\\\\\\\
    term.redirect(oldTerm)\\\\\\\
    return true\\\\\\\
  end\\\\\\\
\\\\\\\
  program.term.redraw()\\\\\\\
  term.redirect(oldTerm)\\\\\\\
\\\\\\\
  -- draw line above program\\\\\\\
  if program.selected then\\\\\\\
    term.setBackgroundColor(colors.lightGray)\\\\\\\
    term.setTextColor(colors.gray)\\\\\\\
  else\\\\\\\
    term.setBackgroundColor(colors.gray)\\\\\\\
    term.setTextColor(colors.lightGray)\\\\\\\
  end\\\\\\\
  paintutils.drawLine(program.x, program.y-1, program.x+program.w-1, program.y-1)\\\\\\\
\\\\\\\
  -- draw resize icon\\\\\\\
  term.setCursorPos(program.x, program.y-1)\\\\\\\
  term.write(\\\\\\\"/\\\\\\\")\\\\\\\
\\\\\\\
  -- draw close icon\\\\\\\
  term.setCursorPos(program.x+program.w-1, program.y-1)\\\\\\\
  term.setTextColor(colors.orange)\\\\\\\
  term.write(\\\\\\\"x\\\\\\\")\\\\\\\
end\\\\\\\
\\\\\\\
programs.update = function(programs, event, var1, var2, var3)\\\\\\\
  -- check if event is made from the user\\\\\\\
  local isUserEvent = false\\\\\\\
  for userEventNum = 1, #userEvents do\\\\\\\
    local userEvent = userEvents[userEventNum]\\\\\\\
    if event == userEvent then\\\\\\\
      isUserEvent = true\\\\\\\
      break\\\\\\\
    end\\\\\\\
  end\\\\\\\
\\\\\\\
  -- update every program\\\\\\\
  for programNum = 1, #programs do\\\\\\\
    if updateProgram(programs, programNum, event, var1, var2, var3, isUserEvent) then break end\\\\\\\
  end\\\\\\\
end\\\\\\\
\\\\\\\
return programs\\\"\",\
  \"F:settings.lua\",\
  \"\\\"local libcode = [[\\\\\\\
\\\\\\\
local tSettings = {}\\\\\\\
\\\\\\\
function set( sName, value )\\\\\\\
    if type( sName ) ~= \\\\\\\"string\\\\\\\" then error( \\\\\\\"bad argument #1 (expected string, got \\\\\\\" .. type( sName ) .. \\\\\\\")\\\\\\\", 2 ) end\\\\\\\
    \\\\\\\
    local sValueTy = type(value)\\\\\\\
    if sValueTy ~= \\\\\\\"number\\\\\\\" and sValueTy ~= \\\\\\\"string\\\\\\\" and sValueTy ~= \\\\\\\"boolean\\\\\\\" and sValueTy ~= \\\\\\\"table\\\\\\\" then \\\\\\\
        error( \\\\\\\"bad argument #2 (expected value, got \\\\\\\" .. sValueTy .. \\\\\\\")\\\\\\\", 2 ) \\\\\\\
    end\\\\\\\
    if sValueTy == \\\\\\\"table\\\\\\\" then\\\\\\\
        -- Ensure value is serializeable\\\\\\\
        value = textutils.unserialize( textutils.serialize(value) )\\\\\\\
    end\\\\\\\
    tSettings[ sName ] = value\\\\\\\
end\\\\\\\
\\\\\\\
local copy\\\\\\\
function copy( value )\\\\\\\
    if type(value) == \\\\\\\"table\\\\\\\" then\\\\\\\
        local result = {}\\\\\\\
        for k,v in pairs(value) do\\\\\\\
            result[k] = copy(v)\\\\\\\
        end\\\\\\\
        return result\\\\\\\
    else\\\\\\\
        return value\\\\\\\
    end\\\\\\\
end\\\\\\\
\\\\\\\
function get( sName, default )\\\\\\\
    if type(sName) ~= \\\\\\\"string\\\\\\\" then\\\\\\\
        error( \\\\\\\"bad argument #1 (expected string, got \\\\\\\" .. type( sName ) .. \\\\\\\")\\\\\\\", 2 ) \\\\\\\
    end\\\\\\\
    local result = tSettings[ sName ]\\\\\\\
    if result ~= nil then\\\\\\\
        return copy(result)\\\\\\\
    else\\\\\\\
        return default\\\\\\\
    end\\\\\\\
end\\\\\\\
\\\\\\\
function unset( sName )\\\\\\\
    if type(sName) ~= \\\\\\\"string\\\\\\\" then\\\\\\\
        error( \\\\\\\"bad argument #1 (expected string, got \\\\\\\" .. type( sName ) .. \\\\\\\")\\\\\\\", 2 ) \\\\\\\
    end\\\\\\\
    tSettings[ sName ] = nil\\\\\\\
end\\\\\\\
\\\\\\\
function clear()\\\\\\\
    tSettings = {}\\\\\\\
end\\\\\\\
\\\\\\\
function getNames()\\\\\\\
    local result = {}\\\\\\\
    for k,v in pairs( tSettings ) do\\\\\\\
        result[ #result + 1 ] = k\\\\\\\
    end\\\\\\\
    table.sort(result)\\\\\\\
    return result\\\\\\\
end\\\\\\\
\\\\\\\
function load( sPath )\\\\\\\
    if type(sPath) ~= \\\\\\\"string\\\\\\\" then\\\\\\\
        error( \\\\\\\"bad argument #1 (expected string, got \\\\\\\" .. type( sPath ) .. \\\\\\\")\\\\\\\", 2 ) \\\\\\\
    end\\\\\\\
    local file = fs.open( sPath, \\\\\\\"r\\\\\\\" )\\\\\\\
    if not file then\\\\\\\
        return false\\\\\\\
    end\\\\\\\
\\\\\\\
    local sText = file.readAll()\\\\\\\
    file.close()\\\\\\\
\\\\\\\
    local tFile = textutils.unserialize( sText )\\\\\\\
    if type(tFile) ~= \\\\\\\"table\\\\\\\" then\\\\\\\
        return false\\\\\\\
    end\\\\\\\
\\\\\\\
    for k,v in pairs(tFile) do\\\\\\\
        if type(k) == \\\\\\\"string\\\\\\\" and\\\\\\\
           (type(v) == \\\\\\\"string\\\\\\\" or type(v) == \\\\\\\"number\\\\\\\" or type(v) == \\\\\\\"boolean\\\\\\\" or type(v) == \\\\\\\"table\\\\\\\") then\\\\\\\
            set( k, v )\\\\\\\
        end\\\\\\\
    end\\\\\\\
\\\\\\\
    return true\\\\\\\
end\\\\\\\
\\\\\\\
function save( sPath )\\\\\\\
    if type(sPath) ~= \\\\\\\"string\\\\\\\" then\\\\\\\
        error( \\\\\\\"bad argument #1 (expected string, got \\\\\\\" .. type( sPath ) .. \\\\\\\")\\\\\\\", 2 ) \\\\\\\
    end\\\\\\\
    local file = fs.open( sPath, \\\\\\\"w\\\\\\\" )\\\\\\\
    if not file then\\\\\\\
        return false\\\\\\\
    end\\\\\\\
\\\\\\\
    file.write( textutils.serialize( tSettings ) )\\\\\\\
    file.close()\\\\\\\
\\\\\\\
    return true\\\\\\\
end\\\\\\\
]]\\\\\\\
\\\\\\\
syscall(0x00000004, \\\\\\\"settings\\\\\\\", libcode)\\\\\\\
\\\\\\\
return 1\\\"\",\
  \"F:split\",\
  \"\\\"local playerEvents = {\\\\\\\
  \\\\\\\"key\\\\\\\", \\\\\\\"char\\\\\\\", \\\\\\\"mouse_click\\\\\\\", \\\\\\\"mouse_drag\\\\\\\", \\\\\\\"mouse_up\\\\\\\"\\\\\\\
}\\\\\\\
local running = true\\\\\\\
local program = \\\\\\\"rom/programs/shell.lua\\\\\\\"\\\\\\\
local split = \\\\\\\"vertical\\\\\\\"\\\\\\\
local args = {...}\\\\\\\
if args[1] then\\\\\\\
  if args[1] == \\\\\\\"1\\\\\\\" then args[1] = \\\\\\\"horizontal\\\\\\\" end\\\\\\\
  if args[1] == \\\\\\\"2\\\\\\\" then args[1] = \\\\\\\"vertical\\\\\\\" end\\\\\\\
  split = args[1]\\\\\\\
  if args[2] then\\\\\\\
    program = args[2]\\\\\\\
    if args[3] then\\\\\\\
      for i = 3, #args do\\\\\\\
        program = program..\\\\\\\" \\\\\\\"..args[i]\\\\\\\
      end\\\\\\\
    end\\\\\\\
  end\\\\\\\
end\\\\\\\
\\\\\\\
local width, height = term.getSize()\\\\\\\
local halfwidth = math.floor(width/2)\\\\\\\
local halfheight = math.floor(height/2)\\\\\\\
local splits = {\\\\\\\
  vertical = {\\\\\\\
    window1 = window.create(term.current(), 1, 1, halfwidth-1, height),\\\\\\\
    window2 = window.create(term.current(), halfwidth+1, 1, halfwidth+1, height)\\\\\\\
  },\\\\\\\
  horizontal = {\\\\\\\
    window1 = window.create(term.current(), 1, 1, width, halfheight),\\\\\\\
    window2 = window.create(term.current(), 1, halfheight+1, width, halfheight+1)\\\\\\\
  }\\\\\\\
}\\\\\\\
local cx, cy\\\\\\\
local selected = 1\\\\\\\
\\\\\\\
local co1 = coroutine.create(function()\\\\\\\
  shell.run(\\\\\\\"rom/programs/shell.lua\\\\\\\")\\\\\\\
end)\\\\\\\
\\\\\\\
local co2 = coroutine.create(function()\\\\\\\
  shell.run(program)\\\\\\\
end)\\\\\\\
\\\\\\\
local resumeProgram = function(co, window, eventData, num)\\\\\\\
  if coroutine.status(co) == \\\\\\\"dead\\\\\\\" then\\\\\\\
    running = false\\\\\\\
  end\\\\\\\
  local window = splits[split][window]\\\\\\\
  local oldTerm = term.redirect(window)\\\\\\\
  local x, y = window.getPosition()\\\\\\\
  if string.sub(eventData[1], 1, #\\\\\\\"mouse\\\\\\\") == \\\\\\\"mouse\\\\\\\" then\\\\\\\
    eventData[3] = eventData[3]-x+1\\\\\\\
    eventData[4] = eventData[4]-y+1\\\\\\\
  end\\\\\\\
  local isPlayerEvent = false\\\\\\\
  for i = 1, #playerEvents do\\\\\\\
    if playerEvents[i] == eventData[1] then isPlayerEvent = true end\\\\\\\
  end\\\\\\\
  if selected == num then\\\\\\\
    coroutine.resume(co, table.unpack(eventData))\\\\\\\
    local wcx, wcy = term.getCursorPos()\\\\\\\
    cx, cy = wcx+x-1, wcy+y-1\\\\\\\
  elseif not isPlayerEvent then\\\\\\\
    coroutine.resume(co, table.unpack(eventData))\\\\\\\
  else\\\\\\\
    coroutine.resume(co, \\\\\\\"\\\\\\\")\\\\\\\
  end\\\\\\\
  term.redirect(oldTerm)\\\\\\\
end\\\\\\\
\\\\\\\
local isTermClicked = function(mx, my, te)\\\\\\\
  local x, y = te.getPosition()\\\\\\\
  local w, h = te.getSize()\\\\\\\
  if mx>=x and my>y then\\\\\\\
    if mx<x+w and my<y+h then\\\\\\\
      return true\\\\\\\
    end\\\\\\\
  end\\\\\\\
end\\\\\\\
\\\\\\\
while running do\\\\\\\
  local timer = os.startTimer(0.1)\\\\\\\
  local eventData = {os.pullEventRaw()}\\\\\\\
  os.cancelTimer(timer)\\\\\\\
\\\\\\\
  if eventData[1] == \\\\\\\"mouse_click\\\\\\\" then\\\\\\\
    local mx, my = eventData[3], eventData[4]\\\\\\\
    if isTermClicked(mx, my, splits[split][\\\\\\\"window1\\\\\\\"]) then\\\\\\\
      selected = 1\\\\\\\
    elseif isTermClicked(mx, my, splits[split][\\\\\\\"window2\\\\\\\"]) then\\\\\\\
      selected = 2\\\\\\\
    end\\\\\\\
  end\\\\\\\
\\\\\\\
  resumeProgram(co1, \\\\\\\"window1\\\\\\\", eventData, 1)\\\\\\\
  resumeProgram(co2, \\\\\\\"window2\\\\\\\", eventData, 2)\\\\\\\
\\\\\\\
  if split == \\\\\\\"vertical\\\\\\\" then\\\\\\\
    paintutils.drawLine(halfwidth, 1, halfwidth, height, colors.lightGray)\\\\\\\
  else\\\\\\\
    paintutils.drawLine(1, halfheight, width, halfheight, colors.lightGray)\\\\\\\
  end\\\\\\\
  if cx and cy then\\\\\\\
    term.setCursorPos(cx, cy)\\\\\\\
  end\\\\\\\
end\\\\\\\
\\\\\\\
term.setBackgroundColour(colors.black)\\\\\\\
term.clear()\\\\\\\
term.setCursorPos(1, 1)\\\"\",\
  \"F:std\",\
  \"\\\"--[[\\\\\\\
\\\\009STD Graphical User Interface! (STD-GUI)!\\\\\\\
\\\\009Made by LDDestroier/EldidiStroyrr (same guy)\\\\\\\
\\\\\\\
\\\\009This program is a standalone GUI for Super Text Downloader, or STD for short.\\\\\\\
\\\\009It has category sorting, program searching, smooth scrolling, and run support (not just download)\\\\\\\
\\\\009This will tell you if you're overwriting a file, so no worry.\\\\\\\
\\\\\\\
\\\\009As of May 15th (my GOSH DARN birthday) 2016, STD-GUI now lets you install SimSoft applications in the store interface!\\\\\\\
\\\\009As of Jan 11th 2018, STD-GUI now lets you install Axiom OS applications too!\\\\\\\
\\\\\\\
\\\\009pastebin get P9dDhQ2m stdgui\\\\\\\
\\\\009std PB P9dDhQ2m stdgui\\\\\\\
\\\\009std ld stdgui stdgui\\\\\\\
\\\\\\\
\\\\009This is a stable release. You fool!\\\\\\\
--]]\\\\\\\
\\\\\\\
local tsv = term.current().setVisible --comment out if you are debugging\\\\\\\
\\\\\\\
local isBeta = false --changes the update URL\\\\\\\
\\\\\\\
if not http then --why, you...\\\\\\\
\\\\009return false, printError(\\\\\\\"HTTP must be enabled to use STD. Contact an administrator for assistance.\\\\\\\")\\\\\\\
else\\\\\\\
\\\\009if not http.checkURL(\\\\\\\"http://pastebin.com\\\\\\\") then\\\\\\\
\\\\009\\\\009return false, printError(\\\\\\\"For some reason, Pastebin.com is whitelisted. Abort.\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
local scr_x, scr_y = term.getSize()\\\\\\\
\\\\\\\
local doDisplayTitle = false\\\\\\\
local relativePath = false\\\\\\\
local doColorize = true\\\\\\\
\\\\\\\
if type(std) ~= \\\\\\\"table\\\\\\\" then std = {} end\\\\\\\
\\\\\\\
local overrideNoOS = false --prevent SimSoft functions, even if it's installed\\\\\\\
local isSimSoft = false --special integration into SimSoft!\\\\\\\
local isAxiom = false --special integration into Axiom!\\\\\\\
std.channel = \\\\\\\"STD\\\\\\\"\\\\\\\
std.prevChannel = std.channel\\\\\\\
\\\\\\\
std.channelURLs = { --special pastebin URLs for getting a list of files.\\\\\\\
\\\\009[\\\\\\\"STD\\\\\\\"] = \\\\\\\"http://pastebin.com/raw/zVws7eLq\\\\\\\", --default store list\\\\\\\
\\\\009[\\\\\\\"Discover\\\\\\\"] = \\\\\\\"http://pastebin.com/raw/9bXfCz6M\\\\\\\", --owned by dannysmc95\\\\\\\
--\\\\009[\\\\\\\"OnlineAPPS\\\\\\\"] = \\\\\\\"http://pastebin.com/raw/g2EnDYLp\\\\\\\", --owned by Twijn, but discontinued.\\\\\\\
\\\\009[\\\\\\\"STD-Media\\\\\\\"] = \\\\\\\"https://pastebin.com/raw/3JZHXTGL\\\\\\\", --list of pictures and music\\\\\\\
}\\\\\\\
local palate\\\\\\\
palate = {\\\\\\\
\\\\009pleasewait = {\\\\\\\
\\\\009\\\\009txt = colors.lightGray,\\\\\\\
\\\\009\\\\009bg = colors.black,\\\\\\\
\\\\009},\\\\\\\
\\\\009store = {\\\\\\\
\\\\009\\\\009bg = colors.black,\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009bgchar = \\\\\\\" \\\\\\\",\\\\\\\
\\\\009\\\\009entrybg = colors.gray,\\\\\\\
\\\\009\\\\009entrytxt = colors.white,\\\\\\\
\\\\009\\\\009entryasterisk = colors.lightGray,\\\\\\\
\\\\009\\\\009closetxt = colors.white,\\\\\\\
\\\\009\\\\009closebg = colors.red,\\\\\\\
\\\\009\\\\009previewtxt = colors.white,\\\\\\\
\\\\009\\\\009previewbg = colors.cyan,\\\\\\\
\\\\009\\\\009findbg = colors.white,\\\\\\\
\\\\009\\\\009findtxt = colors.black,\\\\\\\
\\\\009\\\\009indicatetxt = colors.black,\\\\\\\
\\\\009\\\\009indicatebg = colors.white,\\\\\\\
\\\\009\\\\009theendtxt = colors.gray,\\\\\\\
\\\\009\\\\009scrollbar = {\\\\\\\
\\\\009\\\\009\\\\009knobbg = colors.black,\\\\\\\
\\\\009\\\\009\\\\009knobtxt = colors.gray,\\\\\\\
\\\\009\\\\009\\\\009knobchar = \\\\\\\"|\\\\\\\",\\\\\\\
\\\\009\\\\009\\\\009barbg = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009bartxt = colors.gray,\\\\\\\
\\\\009\\\\009\\\\009barchar = \\\\\\\"|\\\\\\\",\\\\\\\
\\\\009\\\\009}\\\\\\\
\\\\009},\\\\\\\
\\\\009item = {\\\\\\\
\\\\009\\\\009bg = colors.gray,\\\\\\\
\\\\009\\\\009txt = colors.white,\\\\\\\
\\\\009\\\\009specialtxt = colors.yellow,\\\\\\\
\\\\009\\\\009previewtxt = colors.white,\\\\\\\
\\\\009\\\\009previewbg = colors.black,\\\\\\\
\\\\009\\\\009forumtxt = colors.lightGray,\\\\\\\
\\\\009\\\\009forumbg = colors.gray,\\\\\\\
\\\\009\\\\009closetxt = colors.white,\\\\\\\
\\\\009\\\\009closebg = colors.red,\\\\\\\
\\\\009\\\\009runtxt = colors.white,\\\\\\\
\\\\009\\\\009runbg = colors.green,\\\\\\\
\\\\009\\\\009downloadtxt = colors.white,\\\\\\\
\\\\009\\\\009downloadbg = colors.green,\\\\\\\
\\\\009},\\\\\\\
\\\\009menubar = {\\\\\\\
\\\\009\\\\009bg = colors.black,\\\\\\\
\\\\009\\\\009categorytxt = colors.lightGray,\\\\\\\
\\\\009\\\\009categorybg = colors.black,\\\\\\\
\\\\009\\\\009channeltxt = colors.lightGray,\\\\\\\
\\\\009\\\\009channelbg = colors.black,\\\\\\\
\\\\009\\\\009hotkeytxt = colors.gray,\\\\\\\
\\\\009\\\\009categorymenu = {\\\\\\\
\\\\009\\\\009\\\\009selecttxt = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009selectbg = colors.black,\\\\\\\
\\\\009\\\\009\\\\009bg = colors.black,\\\\\\\
\\\\009\\\\009\\\\009txt = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009orbtxt = colors.black,\\\\\\\
\\\\009\\\\009\\\\009cursortxt = colors.black,\\\\\\\
\\\\009\\\\009\\\\009cursorbg = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009borderbg = colors.black,\\\\\\\
\\\\009\\\\009},\\\\\\\
\\\\009\\\\009channelmenu = {\\\\\\\
\\\\009\\\\009\\\\009selecttxt = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009selectbg = colors.black,\\\\\\\
\\\\009\\\\009\\\\009bg = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009txt = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009orbtxt = colors.black,\\\\\\\
\\\\009\\\\009\\\\009cursortxt = colors.black,\\\\\\\
\\\\009\\\\009\\\\009cursorbg = colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009borderbg = colors.black,\\\\\\\
\\\\009\\\\009}\\\\\\\
\\\\009}\\\\\\\
}\\\\\\\
\\\\\\\
local getEvents = function(...)\\\\\\\
\\\\009local arg, output = table.pack(...)\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009output = {os.pullEvent()}\\\\\\\
\\\\009\\\\009for a = 1, #arg do\\\\\\\
\\\\009\\\\009\\\\009if type(arg[a]) == \\\\\\\"boolean\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if doRender == arg[a] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009return {}\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif output[1] == arg[a] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009return unpack(output)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local charClear = function(char)\\\\\\\
\\\\009local cx,cy = term.getCursorPos()\\\\\\\
\\\\009for y = 1, scr_y do\\\\\\\
\\\\009\\\\009term.setCursorPos(1,y)\\\\\\\
\\\\009\\\\009term.write(char:sub(1,1):rep(scr_x))\\\\\\\
\\\\009end\\\\\\\
\\\\009term.setCursorPos(cx,cy)\\\\\\\
end\\\\\\\
\\\\\\\
std.channelNames = {}\\\\\\\
for k,v in pairs(std.channelURLs) do\\\\\\\
\\\\009table.insert(std.channelNames,k)\\\\\\\
end\\\\\\\
\\\\\\\
std.stdList = \\\\\\\".\\\\\\\"..std.channel:lower()..\\\\\\\"_list\\\\\\\"\\\\\\\
\\\\\\\
if (fs.isDir(\\\\\\\"SimSoft/Data\\\\\\\") and fs.isDir(\\\\\\\"SimSoft/SappS\\\\\\\")) and (not overrideNoOS) then --checks if SimSoft is installed\\\\\\\
\\\\009isSimSoft = true\\\\\\\
elseif (fs.isDir(\\\\\\\"Axiom\\\\\\\") and fs.exists(\\\\\\\"Axiom/sys.axs\\\\\\\")) and (not overrideNoOS) then --checks if Axiom is installed\\\\\\\
\\\\009isAxiom = true\\\\\\\
end\\\\\\\
\\\\\\\
local cprint = function(txt,y)\\\\\\\
\\\\009local cX,cY = term.getCursorPos()\\\\\\\
\\\\009term.setCursorPos(math.ceil(scr_x/2)-math.floor(#txt/2),y or cY)\\\\\\\
\\\\009term.write(txt)\\\\\\\
end\\\\\\\
\\\\\\\
local scroll = 1 --one is the loneliest number...weaboo\\\\\\\
local scrollX = 1 --to view longer program names\\\\\\\
local maxScroll\\\\\\\
std.std_version = 101 --to prevent updating to std command line\\\\\\\
\\\\\\\
local setMaxScroll = function(catagory)\\\\\\\
\\\\009local output = 0\\\\\\\
\\\\009for k,v in pairs(std.storeURLs) do\\\\\\\
\\\\009\\\\009if (v.catagory == catagory) or catagory == 0 then\\\\\\\
\\\\009\\\\009\\\\009output = output + 1\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return (output*4)-(scr_y-4)\\\\\\\
end\\\\\\\
local catag = 0\\\\\\\
\\\\\\\
local pleaseWait = function(text)\\\\\\\
\\\\009term.setBackgroundColor(palate.pleasewait.bg)\\\\\\\
\\\\009term.setTextColor(palate.pleasewait.txt)\\\\\\\
\\\\009term.clear()\\\\\\\
\\\\009cprint(text or \\\\\\\"Getting list...please wait\\\\\\\",scr_y/2)\\\\\\\
end\\\\\\\
\\\\\\\
local coolPleaseWait = function()\\\\\\\
\\\\009local scr_x, scr_y = term.getSize()\\\\\\\
\\\\009local cols = \\\\\\\"f7\\\\\\\"\\\\\\\
\\\\009local length = scr_x/2\\\\\\\
\\\\009local render = function(col1,col2,prog,forwards)\\\\\\\
\\\\009    term.setCursorPos(1,1)\\\\\\\
\\\\009    local screen = (col1:rep(prog)..col2:rep(length-prog)):rep(scr_x*scr_y):sub(1,(scr_x*scr_y))\\\\\\\
\\\\009    local line\\\\\\\
\\\\009    for a = forwards and 1 or scr_y, forwards and scr_y or 1, forwards and 1 or -1 do\\\\\\\
\\\\009        line = screen:sub((a-1)*scr_x+1,a*scr_x)\\\\\\\
\\\\009        term.setCursorPos(1,a)\\\\\\\
\\\\009        term.blit((\\\\\\\"L\\\\\\\"):rep(#line),line,line)\\\\\\\
\\\\009    end\\\\\\\
\\\\009end\\\\\\\
\\\\009local pos1 = 2\\\\\\\
\\\\009local pos2 = pos1 - 1\\\\\\\
\\\\009local forwards = true\\\\\\\
\\\\009local reverse = false\\\\\\\
\\\\009while true do\\\\\\\
\\\\009    for a = reverse and length or 1, reverse and 1 or length, reverse and -1 or 1 do\\\\\\\
\\\\009        render(cols:sub(pos1,pos1),cols:sub(pos2,pos2),a,forwards)\\\\\\\
\\\\009        sleep(0.0)\\\\\\\
\\\\009    end\\\\\\\
\\\\009\\\\009   forwards = not forwards\\\\\\\
\\\\009   \\\\009reverse = not reverse\\\\\\\
\\\\009    pos1 = (pos1 + 1)\\\\\\\
\\\\009    pos2 = (pos2 + 1)\\\\\\\
\\\\009    if pos1 > #cols then pos1 = 1 end\\\\\\\
\\\\009    if pos2 > #cols then pos2 = 1 end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local setDefaultColors = function()\\\\\\\
\\\\009term.setBackgroundColor(palate.store.bg)\\\\\\\
\\\\009term.setTextColor(palate.store.txt)\\\\\\\
end\\\\\\\
\\\\\\\
local displayHelp = function(cli)\\\\\\\
\\\\009local helptext = [[\\\\\\\
This is a graphical interface to the STD downloader program.\\\\\\\
Use 'stdgui update' to update the list, or use 'F5'.\\\\\\\
If you want your program on it, PM LDDestroier on the CC forums.\\\\\\\
Hotkeys:\\\\\\\
\\\\009'Q' quit or back\\\\\\\
\\\\009'F5' refresh\\\\\\\
\\\\009'F1' set category\\\\\\\
\\\\009'F3' set channel\\\\\\\
\\\\009'F' or 'F6' search\\\\\\\
\\\\009'F12' update STDGUI\\\\\\\
\\\\009if normal computer, press 0-9 to select store item\\\\\\\
]]\\\\\\\
\\\\009if cli then\\\\\\\
\\\\009\\\\009return print(helptext)\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009setDefaultColors()\\\\\\\
\\\\009\\\\009term.clear()\\\\\\\
\\\\009\\\\009term.setCursorPos(2,2)\\\\\\\
\\\\009\\\\009print(helptext)\\\\\\\
\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009print(\\\\\\\"\\\\\\\\nPress a key to go back.\\\\\\\")\\\\\\\
\\\\009\\\\009os.pullEvent(\\\\\\\"key\\\\\\\")\\\\\\\
\\\\009\\\\009return\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local getTableSize = function(tbl)\\\\\\\
\\\\009local amnt = 0\\\\\\\
\\\\009for k,v in pairs(tbl) do\\\\\\\
\\\\009\\\\009amnt = amnt + 1\\\\\\\
\\\\009end\\\\\\\
\\\\009return amnt\\\\\\\
end\\\\\\\
\\\\\\\
local colors_names = {\\\\\\\
\\\\009[\\\\\\\"0\\\\\\\"] = colors.white,\\\\\\\
\\\\009[\\\\\\\"1\\\\\\\"] = colors.orange,\\\\\\\
\\\\009[\\\\\\\"2\\\\\\\"] = colors.magenta,\\\\\\\
\\\\009[\\\\\\\"3\\\\\\\"] = colors.lightBlue,\\\\\\\
\\\\009[\\\\\\\"4\\\\\\\"] = colors.yellow,\\\\\\\
\\\\009[\\\\\\\"5\\\\\\\"] = colors.lime,\\\\\\\
\\\\009[\\\\\\\"6\\\\\\\"] = colors.pink,\\\\\\\
\\\\009[\\\\\\\"7\\\\\\\"] = colors.gray,\\\\\\\
\\\\009[\\\\\\\"8\\\\\\\"] = colors.lightGray,\\\\\\\
\\\\009[\\\\\\\"9\\\\\\\"] = colors.cyan,\\\\\\\
\\\\009[\\\\\\\"a\\\\\\\"] = colors.purple,\\\\\\\
\\\\009[\\\\\\\"b\\\\\\\"] = colors.blue,\\\\\\\
\\\\009[\\\\\\\"c\\\\\\\"] = colors.brown,\\\\\\\
\\\\009[\\\\\\\"d\\\\\\\"] = colors.green,\\\\\\\
\\\\009[\\\\\\\"e\\\\\\\"] = colors.red,\\\\\\\
\\\\009[\\\\\\\"f\\\\\\\"] = colors.black,\\\\\\\
}\\\\\\\
\\\\\\\
local blit_names = {}\\\\\\\
for k,v in pairs(colors_names) do\\\\\\\
\\\\009blit_names[v] = k\\\\\\\
end\\\\\\\
\\\\\\\
local codeNames = { --just for checking, not for any translation\\\\\\\
\\\\009[\\\\\\\"r\\\\\\\"] = \\\\\\\"reset\\\\\\\",\\\\\\\
\\\\009[\\\\\\\"{\\\\\\\"] = \\\\\\\"stopFormatting\\\\\\\",\\\\\\\
\\\\009[\\\\\\\"}\\\\\\\"] = \\\\\\\"startFormatting\\\\\\\",\\\\\\\
}\\\\\\\
\\\\\\\
local explode = function(div,str)\\\\\\\
\\\\009if (div=='') then return false end\\\\\\\
\\\\009local pos,arr = 0,{}\\\\\\\
\\\\009for st,sp in function() return string.find(str,div,pos,true) end do\\\\\\\
\\\\009\\\\009table.insert(arr,string.sub(str,pos,st-1))\\\\\\\
\\\\009\\\\009pos = sp + 1\\\\\\\
\\\\009end\\\\\\\
\\\\009table.insert(arr,string.sub(str,pos))\\\\\\\
\\\\009return arr\\\\\\\
end\\\\\\\
\\\\\\\
local blitWrap = function(text,txt,bg)\\\\\\\
\\\\009local allIssues = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009if not text then allIssues = allIssues..\\\\\\\"no text, \\\\\\\" end\\\\\\\
\\\\009if not txt then allIssues = allIssues..\\\\\\\"no txt, \\\\\\\" end\\\\\\\
\\\\009if not bg then allIssues = allIssues..\\\\\\\"no bg, \\\\\\\" end\\\\\\\
\\\\009if not (#text == #txt and #txt == #bg) then allIssues = allIssues..\\\\\\\"incongruent lengths\\\\\\\" end\\\\\\\
\\\\009if #allIssues > 0 then error(allIssues) end\\\\\\\
\\\\009local wordNo = 1\\\\\\\
\\\\009local words = explode(\\\\\\\" \\\\\\\",text)\\\\\\\
\\\\009local lines = 0\\\\\\\
\\\\009local scr_x, scr_y = term.getSize()\\\\\\\
\\\\009local cx,cy\\\\\\\
\\\\009for a = 1, #text do\\\\\\\
\\\\009\\\\009cx,cy = term.getCursorPos()\\\\\\\
\\\\009\\\\009if text:sub(a,a) == \\\\\\\" \\\\\\\" and text:sub(a-1,a-1) ~= \\\\\\\" \\\\\\\" and a > 1 then\\\\\\\
\\\\009\\\\009\\\\009wordNo = wordNo + 1\\\\\\\
\\\\009\\\\009\\\\009if cx + #words[wordNo] > scr_x then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos(1,cy+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009lines = lines + 1\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009cx,cy = term.getCursorPos()\\\\\\\
\\\\009\\\\009if text:sub(a,a) == \\\\\\\"\\\\\\\\n\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,cy+1)\\\\\\\
\\\\009\\\\009\\\\009lines = lines + 1\\\\\\\
\\\\009\\\\009elseif not (cx == 1 and text:sub(a,a) == \\\\\\\" \\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009term.blit(text:sub(a,a),txt:sub(a,a),bg:sub(a,a))\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if cx == scr_x then\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,cy+1)\\\\\\\
\\\\009\\\\009\\\\009lines = lines + 1\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return lines\\\\\\\
end\\\\\\\
\\\\\\\
local moveOn, textToBlit\\\\\\\
textToBlit = function(str,substart,substop)\\\\\\\
\\\\009local p = 1\\\\\\\
\\\\009local output = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009local txcolorout = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009local bgcolorout = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009local txcode = \\\\\\\"&\\\\\\\"\\\\\\\
\\\\009local bgcode = \\\\\\\"~\\\\\\\"\\\\\\\
\\\\009local doFormatting = true\\\\\\\
\\\\009local usedformats = {}\\\\\\\
\\\\009local txcol,bgcol = blit_names[term.getTextColor()], blit_names[term.getBackgroundColor()]\\\\\\\
\\\\009local origTX,origBG = blit_names[term.getTextColor()], blit_names[term.getBackgroundColor()]\\\\\\\
\\\\009local cx,cy,barestr\\\\\\\
\\\\009substart = substart or 0\\\\\\\
\\\\009substop = substop or #str\\\\\\\
\\\\009if not (substart == 0 and substop == #str) then\\\\\\\
\\\\009\\\\009barestr = textToBlit(str)\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009if substart < 0 then\\\\\\\
\\\\009\\\\009\\\\009substart = #realstr - substart\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if substop < 0 then\\\\\\\
\\\\009\\\\009\\\\009substop = #realstr - substop\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009moveOn = function(tx,bg)\\\\\\\
\\\\009\\\\009if p >= substart and p <= substop then\\\\\\\
\\\\009\\\\009\\\\009output = output..str:sub(p,p)\\\\\\\
\\\\009\\\\009\\\\009txcolorout = txcolorout..tx\\\\\\\
\\\\009\\\\009\\\\009bgcolorout = bgcolorout..bg\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009while p <= #str do\\\\\\\
\\\\009\\\\009if str:sub(p,p) == txcode then\\\\\\\
\\\\009\\\\009\\\\009if colors_names[str:sub(p+1,p+1)] and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009txcol = str:sub(p+1,p+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009usedformats.txcol = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009elseif codeNames[str:sub(p+1,p+1)] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if str:sub(p+1,p+1) == \\\\\\\"r\\\\\\\" and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009txcol = blit_names[term.getTextColor()]\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif str:sub(p+1,p+1) == \\\\\\\"{\\\\\\\" and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009doFormatting = false\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif str:sub(p+1,p+1) == \\\\\\\"}\\\\\\\" and (not doFormatting) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009doFormatting = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009elseif str:sub(p,p) == bgcode then\\\\\\\
\\\\009\\\\009\\\\009if colors_names[str:sub(p+1,p+1)] and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009bgcol = str:sub(p+1,p+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009usedformats.bgcol = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009elseif codeNames[str:sub(p+1,p+1)] and (str:sub(p+1,p+1) == \\\\\\\"r\\\\\\\") and doFormatting then\\\\\\\
\\\\009\\\\009\\\\009\\\\009bgcol = blit_names[term.getBackgroundColor()]\\\\\\\
\\\\009\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009moveOn(txcol,bgcol)\\\\\\\
\\\\009\\\\009\\\\009p = p + 1\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return output, txcolorout, bgcolorout, usedformats\\\\\\\
end\\\\\\\
\\\\\\\
local writef = function(txt,noWrite,substart,substop)\\\\\\\
\\\\009if doColorize then\\\\\\\
\\\\009\\\\009local text, textCol, bgCol, usedformats = textToBlit(txt,substart,substop)\\\\\\\
\\\\009\\\\009local out = blitWrap(text,textCol,bgCol,noWrite)\\\\\\\
\\\\009\\\\009return out, #text, usedformats\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009if noWrite then\\\\\\\
\\\\009\\\\009\\\\009local cx,cy = term.getCursorPos()\\\\\\\
\\\\009\\\\009\\\\009return math.floor((cx+#cf(txt))/scr_x), #cf(txt), {} --this is approximate, and might mess up with multiline strings\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return write(txt), #txt, {}\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local printf = function(txt,noWrite)\\\\\\\
\\\\009return writef(tostring(txt..\\\\\\\"\\\\\\\\n\\\\\\\"),noWrite)\\\\\\\
end\\\\\\\
\\\\\\\
local runURL = function(url, ...)\\\\\\\
\\\\009local program = http.get(url)\\\\\\\
\\\\009if not program then return false end\\\\\\\
\\\\009program = program.readAll()\\\\\\\
\\\\009local func = load(program)\\\\\\\
\\\\009setfenv(func, getfenv())\\\\\\\
\\\\009return func(...)\\\\\\\
end\\\\\\\
\\\\\\\
local bow = function()\\\\\\\
\\\\009term.setBackgroundColor(palate.store.findbg)\\\\\\\
\\\\009term.setTextColor(palate.store.findtxt)\\\\\\\
end\\\\\\\
\\\\\\\
local strless = function(str,txt,bg)\\\\\\\
\\\\009local x,y = 0,0\\\\\\\
\\\\009local shiftDown = false\\\\\\\
\\\\009local str = explode(\\\\\\\"\\\\\\\\n\\\\\\\",str or \\\\\\\"\\\\\\\")\\\\\\\
\\\\009local render = function()\\\\\\\
\\\\009\\\\009term.setBackgroundColor(bg)\\\\\\\
\\\\009\\\\009term.setTextColor(txt)\\\\\\\
\\\\009\\\\009for i = y+1, (scr_y+y)-1 do\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(math.max(1,-x),i-y)\\\\\\\
\\\\009\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009\\\\009if str[i] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(str[i]:sub(math.max(1,x+1)))\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(colors.gray)\\\\\\\
\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"(Q)uit, Goto (L)ine\\\\\\\")\\\\\\\
\\\\009\\\\009local ting = \\\\\\\"Ln.\\\\\\\"..math.min(math.max(y+1,0),#str)\\\\\\\
\\\\009\\\\009term.setCursorPos((scr_x-#ting)+1,scr_y)\\\\\\\
\\\\009\\\\009term.write(ting)\\\\\\\
\\\\009end\\\\\\\
\\\\009render()\\\\\\\
\\\\009maxY = (#str-scr_y)+1\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009local evt, key, mx, my = os.pullEvent()\\\\\\\
\\\\009\\\\009local oldY = y\\\\\\\
\\\\009\\\\009local oldX = x\\\\\\\
\\\\009\\\\009if evt == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if key == keys.leftShift then\\\\\\\
\\\\009\\\\009\\\\009\\\\009shiftDown = true\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.up then\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = y-1\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.down then\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = y+1\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.pageUp then\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = y-(scr_y-1)\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.pageDown then\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = y+(scr_y-1)\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.left then\\\\\\\
\\\\009\\\\009\\\\009\\\\009x = x-1\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.right then\\\\\\\
\\\\009\\\\009\\\\009\\\\009x = x+1\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.home then\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = 0\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys[\\\\\\\"end\\\\\\\"] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = maxY\\\\\\\
\\\\009\\\\009\\\\009elseif (key == keys.q) or (key == keys.x) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009elseif (key == keys.l) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.gray)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"Line #:\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = (tonumber(read()) or (y+1)) - 1\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt == \\\\\\\"key_up\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if key == keys.leftShift then\\\\\\\
\\\\009\\\\009\\\\009\\\\009shiftDown = false\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt == \\\\\\\"mouse_scroll\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if shiftDown then\\\\\\\
\\\\009\\\\009\\\\009\\\\009x = x + key\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009y = y + key\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt == \\\\\\\"mouse_click\\\\\\\" and key == 1 then\\\\\\\
\\\\009\\\\009\\\\009if my == scr_y and (mx >= 1 and mx <= 11) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if x < 0 then x = 0 end\\\\\\\
\\\\009\\\\009if y < 0 then y = 0 end\\\\\\\
\\\\009\\\\009if y > maxY then y = maxY end\\\\\\\
\\\\009\\\\009if (x ~= oldX) or (y ~= oldY) or (key == keys.l) then\\\\\\\
            render()\\\\\\\
        end\\\\\\\
    end\\\\\\\
end\\\\\\\
local contentsFile = function(url)\\\\\\\
\\\\009local prog = http.get(url)\\\\\\\
\\\\009if prog then return prog.readAll()\\\\\\\
\\\\009else return false, \\\\\\\"could not connect\\\\\\\" end\\\\\\\
end\\\\\\\
local getFile = function(filename,url)\\\\\\\
\\\\009if fs.isReadOnly(filename) then\\\\\\\
\\\\009\\\\009return false, \\\\\\\"access denied\\\\\\\"\\\\\\\
\\\\009end\\\\\\\
\\\\009local prog\\\\\\\
\\\\009if type(url) == \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009prog = std.contextualGet(url[1])\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009prog = http.get(url)\\\\\\\
\\\\009end\\\\\\\
\\\\009if not prog then\\\\\\\
\\\\009\\\\009return false, \\\\\\\"could not connect\\\\\\\"\\\\\\\
\\\\009end\\\\\\\
\\\\009prog = prog.readAll()\\\\\\\
\\\\009local fyle = fs.open(filename,\\\\\\\"w\\\\\\\")\\\\\\\
\\\\009fyle.write(prog)\\\\\\\
\\\\009fyle.close()\\\\\\\
\\\\009return true, fs.getSize(filename)\\\\\\\
end\\\\\\\
local runFile = function(path, ...)\\\\\\\
\\\\009if not fs.exists(path) then\\\\\\\
\\\\009\\\\009return false, \\\\\\\"No such file!\\\\\\\"\\\\\\\
\\\\009end\\\\\\\
\\\\009local file = fs.open(path,\\\\\\\"r\\\\\\\")\\\\\\\
\\\\009local contents = file.readAll()\\\\\\\
\\\\009file.close()\\\\\\\
\\\\009local func = loadstring(contents)\\\\\\\
\\\\009setfenv(func, getfenv())\\\\\\\
\\\\009return func(...)\\\\\\\
end\\\\\\\
std.getSTDList = function(prevChannel)\\\\\\\
\\\\009catag = 0\\\\\\\
\\\\009local url = std.channelURLs[std.channel] --URL of URL list for whatever channel you have selected.\\\\\\\
\\\\009pleaseWait()\\\\\\\
\\\\009local contents = http.get(url)\\\\\\\
\\\\009if not contents then\\\\\\\
\\\\009\\\\009if shell then\\\\\\\
\\\\009\\\\009\\\\009print(\\\\\\\"Couldn't update list!\\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009return false, \\\\\\\"Couldn't update list!\\\\\\\"\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009local uut\\\\\\\
\\\\009\\\\009if fs.exists(std.stdList) then\\\\\\\
\\\\009\\\\009\\\\009uut = runFile(std.stdList, \\\\\\\"storelengthcheck\\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if not uut then std.storeURLs = {} end\\\\\\\
\\\\009\\\\009local beforeSize = getTableSize(std.storeURLs or {})\\\\\\\
\\\\009\\\\009local outcome\\\\\\\
\\\\009\\\\009if not fs.isReadOnly(std.stdList) then\\\\\\\
\\\\009\\\\009\\\\009local program = contents.readAll()\\\\\\\
\\\\009\\\\009\\\\009local file = fs.open(std.stdList,\\\\\\\"w\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009file.writeLine(program)\\\\\\\
\\\\009\\\\009\\\\009file.close()\\\\\\\
\\\\009\\\\009\\\\009outcome = runFile(std.stdList)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009outcome = runURL(url)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if outcome == false then\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(term.isColor() and colors.red or colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009term.clear()\\\\\\\
\\\\009\\\\009\\\\009cprint(\\\\\\\"STD channel \\\\\\\\\\\\\\\"\\\\\\\"..std.channel..\\\\\\\"\\\\\\\\\\\\\\\" is down right now.\\\\\\\",2)\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009cprint(\\\\\\\"Either try again later,\\\\\\\",4)\\\\\\\
\\\\009\\\\009\\\\009cprint(\\\\\\\"contact LDDestroier on the CC forums,\\\\\\\",5)\\\\\\\
\\\\009\\\\009\\\\009cprint(\\\\\\\"or tell the owner of the channel.\\\\\\\",6)\\\\\\\
\\\\009\\\\009\\\\009cprint(\\\\\\\"Press a key to go back.\\\\\\\",8)\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(colors.gray)\\\\\\\
\\\\009\\\\009\\\\009cprint(\\\\\\\"Sorry bout that!\\\\\\\",scr_y)\\\\\\\
\\\\009\\\\009\\\\009std.channel = prevChannel\\\\\\\
\\\\009\\\\009\\\\009sleep(0.1)\\\\\\\
\\\\009\\\\009\\\\009os.pullEvent(\\\\\\\"char\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009pleaseWait(\\\\\\\"Changing list...please wait...\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009return std.getSTDList(\\\\\\\"STD\\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local afterSize = getTableSize(std.storeURLs or {})\\\\\\\
\\\\009\\\\009local diff = afterSize-beforeSize\\\\\\\
\\\\009\\\\009local output\\\\\\\
\\\\009\\\\009if not fs.isReadOnly(std.stdList) then\\\\\\\
\\\\009\\\\009\\\\009output = \\\\\\\"Downloaded to \\\\\\\"..std.stdList\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009output = \\\\\\\"Got store codes.\\\\\\\"\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if diff > 0 then\\\\\\\
\\\\009\\\\009\\\\009output = output..\\\\\\\" (got \\\\\\\"..diff..\\\\\\\" new store entries)\\\\\\\"\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
\\\\009\\\\009return true, output\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local cisf = function(str,fin)\\\\\\\
\\\\009fin = fin:gsub(\\\\\\\"%[\\\\\\\",\\\\\\\"%%[\\\\\\\"):gsub(\\\\\\\"%(\\\\\\\",\\\\\\\"%%(\\\\\\\"):gsub(\\\\\\\"%]\\\\\\\",\\\\\\\"%%]\\\\\\\"):gsub(\\\\\\\"%)\\\\\\\",\\\\\\\"%%)\\\\\\\")\\\\\\\
\\\\009return string.find(str:lower(),fin:lower())\\\\\\\
end\\\\\\\
\\\\\\\
local clearMostline = function(length,char)\\\\\\\
\\\\009local pX,pY = term.getCursorPos()\\\\\\\
\\\\009term.setCursorPos(1,pY)\\\\\\\
\\\\009term.write(string.rep(char or \\\\\\\" \\\\\\\",length or (scr_x-1)))\\\\\\\
\\\\009term.setCursorPos(pX,pY)\\\\\\\
end\\\\\\\
\\\\\\\
local dotY\\\\\\\
local doScrollBar = false\\\\\\\
\\\\\\\
local renderStore = function(list,filter,scrollY,namescroll,fixedDotY,buttonIndicate)\\\\\\\
\\\\009local fullrend = {}\\\\\\\
\\\\009local visiblerend = {}\\\\\\\
\\\\009local amnt = 0\\\\\\\
\\\\009local output = {}\\\\\\\
\\\\009local colors_output = {}\\\\\\\
\\\\009local num = 0\\\\\\\
\\\\009if tsv then tsv(false) end\\\\\\\
\\\\009for k,v in pairs(list) do\\\\\\\
\\\\009\\\\009if (v.catagory == filter) or filter == 0 then\\\\\\\
\\\\009\\\\009\\\\009table.insert(fullrend,{\\\\\\\" &\\\\\\\"..blit_names[palate.store.entryasterisk]..\\\\\\\"*&\\\\\\\"..blit_names[palate.store.entrytxt]..v.title,v})\\\\\\\
\\\\009\\\\009\\\\009table.insert(fullrend,{\\\\\\\" by &r\\\\\\\"..v.creator,v})\\\\\\\
\\\\009\\\\009\\\\009table.insert(fullrend,{\\\\\\\" Category: \\\\\\\"..std.storeCatagoryNames[v.catagory],v,v.catagory})\\\\\\\
\\\\009\\\\009\\\\009table.insert(fullrend,\\\\\\\"nilline\\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009table.insert(fullrend,\\\\\\\"\\\\\\\")\\\\\\\
\\\\009dotY = fixedDotY or math.floor((scr_y-2)*((scroll-1)/(maxScroll-1)))+2\\\\\\\
\\\\009for a = scrollY, (scr_y+scrollY)-1 do\\\\\\\
\\\\009\\\\009if type(fullrend[a]) == \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009table.insert(visiblerend,fullrend[a][1])\\\\\\\
\\\\009\\\\009\\\\009table.insert(output,fullrend[a][2])\\\\\\\
\\\\009\\\\009\\\\009if fullrend[a][3] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(colors_output,fullrend[a][3])\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(colors_output,false)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009table.insert(visiblerend,fullrend[a])\\\\\\\
\\\\009\\\\009\\\\009table.insert(output,{})\\\\\\\
\\\\009\\\\009\\\\009table.insert(colors_output,false)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009setDefaultColors()\\\\\\\
\\\\009charClear(palate.store.bgchar)\\\\\\\
\\\\009for a = 1, #visiblerend do\\\\\\\
\\\\009\\\\009term.setCursorPos(2-namescroll,a+1)\\\\\\\
\\\\009\\\\009if visiblerend[a] == \\\\\\\"nilline\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009setDefaultColors()\\\\\\\
\\\\009\\\\009\\\\009clearMostline()\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009if a < #visiblerend then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if colors_output[a] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(std.storeCatagoryColors[colors_output[a]].bg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(std.storeCatagoryColors[colors_output[a]].txt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.store.entrybg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.store.entrytxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.gray)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009clearMostline()\\\\\\\
\\\\009\\\\009\\\\009\\\\009writef(visiblerend[a])\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.store.bg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.store.theendtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009cprint(\\\\\\\"That's them all!\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009local b\\\\\\\
\\\\009for a = 2, scr_y do\\\\\\\
\\\\009\\\\009term.setCursorPos(scr_x,a)\\\\\\\
\\\\009\\\\009if a == dotY then\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(palate.store.scrollbar.knobtxt)\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(palate.store.scrollbar.knobbg)\\\\\\\
\\\\009\\\\009\\\\009term.write(palate.store.scrollbar.knobchar)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(palate.store.scrollbar.bartxt)\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(palate.store.scrollbar.barbg)\\\\\\\
\\\\009\\\\009\\\\009term.write(palate.store.scrollbar.barchar)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if buttonIndicate then\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(scr_x-4,a)\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(palate.store.indicatebg)\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(palate.store.indicatetxt)\\\\\\\
\\\\009\\\\009\\\\009b = (a+1)/4\\\\\\\
\\\\009\\\\009\\\\009if (b == math.floor(b)) and (visiblerend[a] and visiblerend[a] ~= \\\\\\\"nilline\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\" \\\\\\\"..tostring(b):sub(#tostring(b))..\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009if tsv then tsv(true) end\\\\\\\
\\\\009return output\\\\\\\
end\\\\\\\
\\\\\\\
local simSoftInstall = function(obj,objname,appname)\\\\\\\
\\\\009local installSystemName = \\\\\\\"STD App Distribution (sad...)\\\\\\\"\\\\\\\
\\\\009appname = appname or objname\\\\\\\
\\\\009local getFromURL = function(url)\\\\\\\
\\\\009\\\\009local cunt\\\\\\\
\\\\009\\\\009if type(url) == \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009cunt = std.contextualGet(url[1])\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009cunt = http.get(url)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if not cunt then\\\\\\\
\\\\009\\\\009\\\\009return shit\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009if type(url) == \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009return cunt.readAll(), false\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009return cunt.readAll(), (string.find(url,\\\\\\\"://pastebin.com/raw/\\\\\\\") and (url:sub(-9):gsub(\\\\\\\"/\\\\\\\",\\\\\\\"\\\\\\\")) or false)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009local mainpath = fs.combine(\\\\\\\"/SimSoft/SappS\\\\\\\",objname)\\\\\\\
\\\\009local cont,pbcode = getFromURL(obj.url)\\\\\\\
\\\\009local file = fs.open(\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"..fs.combine(mainpath,pbcode or \\\\\\\"program\\\\\\\")..\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\",\\\\\\\"w\\\\\\\")\\\\\\\
\\\\009file.write(cont)\\\\\\\
\\\\009file.close()\\\\\\\
\\\\009local file = fs.open(fs.combine(mainpath,\\\\\\\"SappS\\\\\\\"),\\\\\\\"w\\\\\\\")\\\\\\\
\\\\009file.writeLine(installSystemName)\\\\\\\
\\\\009file.writeLine(\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\"..fs.combine(mainpath,pbcode or \\\\\\\"program\\\\\\\")..\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\")\\\\\\\
\\\\009file.writeLine(appname:sub(1,9))\\\\\\\
\\\\009file.close()\\\\\\\
\\\\009return true, \\\\\\\"Installed!\\\\\\\"\\\\\\\
end\\\\\\\
\\\\\\\
local getFindList = function(name)\\\\\\\
\\\\009local output = {}\\\\\\\
\\\\009for k,v in pairs(std.storeURLs) do\\\\\\\
\\\\009\\\\009if cisf(k,name) or cisf(textToBlit(v.title),name) or cisf(textToBlit(v.creator),name) then\\\\\\\
\\\\009\\\\009\\\\009output[k] = v\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if output[k] ~= v and v.keywords then\\\\\\\
\\\\009\\\\009\\\\009for a = 1, #v.keywords do\\\\\\\
\\\\009\\\\009\\\\009\\\\009if cisf(v.keywords[a],name) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009output[k] = v\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return output\\\\\\\
end\\\\\\\
\\\\\\\
local doFindFunc = function(name)\\\\\\\
\\\\009scroll = 1\\\\\\\
\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
\\\\009renderStore(getFindList(name),catag,scroll,scrollX,_,not term.isColor())\\\\\\\
\\\\009term.setCursorPos(1,1)\\\\\\\
\\\\009bow()\\\\\\\
\\\\009term.clearLine()\\\\\\\
\\\\009write(\\\\\\\"Find: \\\\\\\")\\\\\\\
end\\\\\\\
\\\\\\\
local funcread = function(repchar,rHistory,doFunc,noNewLine)\\\\\\\
\\\\009local scr_x,scr_y = term.getSize()\\\\\\\
\\\\009local sx,sy = term.getCursorPos()\\\\\\\
\\\\009local cursor = 1\\\\\\\
\\\\009rHistory = rHistory or {}\\\\\\\
\\\\009local rCursor = #rHistory+1\\\\\\\
\\\\009local output = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009term.setCursorBlink(true)\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009local evt,key = os.pullEvent()\\\\\\\
\\\\009\\\\009local cx,cy = term.getCursorPos()\\\\\\\
\\\\009\\\\009if evt == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if key == keys.enter then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if not noNewLine then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009write(\\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorBlink(false)\\\\\\\
\\\\009\\\\009\\\\009\\\\009return output\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.left then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if cursor-1 >= 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009cursor = cursor - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.right then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if cursor <= #output then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009cursor = cursor + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.up then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if rCursor > 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009rCursor = rCursor - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setCursorPos(sx,sy)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.write((\\\\\\\" \\\\\\\"):rep(#output))\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009output = rHistory[rCursor] or \\\\\\\"\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009cursor = #output+1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009pleaseDoFunc = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.down then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos(sx,sy)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write((\\\\\\\" \\\\\\\"):rep(#output))\\\\\\\
\\\\009\\\\009\\\\009\\\\009if rCursor < #rHistory then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009rCursor = rCursor + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009output = rHistory[rCursor] or \\\\\\\"\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009cursor = #output+1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009pleaseDoFunc = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009rCursor = #rHistory+1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009output = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009cursor = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.backspace then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if cursor > 1 and #output > 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009output = output:sub(1,cursor-2)..output:sub(cursor)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009cursor = cursor - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009pleaseDoFunc = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif key == keys.delete then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if #output:sub(cursor,cursor) == 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009output = output:sub(1,cursor-1)..output:sub(cursor+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009pleaseDoFunc = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt == \\\\\\\"char\\\\\\\" or evt == \\\\\\\"paste\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009output = output:sub(1,cursor-1)..key..output:sub(cursor+(#key-1))\\\\\\\
\\\\009\\\\009\\\\009cursor = cursor + #key\\\\\\\
\\\\009\\\\009\\\\009pleaseDoFunc = true\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if pleaseDoFunc then\\\\\\\
\\\\009\\\\009\\\\009pleaseDoFunc = false\\\\\\\
\\\\009\\\\009\\\\009if type(doFunc) == \\\\\\\"function\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009doFunc(output)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(sx,sy)\\\\\\\
\\\\009\\\\009\\\\009local pOut = output\\\\\\\
\\\\009\\\\009\\\\009if #output >= scr_x-(sx-2) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009pOut = output:sub((#output+(sx))-scr_x)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if repchar then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(repchar:sub(1,1):rep(#pOut)..\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(pOut..\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009local cx,cy = term.getCursorPos()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setCursorPos(sx+cursor-1,cy)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local prevList\\\\\\\
local findPrompt = function()\\\\\\\
\\\\009local cX,cY = term.getCursorPos()\\\\\\\
\\\\009sleep(0)\\\\\\\
\\\\009if prevList then std.storeURLs = prevList end\\\\\\\
\\\\009doFindFunc(\\\\\\\"\\\\\\\")\\\\\\\
\\\\009prevList = std.storeURLs\\\\\\\
\\\\009std.storeURLs = getFindList(funcread(nil,{},doFindFunc,false))\\\\\\\
\\\\009term.setCursorBlink(false)\\\\\\\
\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
end\\\\\\\
\\\\\\\
local displayTitle = function()\\\\\\\
\\\\009local title = {{},{},{},{},{0,0,0,0,0,1,1,1,1,1,0,0,2,2,2,2,2,2,2,0,2,2,2,2,0,0,32768,},{0,0,0,0,1,1,0,0,0,1,1,0,0,0,0,2,0,0,0,0,0,2,0,2,2,0,32768,},{0,0,0,0,1,0,0,0,0,0,1,0,0,0,2,2,0,0,0,0,2,2,0,0,2,0,32768,},{0,0,0,0,1,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,2,0,32768,},{0,0,0,0,0,1,1,1,1,1,0,0,0,0,2,0,0,0,0,2,2,0,0,2,2,0,32768,},{0,0,0,0,0,0,0,0,0,1,0,0,0,2,2,0,0,0,2,2,0,0,2,2,0,0,32768,},{0,0,0,1,1,0,0,0,1,1,0,0,2,2,0,0,0,2,2,0,0,2,2,0,0,32768,1,},{0,0,0,0,1,1,1,1,1,0,0,0,2,0,0,0,2,2,2,2,2,2,0,0,32768,1,1,},{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32768,1,1,1,},{0,0,0,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,1,1,1,1}}\\\\\\\
\\\\009setDefaultColors()\\\\\\\
\\\\009term.clear()\\\\\\\
\\\\009paintutils.drawImage(title,-1,1)\\\\\\\
\\\\009setDefaultColors()\\\\\\\
\\\\009term.setCursorPos(4,16)\\\\\\\
\\\\009term.write(\\\\\\\"STD-GUI \\\\\\\"..(isBeta and \\\\\\\"Beta\\\\\\\" or \\\\\\\"Stable\\\\\\\"))\\\\\\\
\\\\009sleep(0)\\\\\\\
\\\\009local evt\\\\\\\
\\\\009repeat\\\\\\\
\\\\009\\\\009evt = os.pullEvent()\\\\\\\
\\\\009until evt == \\\\\\\"mouse_click\\\\\\\" or evt == \\\\\\\"key\\\\\\\"\\\\\\\
\\\\009sleep(0)\\\\\\\
end\\\\\\\
\\\\\\\
local fixDotY\\\\\\\
\\\\\\\
local renderStoreItem = function(obj) --now being experimented on...\\\\\\\
\\\\009if not obj.title then return false end\\\\\\\
\\\\009local showPostURL = false\\\\\\\
\\\\009local bruffer\\\\\\\
\\\\009local scroll = 1\\\\\\\
\\\\009local doRedraw = true\\\\\\\
\\\\009local extraLines\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009bruffer = {\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\"\\\\\\\",\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\" &\\\\\\\"..blit_names[palate.item.specialtxt]..obj.title,\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\" &\\\\\\\"..blit_names[palate.item.txt]..\\\\\\\"by &\\\\\\\"..blit_names[palate.item.specialtxt]..obj.creator,\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\" &\\\\\\\"..blit_names[palate.item.txt]..\\\\\\\"Category: \\\\\\\"..std.storeCatagoryNames[obj.catagory],\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\"\\\\\\\",\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\"&\\\\\\\"..blit_names[palate.item.txt]..obj.description,\\\\\\\
\\\\009\\\\009}\\\\\\\
\\\\009\\\\009if showPostURL and obj.forumPost then\\\\\\\
\\\\009\\\\009\\\\009local post = \\\\\\\" &\\\\\\\"..blit_names[palate.item.forumtxt]..\\\\\\\"~\\\\\\\"..blit_names[palate.item.forumbg]..obj.forumPost:gsub(\\\\\\\"http://www.\\\\\\\",\\\\\\\"\\\\\\\"):sub(1,-2)\\\\\\\
\\\\009\\\\009\\\\009table.insert(bruffer,\\\\\\\"&8Forum URL: \\\\\\\"..post)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if doRedraw then\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(palate.item.bg)\\\\\\\
\\\\009\\\\009\\\\009term.clear()\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,(-scroll)+2)\\\\\\\
\\\\009\\\\009\\\\009extraLines = 0\\\\\\\
\\\\009\\\\009\\\\009for y = 1, #bruffer do\\\\\\\
\\\\009\\\\009\\\\009\\\\009if not bruffer[y] then break end\\\\\\\
\\\\009\\\\009\\\\009\\\\009extraLines = extraLines + printf(bruffer[y])\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.item.closetxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.item.closebg)\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"CLOSE\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"(Q) to CLOSE\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.store.previewtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.store.previewbg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos((scr_x-16),scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"VIEW\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.item.runtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.item.runbg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos((scr_x-11),scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"RUN\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos((scr_x-22),scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"(V)IEW\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos((scr_x-15),scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"(R)UN\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009local txt\\\\\\\
\\\\009\\\\009\\\\009if isSimSoft or isAxiom then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if term.isColor() then --yeah yeah, simsoft can't run on normal computers, but axiom can, so shut your cunting trap\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.item.downloadtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.item.downloadbg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009txt = \\\\\\\"INSTALL!\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009txt = \\\\\\\"(I)NSTALL\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.item.downloadtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.item.downloadbg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009txt = \\\\\\\"DOWNLOAD\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009txt = \\\\\\\"(D)OWNLOAD\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos((scr_x-(#txt-1)),scr_y)\\\\\\\
\\\\009\\\\009\\\\009term.write(txt)\\\\\\\
\\\\009\\\\009\\\\009doRedraw = false\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local evt = {getEvents(\\\\\\\"key\\\\\\\",\\\\\\\"mouse_click\\\\\\\",\\\\\\\"mouse_scroll\\\\\\\",\\\\\\\"term_resize\\\\\\\")}\\\\\\\
\\\\009\\\\009if evt[1] == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if evt[2] == keys.f then\\\\\\\
\\\\009\\\\009\\\\009\\\\009showPostURL = not showPostURL\\\\\\\
\\\\009\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.d or evt[2] == keys.i or evt[2] == keys.r or evt[2] == keys.q or evt[2] == keys.v then\\\\\\\
\\\\009\\\\009\\\\009\\\\009return unpack(evt)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"mouse_click\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if evt[4] == scr_y then\\\\\\\
\\\\009\\\\009\\\\009\\\\009return unpack(evt)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"mouse_scroll\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if scroll+evt[2] >= 1 and scroll+evt[2] <= (#bruffer+extraLines)-(scr_y-8) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = scroll + evt[2]\\\\\\\
\\\\009\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"term_resize\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009scr_x,scr_y = term.getSize()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local renderCatagoryMenu = function(expanded,cursor)\\\\\\\
\\\\009if expanded then\\\\\\\
\\\\009\\\\009term.setCursorPos(1,1)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.bg)\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.selectbg)\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.selecttxt)\\\\\\\
\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009if cursor == 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.txt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\" No category\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\"Select category:\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,1)\\\\\\\
\\\\009\\\\009\\\\009if cursor == 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.txt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\" No category\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\" Pick category with up/down:\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.txt)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.bg)\\\\\\\
\\\\009\\\\009local yposes = {}\\\\\\\
\\\\009\\\\009local longestLen = 0\\\\\\\
\\\\009\\\\009for a = 1, #std.storeCatagoryNames do\\\\\\\
\\\\009\\\\009\\\\009if #std.storeCatagoryNames[a]+2 > longestLen then\\\\\\\
\\\\009\\\\009\\\\009\\\\009longestLen = #std.storeCatagoryNames[a]+2\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009longestLen = longestLen+1\\\\\\\
\\\\009\\\\009for a = 0, #std.storeCatagoryNames do\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,a+1)\\\\\\\
\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.orbtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.bg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009if type(std.storeCatagoryColors) == \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if std.storeCatagoryColors[a] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(std.storeCatagoryColors[a].txt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(std.storeCatagoryColors[a].bg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if a > 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009clearMostline(longestLen+2)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if a == cursor then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if type(std.storeCatagoryColors) ~= \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if cursor == 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.txt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.bg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.cursortxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.cursorbg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif cursor == 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009write(\\\\\\\">\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009elseif a > 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009write(\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if a > 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if type(std.storeCatagoryColors) ~= \\\\\\\"table\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.categorymenu.orbtxt)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.bg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009if a == catag then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009write(\\\\\\\"@ \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009write(\\\\\\\"O \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009write(std.storeCatagoryNames[a])\\\\\\\
\\\\009\\\\009\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorymenu.borderbg)\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos(longestLen+2,a+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(yposes,a+1)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setCursorPos(1,#std.storeCatagoryNames+2)\\\\\\\
\\\\009\\\\009term.write((\\\\\\\" \\\\\\\"):rep(longestLen+2))\\\\\\\
\\\\009\\\\009return yposes,longestLen+2\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009term.setCursorPos(1,1)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.bg)\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.categorytxt)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.categorybg)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"Cat.\\\\\\\")\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.hotkeytxt)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"F1\\\\\\\")\\\\\\\
\\\\009\\\\009term.setCursorPos(8,1)\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.channeltxt)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.channelbg)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"Chan.\\\\\\\")\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.hotkeytxt)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"F3\\\\\\\")\\\\\\\
\\\\009\\\\009--writef(\\\\\\\"~f&8Cat.&7F1~r&r ~f&8Chan.&7F3\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009term.setCursorPos(scr_x-4,1)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.store.closebg)\\\\\\\
\\\\009\\\\009term.setTextColor(palate.store.closetxt)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"CLOSE\\\\\\\")\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009term.setCursorPos(scr_x-11,1)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"'Q' to CLOSE\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009setDefaultColors()\\\\\\\
end\\\\\\\
\\\\\\\
local renderChannelMenu = function(cursor)\\\\\\\
\\\\009term.setCursorPos(1,1)\\\\\\\
\\\\009term.setBackgroundColor(palate.menubar.bg)\\\\\\\
\\\\009term.clearLine()\\\\\\\
\\\\009term.setBackgroundColor(palate.menubar.channelmenu.selectbg)\\\\\\\
\\\\009term.setTextColor(palate.menubar.channelmenu.selecttxt)\\\\\\\
\\\\009term.write(\\\\\\\"Select channel:\\\\\\\")\\\\\\\
\\\\009term.setTextColor(palate.menubar.channelmenu.txt)\\\\\\\
\\\\009term.setBackgroundColor(palate.menubar.channelmenu.bg)\\\\\\\
\\\\009local yposes = {}\\\\\\\
\\\\009local longestLen = 0\\\\\\\
\\\\009for a = 1, #std.channelNames do\\\\\\\
\\\\009\\\\009if #std.channelNames[a] > longestLen then\\\\\\\
\\\\009\\\\009\\\\009longestLen = #std.channelNames[a]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009longestLen = longestLen + 4\\\\\\\
\\\\009for a = 1, #std.channelNames do\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.channelmenu.bg)\\\\\\\
\\\\009\\\\009term.setCursorPos(1,a+1)\\\\\\\
\\\\009\\\\009clearMostline(longestLen+2)\\\\\\\
\\\\009\\\\009if a == cursor then\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(palate.menubar.channelmenu.cursortxt)\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.channelmenu.cursorbg)\\\\\\\
\\\\009\\\\009\\\\009write(\\\\\\\">\\\\\\\")\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009write(\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setTextColor(palate.menubar.channelmenu.orbtxt)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(palate.menubar.channelmenu.bg)\\\\\\\
\\\\009\\\\009if std.channel == std.channelNames[a] then\\\\\\\
\\\\009\\\\009\\\\009write(\\\\\\\"@ \\\\\\\")\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009write(\\\\\\\"O \\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.write(\\\\\\\" \\\\\\\"..std.channelNames[a])\\\\\\\
\\\\009\\\\009if term.isColor() then\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(palate.menubar.channelmenu.borderbg)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setCursorPos(longestLen+2,a+1)\\\\\\\
\\\\009\\\\009term.write(\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009table.insert(yposes,{a+1,std.channelNames[a],std.channelURLs[std.channelNames[a]]})\\\\\\\
\\\\009end\\\\\\\
\\\\009term.setCursorPos(1,#std.channelNames+2)\\\\\\\
\\\\009term.write((\\\\\\\" \\\\\\\"):rep(longestLen+2))\\\\\\\
\\\\009return yposes,longestLen+2\\\\\\\
end\\\\\\\
\\\\\\\
local tArg = {...}\\\\\\\
\\\\\\\
if tArg[1] == \\\\\\\"help\\\\\\\" then\\\\\\\
\\\\009return displayHelp(true)\\\\\\\
elseif tArg[1] == \\\\\\\"upgrade\\\\\\\" then\\\\\\\
\\\\009local updateURL = isBeta and \\\\\\\"http://pastebin.com/raw/uMZ23APu\\\\\\\" or \\\\\\\"http://pastebin.com/raw/P9dDhQ2m\\\\\\\"\\\\\\\
\\\\009local res, outcome = getFile(shell.getRunningProgram(),updateURL)\\\\\\\
\\\\009if not res then\\\\\\\
\\\\009\\\\009error(outcome)\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009print(\\\\\\\"Updated STD-GUI to latest \\\\\\\"..(isBeta and \\\\\\\"beta.\\\\\\\" or \\\\\\\"stable.\\\\\\\")..\\\\\\\" (\\\\\\\"..outcome..\\\\\\\" bytes)\\\\\\\")\\\\\\\
\\\\009\\\\009return\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local res, outcome\\\\\\\
if tArg[1] == \\\\\\\"update\\\\\\\" then\\\\\\\
\\\\009res, outcome = std.getSTDList(std.prevChannel)\\\\\\\
\\\\009print(outcome)\\\\\\\
\\\\009return\\\\\\\
else\\\\\\\
\\\\009pleaseWait() --he said please\\\\\\\
\\\\009res, outcome = std.getSTDList(std.prevChannel)\\\\\\\
end\\\\\\\
\\\\\\\
\\\\\\\
local cleanExit = function()\\\\\\\
\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009term.clear()\\\\\\\
\\\\009local out\\\\\\\
\\\\009if pocket then\\\\\\\
\\\\009\\\\009out = \\\\\\\"Thanks for using STD!\\\\\\\"\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009out = \\\\\\\"Thank you for using STD-GUI!\\\\\\\"\\\\\\\
\\\\009end\\\\\\\
\\\\009if isSimSoft or isAxiom then\\\\\\\
\\\\009\\\\009term.setCursorBlink(false)\\\\\\\
\\\\009end\\\\\\\
\\\\009cprint(out,scr_y/2)\\\\\\\
\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009sleep(0)\\\\\\\
\\\\009return true, \\\\\\\"This shouldn't be an error.\\\\\\\"\\\\\\\
end\\\\\\\
local STDdownloadPrompt = function(item)\\\\\\\
\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009for k,v in pairs(std.storeURLs) do\\\\\\\
\\\\009\\\\009if item.url == v.url then\\\\\\\
\\\\009\\\\009\\\\009itname = k\\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009local savepath\\\\\\\
\\\\009if isAxiom then\\\\\\\
\\\\009\\\\009if std.storeURLs[itname].catagory == 8 then --if an API\\\\\\\
\\\\009\\\\009\\\\009savepath = fs.combine(\\\\\\\"/home/APIs\\\\\\\",itname)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009savepath = fs.combine(\\\\\\\"/Axiom/programs\\\\\\\",itname)..\\\\\\\".app\\\\\\\"\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009bow()\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009write(\\\\\\\"Save as: \\\\\\\")\\\\\\\
\\\\009\\\\009savepath = funcread(nil,{},nil,true)\\\\\\\
\\\\009\\\\009term.setCursorBlink(false)\\\\\\\
\\\\009end\\\\\\\
\\\\009if savepath:gsub(\\\\\\\" \\\\\\\",\\\\\\\"\\\\\\\") == \\\\\\\"\\\\\\\" then\\\\\\\
\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009return\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009if relativePath then\\\\\\\
\\\\009\\\\009\\\\009savepath = fs.combine(shell.dir(),savepath)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if fs.exists(savepath) then\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009\\\\009write(\\\\\\\"Overwrite? (Y/N)\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009local key\\\\\\\
\\\\009\\\\009\\\\009repeat\\\\\\\
\\\\009\\\\009\\\\009\\\\009_,key = os.pullEvent(\\\\\\\"char\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009until string.find(\\\\\\\"yn\\\\\\\",key)\\\\\\\
\\\\009\\\\009\\\\009if key == \\\\\\\"n\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009return\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009term.write(\\\\\\\"Downloading...\\\\\\\")\\\\\\\
\\\\009\\\\009local res, outcome = getFile(savepath,item.url)\\\\\\\
\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009if not res then\\\\\\\
\\\\009\\\\009\\\\009term.write(outcome)\\\\\\\
\\\\009\\\\009\\\\009sleep(0.6)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009if isAxiom then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if std.storeURLs[itname].catagory ~= 8 then --no need for an icon for an api, wouldn't you say\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009local file = fs.open(fs.combine(\\\\\\\"home/Desktop\\\\\\\",itname)..\\\\\\\".lnk\\\\\\\", \\\\\\\"w\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009file.write(savepath)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009file.close()\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009term.write(\\\\\\\"Downloaded! (\\\\\\\"..outcome..\\\\\\\" bytes)\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009sleep(0.7)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return\\\\\\\
end\\\\\\\
\\\\\\\
SimSoftDownloadPrompt = function(object)\\\\\\\
\\\\009local itname\\\\\\\
\\\\009for k,v in pairs(std.storeURLs) do\\\\\\\
\\\\009\\\\009if object.url == v.url then\\\\\\\
\\\\009\\\\009\\\\009itname = k\\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009bow()\\\\\\\
\\\\009term.clearLine()\\\\\\\
\\\\009write(\\\\\\\"Label?:\\\\\\\")\\\\\\\
\\\\009local custLabel = funcread(_,_,_,true)\\\\\\\
\\\\009if #custLabel:gsub(\\\\\\\"%s\\\\\\\",\\\\\\\"\\\\\\\") == 0 then\\\\\\\
\\\\009\\\\009custLabel = nil\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009custLabel = custLabel:sub(1,9)\\\\\\\
\\\\009end\\\\\\\
\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009term.clearLine()\\\\\\\
\\\\009term.write(\\\\\\\"Downloading...\\\\\\\")\\\\\\\
\\\\009local res, outcome = simSoftInstall(object,itname or object.title:gsub(\\\\\\\" \\\\\\\",\\\\\\\"-\\\\\\\"),custLabel)\\\\\\\
\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009term.clearLine()\\\\\\\
\\\\009term.write(outcome)\\\\\\\
\\\\009sleep(#outcome/13)\\\\\\\
end\\\\\\\
\\\\\\\
local doCategoryMenu = function()\\\\\\\
\\\\009local mcursor = catag --(not term.isColor()) and (catag or 0) or false\\\\\\\
\\\\009local cats,longth = renderCatagoryMenu(true,mcursor)\\\\\\\
\\\\009local evt,butt,x,y\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009local evt,butt,x,y = os.pullEvent()\\\\\\\
\\\\009\\\\009if evt == \\\\\\\"mouse_click\\\\\\\" or (evt == \\\\\\\"mouse_up\\\\\\\" and y ~= 1) then\\\\\\\
\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009if y == 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009catag = 0\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009for a = 1, #cats do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if cats[a] == y and x <= longth then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009catag = a\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009scroll = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if butt == keys.f1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009elseif mcursor then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (butt == keys.up) and (mcursor > 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009mcursor = mcursor - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif (butt == keys.down) and (mcursor < #std.storeCatagoryNames) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009mcursor = mcursor + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif (butt == keys.enter) or (butt == keys.space) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009os.queueEvent(\\\\\\\"mouse_click\\\\\\\",1,2,mcursor+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if doRedraw then\\\\\\\
\\\\009\\\\009\\\\009renderCatagoryMenu(true,mcursor)\\\\\\\
\\\\009\\\\009\\\\009doRedraw = false\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
end\\\\\\\
\\\\\\\
local doChannelMenu = function()\\\\\\\
\\\\009local mcursor = 1 --(not term.isColor()) and 1 or false\\\\\\\
\\\\009local yposes, longth = renderChannelMenu(mcursor)\\\\\\\
\\\\009local evt,butt,x,y\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009local evt,butt,x,y = os.pullEvent()\\\\\\\
\\\\009\\\\009if evt == \\\\\\\"mouse_click\\\\\\\" or (evt == \\\\\\\"mouse_up\\\\\\\" and y ~= 1) then\\\\\\\
\\\\009\\\\009\\\\009if y == 1 then break else\\\\\\\
\\\\009\\\\009\\\\009\\\\009for a = 1, #yposes do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (yposes[a][1] == y) and (x <= longth) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if std.channel ~= yposes[a][2] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009std.prevChannel = std.channel\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009std.channel = yposes[a][2]\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009scroll = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009std.getSTDList(std.prevChannel)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if butt == keys.f3 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009elseif mcursor then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (butt == keys.up) and (mcursor > 1) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009mcursor = mcursor - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif (butt == keys.down) and (mcursor < #std.channelNames) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009mcursor = mcursor + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif (butt == keys.enter) or (butt == keys.space) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009os.queueEvent(\\\\\\\"mouse_click\\\\\\\",1,2,mcursor+1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009renderChannelMenu(mcursor)\\\\\\\
\\\\009end\\\\\\\
\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
end\\\\\\\
\\\\\\\
local STDViewEntry = function(url)\\\\\\\
\\\\009local contents, outcome = contentsFile(url)\\\\\\\
\\\\009if not contents then\\\\\\\
\\\\009\\\\009term.write(outcome)\\\\\\\
\\\\009\\\\009sleep(0.6)\\\\\\\
\\\\009\\\\009return\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009strless(contents,palate.item.previewtxt,palate.item.previewbg)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
local doEverything = function() --do I have to do EVERYTHING?\\\\\\\
\\\\009if fs.exists(std.stdList) then\\\\\\\
\\\\009\\\\009shell.run(std.stdList)\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009if not std.storeURLs then\\\\\\\
\\\\009\\\\009\\\\009pleaseWait()\\\\\\\
\\\\009\\\\009\\\\009std.getSTDList(std.prevChannel)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
\\\\009local yposes\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009if scroll > maxScroll then\\\\\\\
\\\\009\\\\009\\\\009scroll = maxScroll\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if scroll < 1 then\\\\\\\
\\\\009\\\\009\\\\009scroll = 1\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if (scroll-1 % 4 ~= 0) and (not term.isColor()) then\\\\\\\
\\\\009\\\\009\\\\009scroll = scroll - ((scroll-1) % 4)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local mcursor = (not term.isColor()) and 1 or false\\\\\\\
\\\\009\\\\009yposes = renderStore(std.storeURLs,catag,scroll,scrollX,fixDotY,not term.isColor())\\\\\\\
\\\\009\\\\009renderCatagoryMenu(false,mcursor)\\\\\\\
\\\\009\\\\009local evt = {getEvents(\\\\\\\"mouse_scroll\\\\\\\",\\\\\\\"mouse_click\\\\\\\",\\\\\\\"mouse_up\\\\\\\",\\\\\\\"key\\\\\\\",\\\\\\\"mouse_drag\\\\\\\",\\\\\\\"char\\\\\\\")}\\\\\\\
\\\\009\\\\009scr_x, scr_y = term.getSize()\\\\\\\
\\\\009\\\\009if evt[1] == \\\\\\\"mouse_scroll\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if scroll+evt[2] >= 1 and scroll+evt[2] <= maxScroll then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = scroll+evt[2]\\\\\\\
\\\\009\\\\009\\\\009\\\\009doRedraw = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"mouse_click\\\\\\\" and (evt[2] == 1) and (evt[4] <= scr_y) and (evt[4] >= 1) then --left click only! must deport right mouse buttons!\\\\\\\
\\\\009\\\\009\\\\009if evt[3] == scr_x and evt[4] == math.floor(dotY) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009doScrollBar = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if evt[4] == 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if evt[3] >= scr_x-4 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009return cleanExit()\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if evt[3] >= 1 and evt[3] <= 6 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009doCategoryMenu()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009elseif evt[3] >= 8 and evt[3] <= 14 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009doChannelMenu()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif yposes[evt[4]-1] and evt[3] ~= scr_x then\\\\\\\
\\\\009\\\\009\\\\009\\\\009local y = evt[4]-1\\\\\\\
\\\\009\\\\009\\\\009\\\\009local showPostURL = false\\\\\\\
\\\\009\\\\009\\\\009\\\\009local guud = yposes[y].title\\\\\\\
\\\\009\\\\009\\\\009\\\\009scrollX = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009while true do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if not guud then break end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009local event,butt,cx,cy = renderStoreItem(yposes[y],showPostURL)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if event == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if butt == keys.q then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009elseif butt == keys.d then --hehe\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009STDdownloadPrompt(yposes[y])\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009--break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009elseif butt == keys.v then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009STDViewEntry(yposes[y].url)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009--break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009elseif (butt == keys.i) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if isSimSoft then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009SimSoftDownloadPrompt(yposes[y])\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009elseif isAxiom then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009STDdownloadPrompt(yposes[y]) --axiom only changes the \\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009--break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009elseif event == \\\\\\\"mouse_click\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if cy == scr_y then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if (cx < scr_x-7) or (cx > scr_x) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if cx >= scr_x-11 and cx < scr_x-8 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009bow()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if pocket or turtle then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009write(\\\\\\\"Args.: \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009write(\\\\\\\"Arguments:\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009local arguments = explode(\\\\\\\" \\\\\\\",funcread(nil,{},nil,true)) or {}\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.clear()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setCursorPos(1,1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009local oldcpath\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if shell then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009oldcpath = shell.dir()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009shell.setDir(\\\\\\\"\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if #arguments == 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009runURL(yposes[y].url)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009runURL(yposes[y].url,unpack(arguments))\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if shell then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009shell.setDir(oldcpath or \\\\\\\"\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009write(\\\\\\\"[press a key]\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009os.pullEvent(\\\\\\\"key\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009elseif cx >= scr_x-16 and cx < scr_x-12 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009STDViewEntry(yposes[y].url)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009bow()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009if isSimSoft then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009SimSoftDownloadPrompt(yposes[y])\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009STDdownloadPrompt(yposes[y])\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"mouse_up\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009doScrollBar = false\\\\\\\
\\\\009\\\\009\\\\009fixDotY = nil\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"mouse_drag\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if doScrollBar then\\\\\\\
\\\\009\\\\009\\\\009\\\\009local my = evt[4]\\\\\\\
\\\\009\\\\009\\\\009\\\\009if my > scr_y then --operating systems might allow this to be true\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009my = scr_y\\\\\\\
\\\\009\\\\009\\\\009\\\\009elseif my < 1 then --this too\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009my = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009if my > 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009scroll = math.floor( (my-2)/(scr_y-2) * (maxScroll)) + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009fixDotY = my\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"key\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if evt[2] == keys.q then\\\\\\\
\\\\009\\\\009\\\\009\\\\009return cleanExit()\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.down then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = scroll + 4\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.up then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = scroll - 4\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.pageDown then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = scroll + (scr_y-1)\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.pageUp then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = scroll - (scr_y-1)\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.home then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = 1\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys['end'] then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = maxScroll\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.h then --help screen!\\\\\\\
\\\\009\\\\009\\\\009\\\\009displayHelp(false)\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.right then\\\\\\\
\\\\009\\\\009\\\\009\\\\009scrollX = scrollX + 1\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.left then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if scrollX > 1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009scrollX = scrollX - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif (evt[2] == keys.numPadAdd) or (evt[2] == keys.rightBracket) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009catag = catag + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009if catag > #std.storeCatagoryNames then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009catag = 0\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
\\\\009\\\\009\\\\009elseif (evt[2] == keys.minus) or (evt[2] == keys.leftBracket) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009catag = catag - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009if catag < 0 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009catag = #std.storeCatagoryNames\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009scroll = 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009maxScroll = setMaxScroll(catag)\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.f5 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009pleaseWait()\\\\\\\
\\\\009\\\\009\\\\009\\\\009std.getSTDList(std.prevChannel)\\\\\\\
\\\\009\\\\009\\\\009elseif (evt[2] == keys.f12) and (not isSimSoft) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009local updateURL = isBeta and \\\\\\\"http://pastebin.com/raw/uMZ23APu\\\\\\\" or \\\\\\\"http://pastebin.com/raw/P9dDhQ2m\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009getFile(shell.getRunningProgram(),updateURL)\\\\\\\
\\\\009\\\\009\\\\009\\\\009local flashes = {\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009colors.black,\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009colors.white,\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009colors.lightGray,\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009colors.gray,\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009colors.black,\\\\\\\
\\\\009\\\\009\\\\009\\\\009}\\\\\\\
\\\\009\\\\009\\\\009\\\\009for a = 1, #flashes do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(flashes[a])\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.clear()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009sleep(0)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009return\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.f1 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009doCategoryMenu()\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.f or evt[2] == keys.f6 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009--runFile(std.stdList)\\\\\\\
\\\\009\\\\009\\\\009\\\\009findPrompt()\\\\\\\
\\\\009\\\\009\\\\009elseif evt[2] == keys.f3 then\\\\\\\
\\\\009\\\\009\\\\009\\\\009doChannelMenu()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif evt[1] == \\\\\\\"char\\\\\\\" then\\\\\\\
\\\\009\\\\009\\\\009if tonumber(evt[2]) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009local a = tonumber(evt[2]) ~= \\\\\\\"0\\\\\\\" and tonumber(evt[2]) or \\\\\\\"10\\\\\\\"\\\\\\\
\\\\009\\\\009\\\\009\\\\009local b = (a*4)-1\\\\\\\
\\\\009\\\\009\\\\009\\\\009os.queueEvent(\\\\\\\"mouse_click\\\\\\\",1,scr_x-3,b)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
if doDisplayTitle then\\\\\\\
\\\\009displayTitle()\\\\\\\
end\\\\\\\
\\\\\\\
if std.storeURLs then std.storeURLs = getFindList(\\\\\\\"\\\\\\\") end\\\\\\\
\\\\\\\
local errorHandler = function()\\\\\\\
\\\\009local success, message = pcall(doEverything)\\\\\\\
\\\\009if success then\\\\\\\
\\\\009\\\\009return true\\\\\\\
\\\\009end\\\\\\\
\\\\009if message == \\\\\\\"Terminated\\\\\\\" then\\\\\\\
\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009term.scroll(2)\\\\\\\
\\\\009\\\\009term.setCursorPos(1, scr_y-1)\\\\\\\
\\\\009\\\\009printError(message)\\\\\\\
\\\\009\\\\009return false, message\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009term.setBackgroundColor(colors.white)\\\\\\\
\\\\009\\\\009for a = 1, math.ceil(scr_y/2) do\\\\\\\
\\\\009\\\\009\\\\009term.scroll(2)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009cprint(\\\\\\\"STD-GUI has encountered an error!\\\\\\\",2)\\\\\\\
\\\\009\\\\009term.setCursorPos(1,4)\\\\\\\
\\\\009\\\\009term.setTextColor(term.isColor() and colors.red or colors.gray)\\\\\\\
\\\\009\\\\009print(message or \\\\\\\"\\\\\\\"..\\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009\\\\009term.setTextColor(colors.black)\\\\\\\
\\\\009\\\\009print(\\\\\\\" Please contact LDDestroier/EldidiStroyrr on either the ComputerCraft forums, or through other means.\\\\\\\")\\\\\\\
\\\\009\\\\009sleep(0.5)\\\\\\\
\\\\009\\\\009print(\\\\\\\"\\\\\\\\nPush a key.\\\\\\\")\\\\\\\
\\\\009\\\\009os.pullEvent(\\\\\\\"key\\\\\\\")\\\\\\\
\\\\009\\\\009term.setCursorPos(1,scr_y)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009term.setTextColor(colors.white)\\\\\\\
\\\\009\\\\009term.clearLine()\\\\\\\
\\\\009\\\\009return false, message\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
return errorHandler()\\\"\",\
  \"F:t\",\
  \"\\\"local function boot_handleBootElement(str)\\\\\\\
   local s1 = \\\\\\\"                                           \\\\\\\"\\\\\\\
   local n1 = s1:len()\\\\\\\
   local n2 = str:len()\\\\\\\
   local s2 = string.sub(s1, 1, n1-n2)\\\\\\\
   return \\\\\\\" \\\\\\\"..str..s2..\\\\\\\" \\\\\\\"\\\\\\\
end\\\\\\\
\\\\\\\
local function boot_mprint(array, this, x, y, h, g)\\\\\\\
   local c1 = term.getBackgroundColor()\\\\\\\
   local c2 = term.getTextColor()\\\\\\\
   term.setTextColor(colors.lightGray)\\\\\\\
   for i = 1, #array do\\\\\\\
      term.setCursorPos(x, y)\\\\\\\
      --Check if option selected\\\\\\\
      if i == this then \\\\\\\
      --Option selected   \\\\\\\
         term.setBackgroundColor(h)\\\\\\\
         term.setTextColor(g)\\\\\\\
      else \\\\\\\
      --Option NOT selected \\\\\\\
         term.setBackgroundColor(g)\\\\\\\
         term.setTextColor(h)\\\\\\\
      end\\\\\\\
      --Print the string\\\\\\\
      term.write(boot_handleBootElement(array[i]))\\\\\\\
      y = y + 1 \\\\\\\
   end\\\\\\\
   term.setBackgroundColor(c1)\\\\\\\
   term.setTextColor(c2)\\\\\\\
end\\\\\\\
\\\\\\\
local function boot_drawBootMenu(array, pos_x, pos_y, highlight, generic)\\\\\\\
   local select = 1\\\\\\\
   local x, y = term.getCursorPos()\\\\\\\
   \\\\\\\
   while true do\\\\\\\
      term.setCursorPos(x, y)\\\\\\\
      boot_mprint(array, select, pos_x, pos_y, highlight, generic)\\\\\\\
      event, key = os.pullEvent(\\\\\\\"key\\\\\\\")\\\\\\\
      --Enter\\\\\\\
      if key == 28 then \\\\\\\
         return select \\\\\\\
      end\\\\\\\
      \\\\\\\
      if #array > 1 then\\\\\\\
         --Arrow UP or W key\\\\\\\
         if key == 200 or key == 17 then \\\\\\\
      \\\\009\\\\009    select = select - 1 \\\\\\\
\\\\009\\\\009\\\\009\\\\\\\
            if select < 1 then \\\\\\\
               select = #array \\\\\\\
            end\\\\\\\
         --Arrow Down or S key\\\\\\\
         elseif key == 208 or key == 31 then \\\\\\\
      \\\\009\\\\009    select = select + 1     \\\\\\\
        \\\\009\\\\009\\\\009 if select > #array then select = 1 end\\\\\\\
  \\\\009      end\\\\\\\
      end   \\\\\\\
   end\\\\\\\
end\\\\\\\
\\\\\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\
 term.write(\\\\\\\"                                                   \\\\\\\")\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\
 print(txt)\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
local function drawBootManager(opt)\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.clear()\\\\\\\
    term.setCursorPos(1,1)\\\\\\\
    boot_printColoredTextLine(2, \\\\\\\"             Orbital Boot Manager v1.0             \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009if not err then\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\" ARROW KEYS=Choose                      ENTER=Boot \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009else\\\\\\\
        boot_printColoredTextLine(18, \\\\\\\"                                                   \\\\\\\", colors.lightGray, colors.black)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
if not fs.exists(\\\\\\\"/boot/bcd\\\\\\\") or not fs.isDir(\\\\\\\"/boot/bcd\\\\\\\") or not loadfile(\\\\\\\"/boot/bcd/orbital\\\\\\\") or not loadfile(\\\\\\\"/boot/bcd/orbital-re\\\\\\\") then\\\\\\\
    drawBootManager(true)\\\\\\\
    term.setBackgroundColor(colors.black)\\\\\\\
    term.setTextColor(colors.lightGray)\\\\009\\\\\\\
\\\\009term.setCursorPos(2,7)\\\\\\\
\\\\009print(\\\\\\\"The required Boot Configuration Data (BCD) files\\\\\\\")\\\\\\\
\\\\009term.setCursorPos(2,8)\\\\\\\
\\\\009print(\\\\\\\"are not present on this computer.\\\\\\\")\\\\\\\
\\\\009term.setCursorPos(2,10)\\\\\\\
\\\\009print(\\\\\\\"Please reinstall the Orbital operating system.\\\\\\\")\\\\\\\
    while true do\\\\\\\
\\\\009    sleep(1)\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
while true do\\\\\\\
    drawBootManager(false)\\\\\\\
    local a={\\\\\\\"Orbital 0.0.2.7 Developer Preview\\\\\\\", \\\\\\\"Orbital Recovery Environment\\\\\\\", \\\\\\\"Boot from floppy disk\\\\\\\"}\\\\\\\
    local gmn=boot_drawBootMenu(a, 4, 5, colors.lightGray, colors.black)\\\\\\\
    if gmn == 1 then\\\\\\\
\\\\009\\\\009shell.run(\\\\\\\"/boot/bcd/orbital\\\\\\\")\\\\\\\
\\\\009\\\\009break\\\\\\\
    elseif gmn == 2 then \\\\\\\
\\\\009\\\\009shell.run(\\\\\\\"/boot/bcd/orbital-re\\\\\\\")\\\\\\\
        if __RECOVERY then\\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
        else\\\\\\\
            term.setCursorPos(1, 16)\\\\\\\
            term.setTextColor(colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009print(\\\\\\\"         ERROR: Orbital RE is unavailable.\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009sleep(1)\\\\\\\
\\\\009\\\\009end\\\\\\\
    elseif gmn==3 then \\\\\\\
        if fs.exists(\\\\\\\"/disk/startup\\\\\\\") then\\\\\\\
\\\\009\\\\009    shell.run(\\\\\\\"/disk/startup\\\\\\\") \\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
        else\\\\\\\
            term.setCursorPos(1, 16)\\\\\\\
            term.setTextColor(colors.lightGray)\\\\\\\
\\\\009\\\\009\\\\009print(\\\\\\\"        ERROR: Unable to detect MBR on disk\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009sleep(1)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
end\\\"\",\
  \"F:template_1\",\
  \"\\\"os.loadAPI(\\\\\\\"txUI\\\\\\\")\\\\\\\
local w, h = term.getSize()\\\\\\\
local window = txUI.Window:new({w = w; h = h;})\\\\\\\
txUI.Controller:addWindow(window)\\\\\\\
window:setTitleLabel(txUI.Label:new({text = \\\\\\\"Terminal Options\\\\\\\"; textColor = colors.white; textAlign = \\\\\\\"right\\\\\\\";}))\\\\\\\
--window:addComponent(txUI.Button:new({x = 1; y = 1; w = 1; h = 1; action = (function(self) self.parent:close() end); textColor = colors.red; bgColor = window.tlColor; text = \\\\\\\"X\\\\\\\";}))\\\\\\\
\\\\\\\
--window:addComponent(txUI.Label:new({x = 1; y = 5; w = w; text = \\\\\\\"Login to txUI\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\
window:addComponent(txUI.Label:new({x = 4; y = 4; text = \\\\\\\"The following options regulate the behaviour\\\\\\\"; textAlign = \\\\\\\"left\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\
window:addComponent(txUI.Label:new({x = 4; y = 5; text = \\\\\\\"of the Orbital Terminal.\\\\\\\"; textAlign = \\\\\\\"left\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\
--window:addComponent(txUI.TextField:new({x = 33; y = 8; placeholder = \\\\\\\"Username\\\\\\\";}))\\\\\\\
--window:addComponent(txUI.Label:new({x = 4; y = 10; text = \\\\\\\"Password\\\\\\\"; textAlign = \\\\\\\"left\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\
--window:addComponent(txUI.TextField:new({x = 33; y = 10; placeholder = \\\\\\\"Password\\\\\\\"; textMask = \\\\\\\"*\\\\\\\";}))\\\\\\\
window:addComponent(txUI.Checkbox:new({x = 4; y = 7; text = \\\\\\\"Enable auto-completion\\\\\\\";}))\\\\\\\
window:addComponent(txUI.Checkbox:new({x = 4; y = 9; text = \\\\\\\"Show hidden files\\\\\\\";}))\\\\\\\
window:addComponent(txUI.Checkbox:new({x = 4; y = 11; text = \\\\\\\"Remember me\\\\\\\";}))\\\\\\\
window:addComponent(txUI.Checkbox:new({x = 4; y = 13; text = \\\\\\\"Remember me\\\\\\\";}))\\\\\\\
window:addComponent(txUI.Button:new({x = 35; y = 16; action = (function(self) self.parent:close() end); text = \\\\\\\"Login\\\\\\\";}))\\\\\\\
\\\\\\\
txUI.Controller:startUpdateCycle()\\\"\",\
  \"F:test\",\
  \"\\\"os.loadAPI(\\\\\\\"/libmenu\\\\\\\")\\\\\\\
libmenu.drawMenu(\\\\\\\"Test menu\\\\\\\", {\\\\\\\"1\\\\\\\", \\\\\\\"2\\\\\\\", \\\\\\\"3\\\\\\\"})\\\\\\\
os.loadAPI(\\\\\\\"/libminimenu\\\\\\\")\\\\\\\
libminimenu.minimenu(\\\\\\\"test\\\\\\\", \\\\\\\"test\\\\\\\", 'test')\\\"\",\
  \"F:windows\",\
  \"\\\"os.loadAPI(\\\\\\\"txUI\\\\\\\")\\\\\\\
txUI.Controller.spaceColor = colors.lightBlue\\\\\\\
txUI.Controller.multiWindow = true\\\\\\\
local w, h = term.getSize()\\\\\\\
local window = txUI.Window:new({w = w - 5; h = h - 5; draggable = true; hasShadow = true; bgColor = colors.white; tlColor = colors.lightGray; shadowColor = colors.gray;})\\\\\\\
txUI.Controller:addWindow(window)\\\\\\\
window:addComponent(txUI.Button:new({x = 1; y = 1; w = 1; h = 1; action = (function(self) txUI.Controller:closeWindow(self.parent); end); textColor = colors.white; bgColor = window.tlColor; text = \\\\\\\"x\\\\\\\";}))\\\\\\\
txUI.Controller:addComponent(txUI.Label:new({x = 1; y = 9; w = w; text = \\\\\\\"txUI Windows!\\\\\\\"; textColor = colors.white; bgColor = colors.lightBlue;}))\\\\\\\
txUI.Controller:addWindow(txUI.Controller:cloneComponent(window))\\\\\\\
txUI.Controller:startUpdateCycle()\\\"\",\
  \"F:winhost\",\
  \"\\\"GUI.Controller.spaceColor = colors.cyan\\\\\\\
GUI.Controller.multiWindow = true\\\\\\\
local w, h = term.getSize()\\\\\\\
local window = GUI.Window:new({w = w - 5; h = h - 5; draggable = true; hasShadow = true; bgColor = colors.white; tlColor = colors.lightGray; shadowColor = colors.gray;})\\\\\\\
GUI.Controller:addWindow(window)\\\\\\\
window:addComponent(GUI.Button:new({x = 1; y = 1; w = 1; h = 1; action = (function(self) self.parent:close() end); textColor = colors.white; bgColor = window.tlColor; text = \\\\\\\"x\\\\\\\";}))\\\\\\\
GUI.Controller:addComponent(GUI.Label:new({x = 1; y = 9; w = w; text = \\\\\\\"GUI Windows!\\\\\\\"; textColor = colors.white; bgColor = colors.lightBlue;}))\\\\\\\
GUI.Controller:addWindow(GUI.Controller:cloneComponent(window))\\\\\\\
GUI.Controller:startUpdateCycle()\\\"\",\
}",
  "F:esiconfig.b",
  "\"rawset(_G, \\\"__declare\\\", function(g, v)\\\
 return rawset(_G, g, v)\\\
end)\\\
\\\
__declare(\\\"__declare_api\\\", function(a, g, v)\\\
 return rawset(_G[a], g, v)\\\
end)\\\
\\\
__declare(\\\"__try\\\", function(f, e)\\\
local r = {pcall(f)}\\\
if table.remove(r, 1) == true then\\\
 return unpack(r)\\\
else\\\
 if e ~= nil then\\\
  e(unpack(r))\\\
 else\\\
  return __kstop(0x0000FFFF, unpack(r))\\\
 end\\\
end\\\
end)\\\
\\\
local conf = ESI.LoadBootConfig()\\\
\\\
if not conf then\\\
    drawBootManager(true)\\\
    term.setBackgroundColor(colors.black)\\\
    term.setTextColor(colors.red)\\009\\\
\\009term.setCursorPos(2,4)\\\
\\009print(\\\"The Orbital Boot Manager was unable to continue\\\")\\\
\\009term.setCursorPos(2,5)\\\
\\009print(\\\"the booting process.\\\")\\\
\\009term.setCursorPos(2,7)\\\
\\009print(\\\"Status:\\\")\\\
\\009term.setCursorPos(2,8)\\\
\\009print(\\\"ESI_CONFIGURATION_MISSING (0x00000002)\\\")\\\
\\009term.setCursorPos(2,10)\\\
\\009print(\\\"Information:\\\")\\\
\\009term.setCursorPos(2,11)\\\
\\009print(\\\"The /boot/bootConfig.dat file is missing.\\\")\\\
\\009term.setCursorPos(2,12)\\\
\\009print(\\\"A default file will be generated after rebooting.\\\")\\\
    while true do\\\
\\009    sleep(1)\\\
\\009end\\\
end\\\
\\\
local secondsPast = 0\\\
local timerID = os.startTimer( 1 )\\\
\\\
drawBootManager(false)\\\
term.setBackgroundColor(colors.black)\\\
term.setTextColor(colors.lightGray)\\009\\\
term.setCursorPos(2,16)\\\
print(\\\"Booting ESI...\\\")\\\
\\\
while true do\\\
 local event, value = os.pullEvent()\\\
 if event == \\\"timer\\\" and value == timerID then\\\
  secondsPast = secondsPast + 1 -- Increment secondsPast by one, a second has passed\\\
  if secondsPast == 3 then\\\
   break\\\
  else\\\
   timerID = os.startTimer( 1 )\\\
  end\\\
 elseif event == \\\"key\\\" and value == 60 then\\\
  break\\\
 end\\\
end\\\
\\\
if secondsPast == 3 then\\\
 shell.run(\\\"/boot/Orbital.script\\\")\\\
else\\\
 shell.run(\\\"/boot/modules/esiconfig.b\\\")\\\
end\"",
  "F:esiplatform.b",
  "\"local function boot_handleBootElement(str)\\\
   local s1 = \\\"                                           \\\"\\\
   local n1 = s1:len()\\\
   local n2 = str:len()\\\
   local s2 = string.sub(s1, 1, n1-n2)\\\
   return \\\" \\\"..str..s2..\\\" \\\"\\\
end\\\
\\\
local function boot_mprint(array, this, x, y, h, g)\\\
   local c1 = term.getBackgroundColor()\\\
   local c2 = term.getTextColor()\\\
   term.setTextColor(colors.lightGray)\\\
   for i = 1, #array do\\\
      term.setCursorPos(x, y)\\\
      --Check if option selected\\\
      if i == this then \\\
      --Option selected   \\\
         term.setBackgroundColor(h)\\\
         term.setTextColor(g)\\\
      else \\\
      --Option NOT selected \\\
         term.setBackgroundColor(g)\\\
         term.setTextColor(h)\\\
      end\\\
      --Print the string\\\
      term.write(boot_handleBootElement(array[i]))\\\
      y = y + 1 \\\
   end\\\
   term.setBackgroundColor(c1)\\\
   term.setTextColor(c2)\\\
end\\\
\\\
local function boot_drawBootMenu(array, pos_x, pos_y, highlight, generic)\\\
   local select = 1\\\
   local x, y = term.getCursorPos()\\\
   \\\
   while true do\\\
      term.setCursorPos(x, y)\\\
      boot_mprint(array, select, pos_x, pos_y, highlight, generic)\\\
      event, key = os.pullEvent(\\\"key\\\")\\\
      --Enter\\\
      if key == 28 then \\\
         return select \\\
      end\\\
      \\\
      if #array > 1 then\\\
         --Arrow UP or W key\\\
         if key == 200 or key == 17 then \\\
      \\009\\009    select = select - 1 \\\
\\009\\009\\009\\\
            if select < 1 then \\\
               select = #array \\\
            end\\\
         --Arrow Down or S key\\\
         elseif key == 208 or key == 31 then \\\
      \\009\\009    select = select + 1     \\\
        \\009\\009\\009 if select > #array then select = 1 end\\\
  \\009      end\\\
      end   \\\
   end\\\
end\\\
\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\
 term.setCursorPos(1, y)\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\
 term.write(\\\"                                                   \\\")\\\
 term.setCursorPos(1, y)\\\
 term.setTextColor(fg or colors.black)\\\
 print(txt)\\\
 term.setBackgroundColor(colors.black)\\\
 term.setTextColor(colors.white)\\\
end\\\
\\\
local function drawBootManager(opt)\\\
    term.setBackgroundColor(colors.black)\\\
    term.clear()\\\
    term.setCursorPos(1,1)\\\
\\009if not opt then\\\
        boot_printColoredTextLine(2, \\\"             Orbital Boot Manager v2.1             \\\", colors.lightGray, colors.black)\\\
        boot_printColoredTextLine(18, \\\" ARROW KEYS=Choose                     ENTER=Toggle \\\", colors.lightGray, colors.black)\\\
\\009else\\\
        boot_printColoredTextLine(2, \\\"             Orbital Boot Manager v2.1             \\\", colors.red, colors.black)\\\
        boot_printColoredTextLine(18, \\\"                                                   \\\", colors.red, colors.black)\\\
\\009end\\\
end\"",
  "D:etc",
  "{\
  \"F:errorLog\",\
  \"\\\"4d:6:51 | Arguments required (tpm [flags] <mode> [modeArguments]). See `tpm help` for more information\\\\\\\
4d:7:35 | Cannot list packages - no packages installed\\\\\\\
4d:8:01 | Could not find package 'titanium'. Use `tpm fetch` to update package listings.\\\\\\\
4d:19:09 | File not found\\\\\\\
4d:20:30 | File not found\\\\\\\
4d:22:18 | Path example/ui/master.tml cannot be found\\\\\\\
1d:7:13 | Path example/ui/master.tml cannot be found\\\\\\\
1d:7:59 | [Instance] Thread (4a14ff6a) coroutine exception: main.lua:248: attempt to call nil\\\\\\\
1d:10:08 | [Instance] Thread (21b539f8) coroutine exception: main.lua:248: attempt to call nil\\\\\\\
1d:10:53 | [Instance] Thread (62260d29) coroutine exception: main.lua:248: attempt to call nil\\\\\\\
1d:10:59 | [Instance] Thread (56f87615) coroutine exception: main.lua:248: attempt to call nil\\\\\\\
1d:13:56 | [Instance] Thread (6ac700d2) coroutine exception: main.lua:248: attempt to call nil\\\\\\\
2d:6:01 | Terminated\\\\\\\
2d:6:01 | Terminated\\\"\",\
}",
  "D:lib",
  "{\
  \"F:libdaemon.1.so\",\
  \"\\\"local libcode = [[\\\\\\\
--a stateless iterator for use in for loops.\\\\\\\
local function fIter (t, i)\\\\\\\
    i = not i and #t or (i - 1)\\\\\\\
    if i>0 then\\\\\\\
        return i, t[i]\\\\\\\
    end\\\\\\\
end\\\\\\\
 \\\\\\\
--[[a table that stores all running daemons\\\\\\\
when we add a new value we first create a coroutine using the fFunc passed]]\\\\\\\
local tBackground = setmetatable({},{\\\\\\\
    __newindex = function(t, k, v)\\\\\\\
        v.cRoutine=coroutine.create(v[1])\\\\\\\
        rawset(t, k, v)\\\\\\\
    end;\\\\\\\
})\\\\\\\
 \\\\\\\
--[[starts a new daemon\\\\\\\
 \\\\\\\
fFunc = function that runs in background\\\\\\\
fError = function ran if fFunc ever ends for any reason\\\\\\\
 \\\\\\\
returns identifier for new daemon\\\\\\\
]]\\\\\\\
function add(fFunc, fError)\\\\\\\
    tBackground[#tBackground + 1] = {fFunc, fError=fError}\\\\\\\
    return tBackground[#tBackground]\\\\\\\
end\\\\\\\
 \\\\\\\
--[[removes a running daemon\\\\\\\
internally this sets a flag telling the system to remove this daemon next time it loops through\\\\\\\
 \\\\\\\
cRoutine = daemon to remove\\\\\\\
]]\\\\\\\
function rem(cRoutine)\\\\\\\
    cRoutine.sFilter=\\\\\\\"Daemon_internal_remove\\\\\\\"\\\\\\\
end\\\\\\\
 \\\\\\\
--returns identifiers for all running daemons\\\\\\\
function getBackground()\\\\\\\
    return tBackground\\\\\\\
end\\\\\\\
 \\\\\\\
--[[internal variable\\\\\\\
determines what level of depth we are in the daemon]]\\\\\\\
local bPullMeta = false\\\\\\\
 \\\\\\\
 \\\\\\\
--[[replacing the native os.pullEventRaw to function]]\\\\\\\
function os.pullEventRaw(sEvent)\\\\\\\
    local tData\\\\\\\
 \\\\\\\
    if bPullMeta then\\\\\\\
        return coroutine.yield(sEvent)\\\\\\\
    else\\\\\\\
        repeat\\\\\\\
            bPullMeta = true\\\\\\\
            tData = {coroutine.yield()}\\\\\\\
 \\\\\\\
            for iIndex, cRoutine in fIter, tBackground do --\\\\\\\
                if cRoutine.sFilter==tData[1] or not cRoutine.sFilter then\\\\\\\
                    local bOk, sInnerEvent = coroutine.resume(cRoutine.cRoutine, unpack(tData))\\\\\\\
                    if bOk then\\\\\\\
                        cRoutine.sFilter = sInnerEvent\\\\\\\
                    else\\\\\\\
                        table.remove(tBackground, iIndex)\\\\\\\
                        if cRoutine.fError then\\\\\\\
                            cRoutine.fError(sInnerEvent, cRoutine)\\\\\\\
                        end\\\\\\\
                    end\\\\\\\
                elseif cRoutine.sFilter==\\\\\\\"Daemon_internal_remove\\\\\\\" then\\\\\\\
                    table.remove(tBackground, iIndex)\\\\\\\
                end\\\\\\\
            end\\\\\\\
            bPullMeta = false\\\\\\\
        until tData[1] == sEvent or not sEvent\\\\\\\
        return unpack(tData)\\\\\\\
    end\\\\\\\
end\\\\\\\
]]\\\\\\\
\\\\\\\
persist(\\\\\\\"daemon\\\\\\\", libcode)\\\\\\\
\\\\\\\
return 1\\\"\",\
  \"F:libgui_txui.1.so\",\
  \"\\\"local libcode = [[\\\\\\\
-- --\\\\\\\
-- txUI - ComputerCraft User Interface Library\\\\\\\
-- rel\\\\\\\
-- tuogex\\\\\\\
-- --\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Controller @static\\\\\\\
-- Holds the windows of the program and handles events\\\\\\\
-- --\\\\\\\
Controller = {}\\\\\\\
Controller.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009components = {};\\\\\\\
\\\\009windows = {};\\\\\\\
\\\\009termSize = {};\\\\\\\
\\\\009spaceColor = colors.white;\\\\\\\
\\\\009style = {};\\\\\\\
\\\\009useNative = true;\\\\\\\
\\\\009multiWindow = false;\\\\\\\
\\\\009oldTerm = {};\\\\\\\
\\\\009--functions\\\\\\\
\\\\009drawAll = function(self)\\\\\\\
\\\\009\\\\009local w, h = term.getSize()\\\\\\\
\\\\009\\\\009Utils:drawRect(1, 1, w, h, self.spaceColor)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:draw()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local drawQueue = {}\\\\\\\
\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009if (val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(drawQueue, 1, val)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009for key, val in pairs(drawQueue) do\\\\\\\
\\\\009\\\\009\\\\009val:draw()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009appUpdate = function(self, eventTbl) end;\\\\\\\
\\\\009startUpdateCycle = function(self)\\\\\\\
\\\\009\\\\009Controller.termSize = term.getSize()\\\\\\\
\\\\009\\\\009if (self.useNative) then\\\\\\\
\\\\009\\\\009\\\\009Controller.oldTerm = term.current()\\\\\\\
\\\\009\\\\009\\\\009term.redirect(term.native())\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local handleEvent = function()\\\\\\\
\\\\009\\\\009\\\\009local event\\\\\\\
\\\\009\\\\009\\\\009repeat\\\\\\\
\\\\009\\\\009\\\\009\\\\009event = {os.pullEventRaw()}\\\\\\\
\\\\009\\\\009\\\\009until(event[1] ~= \\\\\\\"timer\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009if (event[1] == \\\\\\\"terminate\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009self:terminate()\\\\\\\
\\\\009\\\\009\\\\009elseif (event[1] == \\\\\\\"mouse_click\\\\\\\" or event[1] == \\\\\\\"monitor_touch\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:click(event[3], event[4], event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and Utils:inBounds(val.x, val.y, val.w, val.h, event[3], event[4]) and tostring(self.windows[1]) ~= tostring(val)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009table.remove(self.windows, key)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009table.insert(self.windows, 1, val)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009elseif (val.visible and Utils:inBounds(val.x, val.y, val.w, val.h, event[3], event[4]) and tostring(self.windows[1]) == tostring(val)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and Utils:inBounds(val.x, val.y, val.w, val.h, event[3], event[4]) and tostring(self.windows[1]) == tostring(val) and val:click(event[3], event[4], event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif (event[1] == \\\\\\\"mouse_scroll\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:scroll(event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:scroll(event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif (event[1] == \\\\\\\"mouse_drag\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:drag(event[3], event[4], event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:drag(event[3], event[4], event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif (event[1] == \\\\\\\"char\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:char(event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:char(event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009elseif (event[1] == \\\\\\\"key\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:key(event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:key(event[2])) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:event(event)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (val.visible and val:event(event)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009return event\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009while (true) do\\\\\\\
\\\\009\\\\009\\\\009if (#self.windows == 0 and #self.components == 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009self:exit()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009self:drawAll()\\\\\\\
\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009val:update()\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009val:update()\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009local eventTbl = handleEvent()\\\\\\\
\\\\009\\\\009\\\\009self:appUpdate(eventTbl);\\\\\\\
\\\\009\\\\009\\\\009--remove components marked for removal\\\\\\\
\\\\009\\\\009\\\\009local removed = {}\\\\\\\
\\\\009\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (val.removed) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009table.insert(removed, key)\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009val:update()\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009for key, val in pairs(removed) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009self.components[val] = nil\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009--close windows marked for close\\\\\\\
\\\\009\\\\009\\\\009local closed = {}\\\\\\\
\\\\009\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (val.closed) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009table.insert(closed, key)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009for key, val in pairs(closed) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009self.windows[val] = nil\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009setVisibleWindow = function(self, windowTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009local wasVisible = val.visible\\\\\\\
\\\\009\\\\009\\\\009val.visible = (tostring(val) == tostring(windowTbl) or self.multiWindow)\\\\\\\
\\\\009\\\\009\\\\009if (not wasVisible and val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:onView()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if (wasVisible and not val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:onHide()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009addWindow = function(self, windowTbl)\\\\\\\
\\\\009\\\\009windowTbl.closed = false\\\\\\\
\\\\009\\\\009windowTbl.visible = self.multiWindow\\\\\\\
\\\\009\\\\009table.insert(self.windows, windowTbl)\\\\\\\
\\\\009\\\\009if (#self.windows == 1) then\\\\\\\
\\\\009\\\\009\\\\009self:setVisibleWindow(windowTbl)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009closeWindow = function(self, windowTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.windows) do\\\\\\\
\\\\009\\\\009\\\\009if (val == windowTbl) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val.closed = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009addComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009componentTbl.parent = self\\\\\\\
\\\\009\\\\009componentTbl.parent.x = 1\\\\\\\
\\\\009\\\\009componentTbl.parent.y = 1\\\\\\\
\\\\009\\\\009componentTbl.parent.w = self.termSize[1]\\\\\\\
\\\\009\\\\009componentTbl.parent.h = self.termSize[2]\\\\\\\
\\\\009\\\\009componentTbl.removed = false\\\\\\\
\\\\009\\\\009table.insert(self.components, componentTbl)\\\\\\\
\\\\009end;\\\\\\\
\\\\009removeComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val == componentTbl) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val.removed = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009terminate = function(self)\\\\\\\
\\\\009\\\\009self:exit()\\\\\\\
\\\\009end;\\\\\\\
\\\\009exit = function(self)\\\\\\\
\\\\009\\\\009if (self.useNative) then\\\\\\\
\\\\009\\\\009\\\\009term.redirect(self.oldTerm)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setBackgroundColor(colors.black)\\\\\\\
\\\\009\\\\009term.clear()\\\\\\\
\\\\009\\\\009term.setCursorPos(1, 1)\\\\\\\
\\\\009\\\\009error()\\\\\\\
\\\\009end;\\\\\\\
\\\\009cloneComponent = function(self, obj, copied)\\\\\\\
\\\\009\\\\009if type(obj) ~= 'table' then\\\\\\\
\\\\009\\\\009\\\\009return obj\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if copied and copied[obj] then\\\\\\\
\\\\009\\\\009\\\\009return copied[obj]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local c = copied or {}\\\\\\\
\\\\009\\\\009local res = setmetatable({}, getmetatable(obj))\\\\\\\
\\\\009\\\\009c[obj] = res\\\\\\\
\\\\009\\\\009for k, v in pairs(obj) do\\\\\\\
\\\\009\\\\009\\\\009res[self:cloneComponent(k, c)] = self:cloneComponent(v, c)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009return res\\\\\\\
\\\\009end;\\\\\\\
\\\\009inheritComponent = function(self, obj, newTbl)\\\\\\\
\\\\009\\\\009local oldComponent = self:cloneComponent(obj)\\\\\\\
\\\\009\\\\009for k, v in pairs(newTbl) do\\\\\\\
\\\\009\\\\009\\\\009oldComponent[k] = v\\\\\\\
\\\\009\\\\009end \\\\\\\
\\\\009\\\\009return oldComponent\\\\\\\
\\\\009end;\\\\\\\
\\\\009setDefaultStyle = function(self, styleTbl)\\\\\\\
\\\\009\\\\009self.style = styleTbl\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
Controller.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009return Controller.prototype[key]\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
setmetatable(Controller, Controller.mt)\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Utils @static\\\\\\\
-- Utilities to aid in UI design\\\\\\\
-- --\\\\\\\
Utils = {}\\\\\\\
Utils.prototype = {\\\\\\\
\\\\009drawRect = function(self, x, y, w, h, color)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(color)\\\\\\\
\\\\009\\\\009for pY = y, h - 1 + y, 1 do\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(x, pY)\\\\\\\
\\\\009\\\\009\\\\009for pX = x, w - 1 + x, 1 do\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.write(\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009alignText = function(self, alignment, textLength, x, w)\\\\\\\
\\\\009\\\\009if (alignment == \\\\\\\"left\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009return x\\\\\\\
\\\\009\\\\009elseif (alignment == \\\\\\\"center\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009return x + ((w - textLength) / 2)\\\\\\\
\\\\009\\\\009elseif (alignment == \\\\\\\"right\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009return x + (w - textLength)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009limitText = function(self, text, limit, tail)\\\\\\\
\\\\009\\\\009if (string.len(text) > limit) then\\\\\\\
\\\\009\\\\009\\\\009return string.sub(text, 0, limit - string.len(tail)) .. tail\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return text\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009wrapText = function(self, text, limit)\\\\\\\
\\\\009\\\\009local index = 0\\\\\\\
\\\\009\\\\009return text:gsub(\\\\\\\"(%C?)\\\\\\\", function (w)\\\\\\\
\\\\009\\\\009\\\\009index = index + 1\\\\\\\
\\\\009\\\\009\\\\009return w .. (index % limit == 0 and \\\\\\\"\\\\\\\\n\\\\\\\" or \\\\\\\"\\\\\\\")\\\\\\\
\\\\009\\\\009end)\\\\\\\
\\\\009end;\\\\\\\
\\\\009splitText = function(self, str, pat)\\\\\\\
\\\\009\\\\009local t = {}\\\\\\\
\\\\009\\\\009local fpat = \\\\\\\"(.-)\\\\\\\" .. pat\\\\\\\
\\\\009\\\\009local last_end = 1\\\\\\\
\\\\009\\\\009local s, e, cap = str:find(fpat, 1)\\\\\\\
\\\\009\\\\009while s do\\\\\\\
\\\\009\\\\009\\\\009if (s ~= 1 or cap ~= \\\\\\\"\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(t,cap)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009last_end = e + 1\\\\\\\
\\\\009\\\\009\\\\009s, e, cap = str:find(fpat, last_end)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if (last_end <= #str) then\\\\\\\
\\\\009\\\\009\\\\009cap = str:sub(last_end)\\\\\\\
\\\\009\\\\009\\\\009table.insert(t, cap)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009return t\\\\\\\
\\\\009end;\\\\\\\
\\\\009inBounds = function(self, boundX, boundY, boundW, boundH, checkX, checkY)\\\\\\\
\\\\009\\\\009local xInBound = (checkX >= boundX) and (checkX <= boundX + boundW - 1)\\\\\\\
\\\\009\\\\009local yInBound = (checkY >= boundY) and (checkY <= boundY + boundH - 1)\\\\\\\
\\\\009\\\\009return xInBound and yInBound\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
Utils.mt = {\\\\\\\
\\\\009__index = function(table, key)\\\\\\\
\\\\009\\\\009return Utils.prototype[key]\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
setmetatable(Utils, Utils.mt)\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Style\\\\\\\
-- Contains default styles for components and windows\\\\\\\
-- --\\\\\\\
Style = {}\\\\\\\
Style.prototype = {\\\\\\\
\\\\009Window = {};\\\\\\\
\\\\009Component = {};\\\\\\\
\\\\009Panel = {};\\\\\\\
\\\\009Button = {};\\\\\\\
\\\\009Label = {};\\\\\\\
\\\\009TextField = {};\\\\\\\
\\\\009List = {};\\\\\\\
\\\\009CheckBox = {};\\\\\\\
\\\\009ProgressBar = {};\\\\\\\
}\\\\\\\
Style.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009return Style.prototype[key]\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function Style:new(styleTbl)\\\\\\\
\\\\009setmetatable(styleTbl, Style.mt)\\\\\\\
\\\\009return styleTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Window\\\\\\\
-- Pretty self explainatory\\\\\\\
-- --\\\\\\\
Window = {}\\\\\\\
Window.prototype = {\\\\\\\
\\\\009-- vars\\\\\\\
\\\\009bgColor = colors.lightGray;\\\\\\\
\\\\009tlColor = colors.gray;\\\\\\\
\\\\009activeTlColor = colors.blue;\\\\\\\
\\\\009components = {};\\\\\\\
\\\\009titleLabel = {};\\\\\\\
\\\\009z = 0;\\\\\\\
\\\\009x = 1;\\\\\\\
\\\\009y = 1;\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 1;\\\\\\\
\\\\009draggable = false;\\\\\\\
\\\\009lastClick = {};\\\\\\\
\\\\009hasShadow = false;\\\\\\\
\\\\009shadowColor = colors.black;\\\\\\\
\\\\009visible = false;\\\\\\\
\\\\009closed = false;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009--draw shadow\\\\\\\
\\\\009\\\\009if (self.hasShadow) then\\\\\\\
\\\\009\\\\009\\\\009Utils:drawRect(self.x + 1, self.y + 1, self.w, self.h, self.shadowColor)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009--drawPane\\\\\\\
\\\\009\\\\009Utils:drawRect(self.x, self.y, self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009--drawTitle\\\\\\\
\\\\009\\\\009term.setBackgroundColor((self:isActive() and Controller.multiWindow) and self.activeTlColor or self.tlColor)\\\\\\\
\\\\009\\\\009term.setCursorPos(self.x, self.y)\\\\\\\
\\\\009\\\\009for pX = self.x, self.w + self.x - 1, 1 do\\\\\\\
\\\\009\\\\009\\\\009term.write(\\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if (self.titleLabel.draw ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009self.titleLabel:draw()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009--draw components\\\\\\\
\\\\009\\\\009self:drawComponents()\\\\\\\
\\\\009end;\\\\\\\
\\\\009drawComponents = function(self)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val.visible) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:draw()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009setTitleLabel = function(self, newLabel)\\\\\\\
\\\\009\\\\009newLabel.parent = self\\\\\\\
\\\\009\\\\009setmetatable(newLabel, Label.tlmt)\\\\\\\
\\\\009\\\\009self.titleLabel = newLabel\\\\\\\
\\\\009end;\\\\\\\
\\\\009addComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009componentTbl.parent = self\\\\\\\
\\\\009\\\\009componentTbl.removed = false\\\\\\\
\\\\009\\\\009table.insert(self.components, componentTbl)\\\\\\\
\\\\009end;\\\\\\\
\\\\009removeComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val == componentTbl) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val.removed = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009close = function(self)\\\\\\\
\\\\009\\\\009Controller:closeWindow(self)\\\\\\\
\\\\009end;\\\\\\\
\\\\009click = function(self, x, y)\\\\\\\
\\\\009\\\\009if (self.draggable and ((x >= self.x) and (x <= (self.x + self.w - 1)) and (y >= self.y) and (y <= self.y))) then\\\\\\\
\\\\009\\\\009\\\\009self.lastClick.x = x\\\\\\\
\\\\009\\\\009\\\\009self.lastClick.y = y\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009self.lastClick.x = nil\\\\\\\
\\\\009\\\\009\\\\009self.lastClick.y = nil\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:click(x, y)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009return (self.draggable and ((x >= self.x) and (x <= (self.x + self.w - 1)) and (y >= self.y) and (y <= self.y)))\\\\\\\
\\\\009end;\\\\\\\
\\\\009key = function(self, keyCode)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:key(keyCode)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009char = function(self, char)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:char(char)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009scroll = function(self, direction)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:scroll(direction)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009drag = function(self, x, y)\\\\\\\
\\\\009\\\\009if (self.draggable and self.lastClick.x ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009self.x = self.x + x - self.lastClick.x\\\\\\\
\\\\009\\\\009\\\\009self.y = self.y + y - self.lastClick.y\\\\\\\
\\\\009\\\\009\\\\009self.lastClick.x = x\\\\\\\
\\\\009\\\\009\\\\009self.lastClick.y = y\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:drag(x, y)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009event = function(self, eventTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:event(eventTbl)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009onView = function(self)\\\\\\\
\\\\009end;\\\\\\\
\\\\009onHide = function(self)\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self)\\\\\\\
\\\\009\\\\009local removed = {}\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val.removed) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(removed, key)\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:update()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009for key, val in pairs(removed) do\\\\\\\
\\\\009\\\\009\\\\009self.components[val] = nil\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009isActive = function(self)\\\\\\\
\\\\009\\\\009return Controller.windows[1] == self\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
Window.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (Controller.style.Window[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Controller.style.Window[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Window.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function Window:new(windowTbl)\\\\\\\
\\\\009setmetatable(windowTbl, Window.mt)\\\\\\\
\\\\009windowTbl.components = {}\\\\\\\
\\\\009return windowTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Component @abstract\\\\\\\
-- Abstract class used to represent components in a window\\\\\\\
-- --\\\\\\\
Component = {}\\\\\\\
Component.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009x = 1;\\\\\\\
\\\\009y = 1;\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 1;\\\\\\\
\\\\009z = 0;\\\\\\\
\\\\009parent = {};\\\\\\\
\\\\009removed = false;\\\\\\\
\\\\009visible = true;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self) end;\\\\\\\
\\\\009click = function(self, x, y, button) return false end;\\\\\\\
\\\\009key = function(self, keyCode) return false end;\\\\\\\
\\\\009char = function(self, char) return false end;\\\\\\\
\\\\009scroll = function(self, direction) return false end;\\\\\\\
\\\\009drag = function(self, x, y, button) return false end;\\\\\\\
\\\\009event = function(self, eventTbl) return false end;\\\\\\\
\\\\009update = function(self) return false end;\\\\\\\
\\\\009termX = function(self) return self.x + self.parent.x - 1 end;\\\\\\\
\\\\009termY = function(self) return self.y + self.parent.y - 1 end;\\\\\\\
\\\\009setPos = function(self, x, y)\\\\\\\
\\\\009\\\\009self.x = x;\\\\\\\
\\\\009\\\\009self.y = y;\\\\\\\
\\\\009end;\\\\\\\
\\\\009setSize = function(self, w, h)\\\\\\\
\\\\009\\\\009self.w = w;\\\\\\\
\\\\009\\\\009self.h = h;\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Panel\\\\\\\
-- Pretty self explainatory\\\\\\\
-- --\\\\\\\
Panel = {}\\\\\\\
Panel.prototype = {\\\\\\\
\\\\009-- vars\\\\\\\
\\\\009bgColor = colors.lightGray;\\\\\\\
\\\\009components = {};\\\\\\\
\\\\009z = 0;\\\\\\\
\\\\009x = 1;\\\\\\\
\\\\009y = 1;\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 1;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009--drawPane\\\\\\\
\\\\009\\\\009Utils:drawRect(self.x, self.y, self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009--draw components\\\\\\\
\\\\009\\\\009self:drawComponents()\\\\\\\
\\\\009end;\\\\\\\
\\\\009drawComponents = function(self)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:draw()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009addComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009componentTbl.parent = self\\\\\\\
\\\\009\\\\009componentTbl.removed = false\\\\\\\
\\\\009\\\\009table.insert(self.components, componentTbl)\\\\\\\
\\\\009end;\\\\\\\
\\\\009removeComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val == componentTbl) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val.removed = true\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009close = function(self)\\\\\\\
\\\\009\\\\009Controller:closeWindow(self)\\\\\\\
\\\\009end;\\\\\\\
\\\\009click = function(self, x, y)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:click(x, y)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009key = function(self, keyCode)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:key(keyCode)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009char = function(self, char)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:char(char)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009scroll = function(self, direction)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:scroll(direction)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009drag = function(self, x, y)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:drag(x, y)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009event = function(self, eventTbl)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val:event(eventTbl)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self)\\\\\\\
\\\\009\\\\009local removed = {}\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if (val.removed) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009table.insert(removed, key)\\\\\\\
\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:update()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009for key, val in pairs(removed) do\\\\\\\
\\\\009\\\\009\\\\009self.components[val] = nil\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
Panel.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (Controller.style.Panel[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Controller.style.Panel[key]\\\\\\\
\\\\009\\\\009elseif (Panel.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Panel.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function Panel:new(panelTbl)\\\\\\\
\\\\009setmetatable(panelTbl, Panel.mt)\\\\\\\
\\\\009panelTbl.components = {}\\\\\\\
\\\\009return panelTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Button extends Component\\\\\\\
-- A component that you can click\\\\\\\
-- --\\\\\\\
Button = {}\\\\\\\
Button.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009h = 3;\\\\\\\
\\\\009w = 16;\\\\\\\
\\\\009bgColor = colors.lightBlue;\\\\\\\
\\\\009textColor = colors.white;\\\\\\\
\\\\009activeColor = colors.blue;\\\\\\\
\\\\009activeTextColor = colors.white;\\\\\\\
\\\\009active = false;\\\\\\\
\\\\009text = \\\\\\\"txUI Button\\\\\\\";\\\\\\\
\\\\009textAlign = \\\\\\\"center\\\\\\\";\\\\\\\
\\\\009vertCenter = true;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009action = function(self) end;\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), self.w, self.h, (function(self) if (self.active) then return self.activeColor else return self.bgColor end end)(self))\\\\\\\
\\\\009\\\\009term.setTextColor((function(self) if (self.active) then return self.activeTextColor else return self.textColor end end)(self))\\\\\\\
\\\\009\\\\009local lines = #Utils:splitText(self.text, \\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009\\\\009for k, v in ipairs(Utils:splitText(self.text, \\\\\\\"\\\\\\\\n\\\\\\\")) do\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(Utils:alignText(self.textAlign, string.len(v), self:termX(), self.w), self:termY() + k - 1 + (self.vertCenter and ((self.h - lines) / 2) or 0))\\\\\\\
\\\\009\\\\009\\\\009term.write(v)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009click = function (self, x, y)\\\\\\\
\\\\009\\\\009if ((x >= self:termX()) and (x <= (self:termX() + self.w - 1)) and (y >= self:termY()) and (y <= (self:termY() + self.h - 1))) then\\\\\\\
\\\\009\\\\009\\\\009self.active = true\\\\\\\
\\\\009\\\\009\\\\009self:action()\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009self.active = false\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self) return false end;\\\\\\\
}\\\\\\\
Button.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (Controller.style.Button[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Controller.style.Button[key]\\\\\\\
\\\\009\\\\009elseif (Button.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Button.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function Button:new(buttonTbl)\\\\\\\
\\\\009if (buttonTbl == nil) then\\\\\\\
\\\\009\\\\009buttonTbl = self\\\\\\\
\\\\009end\\\\\\\
\\\\009setmetatable(buttonTbl, Button.mt)\\\\\\\
\\\\009return buttonTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Label extends Component\\\\\\\
-- A component that displays text\\\\\\\
-- --\\\\\\\
Label = {}\\\\\\\
Label.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 16;\\\\\\\
\\\\009bgColor = colors.white;\\\\\\\
\\\\009textColor = colors.black;\\\\\\\
\\\\009text = \\\\\\\"txUI Label\\\\\\\";\\\\\\\
\\\\009textAlign = \\\\\\\"center\\\\\\\";\\\\\\\
\\\\009vertCenter = true;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(self.bgColor)\\\\\\\
\\\\009\\\\009term.setTextColor(self.textColor)\\\\\\\
\\\\009\\\\009local lines = #Utils:splitText(self.text, \\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009\\\\009for k, v in ipairs(Utils:splitText(self.text, \\\\\\\"\\\\\\\\n\\\\\\\")) do\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(Utils:alignText(self.textAlign, string.len(v), self:termX(), self.w), self:termY() + k - 1 + (self.vertCenter and ((self.h - lines) / 2) or 0))\\\\\\\
\\\\009\\\\009\\\\009term.write(v)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self) return false end;\\\\\\\
}\\\\\\\
Label.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (Label.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Label.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
Label.tlmt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (key == \\\\\\\"w\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009return table.parent.w\\\\\\\
\\\\009\\\\009elseif (key == \\\\\\\"bgColor\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009return table.parent.tlColor\\\\\\\
\\\\009\\\\009elseif (Label.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Label.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function Label:new(labelTbl)\\\\\\\
\\\\009if (labelTbl == nil) then\\\\\\\
\\\\009\\\\009labelTbl = self\\\\\\\
\\\\009end\\\\\\\
\\\\009setmetatable(labelTbl, Label.mt)\\\\\\\
\\\\009return labelTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- TextField extends Component\\\\\\\
-- A component that allows for text input\\\\\\\
-- --\\\\\\\
TextField = {}\\\\\\\
TextField.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 16;\\\\\\\
\\\\009bgColor = colors.white;\\\\\\\
\\\\009textColor = colors.black;\\\\\\\
\\\\009placeholderColor = colors.lightGray;\\\\\\\
\\\\009placeholder = \\\\\\\"txUI TextField\\\\\\\";\\\\\\\
\\\\009text = \\\\\\\"\\\\\\\";\\\\\\\
\\\\009textAlign = \\\\\\\"left\\\\\\\";\\\\\\\
\\\\009textMask = \\\\\\\"\\\\\\\";\\\\\\\
\\\\009active = false;\\\\\\\
\\\\009cursorPos = 0;\\\\\\\
\\\\009displayOffset = 0;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(self.bgColor)\\\\\\\
\\\\009\\\\009if (self.active or string.len(self.text) ~= 0) then\\\\\\\
\\\\009\\\\009\\\\009local toWrite = string.sub(self.text, self.displayOffset + 1, self.displayOffset + self.w)\\\\\\\
\\\\009\\\\009\\\\009if (string.len(self.textMask) ~= 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009toWrite = string.gsub(toWrite, \\\\\\\"%C\\\\\\\", self.textMask)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(Utils:alignText(self.textAlign, string.len(toWrite), self:termX(), self.w), self:termY() + (self.h / 2))\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(self.textColor)\\\\\\\
\\\\009\\\\009\\\\009term.write(toWrite)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009local toWrite = string.sub(self.placeholder, self.displayOffset + 1)\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(Utils:alignText(self.textAlign, string.len(toWrite), self:termX(), self.w), self:termY() + (self.h / 2))\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(self.placeholderColor)\\\\\\\
\\\\009\\\\009\\\\009term.write(toWrite)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009term.setCursorBlink(self.active)\\\\\\\
\\\\009\\\\009if (self.active) then\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX() + self.cursorPos - self.displayOffset, self:termY() + (self.h / 2))\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009click = function (self, x, y)\\\\\\\
\\\\009\\\\009if ((x >= self:termX()) and (x <= (self:termX() + self.w - 1)) and (y >= self:termY()) and (y <= (self:termY() + self.h - 1))) then\\\\\\\
\\\\009\\\\009\\\\009self.active = true\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009self.active = false\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009action = function(self)\\\\\\\
\\\\009end;\\\\\\\
\\\\009key = function(self, keyCode)\\\\\\\
\\\\009\\\\009if (self.active == false) then\\\\\\\
\\\\009\\\\009\\\\009return\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if (keyCode == keys.backspace) then\\\\\\\
\\\\009\\\\009\\\\009if (self.cursorPos > 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009self.text = string.sub(self.text, 1, self.cursorPos - 1) .. string.sub(self.text, self.cursorPos + 1)\\\\\\\
\\\\009\\\\009\\\\009\\\\009self.cursorPos = self.cursorPos - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.cursorPos - self.displayOffset < 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009self:draw()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif (keyCode == keys.left) then\\\\\\\
\\\\009\\\\009\\\\009if (self.cursorPos > 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009self.cursorPos = self.cursorPos - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.cursorPos - self.displayOffset < 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009self:draw()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif (keyCode == keys.right) then\\\\\\\
\\\\009\\\\009\\\\009if (self.cursorPos < string.len(self.text)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009self.cursorPos = self.cursorPos + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.cursorPos - self.displayOffset > self.w - 1) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009self:draw()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009elseif (keyCode == keys.enter) then\\\\\\\
\\\\009\\\\009\\\\009self:action()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009char = function(self, char)\\\\\\\
\\\\009\\\\009if (self.active == false) then\\\\\\\
\\\\009\\\\009\\\\009return\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009self.text = string.sub(self.text, 1, self.cursorPos) .. char .. string.sub(self.text, self.cursorPos + 1)\\\\\\\
\\\\009\\\\009if (self.cursorPos - self.displayOffset > self.w - 2) then\\\\\\\
\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset + 1\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009self.cursorPos = self.cursorPos + 1\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self)\\\\\\\
\\\\009\\\\009if (self.active) then\\\\\\\
\\\\009\\\\009\\\\009self:draw()\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
TextField.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (TextField.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return TextField.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function TextField:new(textFieldTbl)\\\\\\\
\\\\009if (textFieldTbl == nil) then\\\\\\\
\\\\009\\\\009textFieldTbl = self\\\\\\\
\\\\009end\\\\\\\
\\\\009setmetatable(textFieldTbl, TextField.mt)\\\\\\\
\\\\009return textFieldTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- List extends Component\\\\\\\
-- A component that lets you hold lists of other components\\\\\\\
-- --\\\\\\\
List = {}\\\\\\\
List.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009h = 5;\\\\\\\
\\\\009w = 16;\\\\\\\
\\\\009bgColor = colors.white;\\\\\\\
\\\\009bgColorStripe = colors.lightGray;\\\\\\\
\\\\009textColor = colors.black;\\\\\\\
\\\\009textColorStripe = colors.black;\\\\\\\
\\\\009activeColor = colors.gray;\\\\\\\
\\\\009activeTextColor = colors.white;\\\\\\\
\\\\009textAlign = \\\\\\\"left\\\\\\\";\\\\\\\
\\\\009scrollBarColor = colors.gray;\\\\\\\
\\\\009scrollBarTextColor = colors.white;\\\\\\\
\\\\009scrollBar = true;\\\\\\\
\\\\009wrapText = false;\\\\\\\
\\\\009displayOffset = 0;\\\\\\\
\\\\009components = {};\\\\\\\
\\\\009active = false;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009term.setBackgroundColor(self.bgColor)\\\\\\\
\\\\009\\\\009-- draw the components\\\\\\\
\\\\009\\\\009local index = 1\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009val.w = self.w - (self.scrollBar and 1 or 0)\\\\\\\
\\\\009\\\\009\\\\009val.y = self.displayOffset + index\\\\\\\
\\\\009\\\\009\\\\009index = index + val.h\\\\\\\
\\\\009\\\\009\\\\009if ((val.y > 0) and (val.y <= self.h)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:draw()\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009self.components[key] = val\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009-- draw the scroll bar\\\\\\\
\\\\009\\\\009if (self.scrollBar) then\\\\\\\
\\\\009\\\\009\\\\009Utils:drawRect(self:termX() + self.w - 1, self:termY(), 1, self.h, self.scrollBarColor)\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(self.scrollBarColor)\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(self.scrollBarTextColor)\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX() + self.w - 1, self:termY())\\\\\\\
\\\\009\\\\009\\\\009term.write(\\\\\\\"^\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX() + self.w - 1, self:termY() + self.h - 1)\\\\\\\
\\\\009\\\\009\\\\009term.write(\\\\\\\"v\\\\\\\")\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009click = function (self, x, y)\\\\\\\
\\\\009\\\\009for key, val in pairs(self.components) do\\\\\\\
\\\\009\\\\009\\\\009if ((val.y > 0) and (val.y <= self.h)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009val:click(x, y)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if ((x >= self:termX()) and (x <= (self:termX() + self.w - 1)) and (y >= self:termY()) and (y <= (self:termY() + self.h - 1))) then\\\\\\\
\\\\009\\\\009\\\\009self.active = true\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009self.active = false\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009if (self.scrollBar) then\\\\\\\
\\\\009\\\\009\\\\009if ((x == self:termX() + self.w - 1) and (y == self:termY())) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.displayOffset < 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if ((x == self:termX() + self.w - 1) and (y == self:termY() + self.h - 1)) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.displayOffset > -#self.components + 1) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009scroll = function (self, direction)\\\\\\\
\\\\009\\\\009if (self.active) then\\\\\\\
\\\\009\\\\009\\\\009if (direction == -1) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.displayOffset < 0) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset + 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009if (direction == 1) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (self.displayOffset > -#self.components + 1) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009self.displayOffset = self.displayOffset - 1\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009addComponent = function(self, componentTbl)\\\\\\\
\\\\009\\\\009componentTbl.h = 1\\\\\\\
\\\\009\\\\009componentTbl.w = self.w - (self.scrollBar and 1 or 0)\\\\\\\
\\\\009\\\\009if (not self.wrapText) then\\\\\\\
\\\\009\\\\009\\\\009componentTbl.text = Utils:limitText(componentTbl.text, componentTbl.w, \\\\\\\"...\\\\\\\")\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009if (string.len(componentTbl.text) > componentTbl.w) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009componentTbl.h = math.ceil(string.len(componentTbl.text) / componentTbl.w)\\\\\\\
\\\\009\\\\009\\\\009\\\\009componentTbl.text = Utils:wrapText(componentTbl.text, componentTbl.w)\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009componentTbl.bgColor = (#self.components % 2 == 0 and self.bgColor or self.bgColorStripe)\\\\\\\
\\\\009\\\\009componentTbl.textColor = (#self.components % 2 == 0 and self.textColor or self.textColorStripe)\\\\\\\
\\\\009\\\\009componentTbl.textAlign = self.textAlign\\\\\\\
\\\\009\\\\009componentTbl.activeColor = self.activeColor\\\\\\\
\\\\009\\\\009componentTbl.activeTextColor = self.activeTextColor\\\\\\\
\\\\009\\\\009componentTbl.parent = self\\\\\\\
\\\\009\\\\009componentTbl.removed = false\\\\\\\
\\\\009\\\\009table.insert(self.components, componentTbl)\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self) return false end;\\\\\\\
}\\\\\\\
List.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (List.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return List.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function List:new(listTbl)\\\\\\\
\\\\009if (listTbl == nil) then\\\\\\\
\\\\009\\\\009listTbl = self\\\\\\\
\\\\009end\\\\\\\
\\\\009setmetatable(listTbl, List.mt)\\\\\\\
\\\\009listTbl.components = {}\\\\\\\
\\\\009return listTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- Checkbox extends Component\\\\\\\
-- A component that lets users make a boolean choice\\\\\\\
-- --\\\\\\\
Checkbox = {}\\\\\\\
Checkbox.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 16;\\\\\\\
\\\\009bgColor = colors.lightGray;\\\\\\\
\\\\009boxColor = colors.white;\\\\\\\
\\\\009textColor = colors.black;\\\\\\\
\\\\009checkedChar = \\\\\\\"X\\\\\\\";\\\\\\\
\\\\009checked = false;\\\\\\\
\\\\009text = \\\\\\\"txUI Checkbox\\\\\\\";\\\\\\\
\\\\009textPosition = \\\\\\\"right\\\\\\\";\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009-- draw box and set label position\\\\\\\
\\\\009\\\\009term.setBackgroundColor(self.boxColor)\\\\\\\
\\\\009\\\\009term.setTextColor(self.textColor)\\\\\\\
\\\\009\\\\009if (self.textPosition == \\\\\\\"right\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), 1, 1, self.boxColor)\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX(), self:termY())\\\\\\\
\\\\009\\\\009\\\\009term.write(self.checked and self.checkedChar or \\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX() + 2, self:termY())\\\\\\\
\\\\009\\\\009elseif (self.textPosition == \\\\\\\"left\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009Utils:drawRect(self:termX() + self.w - 1, self:termY(), 1, 1, self.boxColor)\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX() + self.w - 1, self:termY())\\\\\\\
\\\\009\\\\009\\\\009term.write(self.checked and self.checkedChar or \\\\\\\" \\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009term.setCursorPos(self:termX() + self.w - string.len(self.text) - 2, self:termY())\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009-- draw label\\\\\\\
\\\\009\\\\009term.setBackgroundColor(self.bgColor)\\\\\\\
\\\\009\\\\009term.write(self.text)\\\\\\\
\\\\009end;\\\\\\\
\\\\009click = function (self, x, y)\\\\\\\
\\\\009\\\\009if ((x >= self:termX()) and (x <= (self:termX() + self.w - 1)) and (y >= self:termY()) and (y <= (self:termY() + self.h - 1))) then\\\\\\\
\\\\009\\\\009\\\\009self.checked = not self.checked\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self) return false end;\\\\\\\
}\\\\\\\
Checkbox.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (Checkbox.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return Checkbox.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function Checkbox:new(checkboxTbl)\\\\\\\
\\\\009if (checkboxTbl == nil) then\\\\\\\
\\\\009\\\\009checkboxTbl = self\\\\\\\
\\\\009end\\\\\\\
\\\\009setmetatable(checkboxTbl, Checkbox.mt)\\\\\\\
\\\\009return checkboxTbl\\\\\\\
end\\\\\\\
\\\\\\\
-- --\\\\\\\
-- ProgressBar extends Component\\\\\\\
-- A component that shows progress\\\\\\\
-- --\\\\\\\
ProgressBar = {}\\\\\\\
ProgressBar.prototype = {\\\\\\\
\\\\009--vars\\\\\\\
\\\\009h = 1;\\\\\\\
\\\\009w = 16;\\\\\\\
\\\\009val = 0;\\\\\\\
\\\\009bgColor = colors.white;\\\\\\\
\\\\009barColor = colors.lime;\\\\\\\
\\\\009textColor = colors.black;\\\\\\\
\\\\009barTextColor = colors.white;\\\\\\\
\\\\009textAlign = \\\\\\\"center\\\\\\\";\\\\\\\
\\\\009textMask = \\\\\\\"{val}%\\\\\\\";\\\\\\\
\\\\009showText = true;\\\\\\\
\\\\009vertCenter = true;\\\\\\\
\\\\009--functions\\\\\\\
\\\\009draw = function(self)\\\\\\\
\\\\009\\\\009if (self.val > 100) then\\\\\\\
\\\\009\\\\009\\\\009self.val = 100\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009local barWidth = self.w * (self.val / 100)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), self.w, self.h, self.bgColor)\\\\\\\
\\\\009\\\\009Utils:drawRect(self:termX(), self:termY(), barWidth, self.h, self.barColor)\\\\\\\
\\\\009\\\\009if (self.showText) then\\\\\\\
\\\\009\\\\009\\\\009local text = string.gsub(self.textMask, \\\\\\\"{val}\\\\\\\", tostring(self.val))\\\\\\\
\\\\009\\\\009\\\\009term.setBackgroundColor(self.bgColor)\\\\\\\
\\\\009\\\\009\\\\009term.setTextColor(self.textColor)\\\\\\\
\\\\009\\\\009\\\\009local lines = #Utils:splitText(text, \\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009\\\\009\\\\009for k, v in ipairs(Utils:splitText(text, \\\\\\\"\\\\\\\\n\\\\\\\")) do\\\\\\\
\\\\009\\\\009\\\\009\\\\009term.setCursorPos(Utils:alignText(self.textAlign, string.len(v), self:termX(), self.w), self:termY() + k - 1 + (self.vertCenter and ((self.h - lines) / 2) or 0))\\\\\\\
\\\\009\\\\009\\\\009\\\\009local x, y = term.getCursorPos()\\\\\\\
\\\\009\\\\009\\\\009\\\\009if (x - self:termX() < barWidth) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(self.barColor)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(self.barTextColor)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.write(v)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009if (x - self:termX() + string.len(v) > barWidth) then\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setBackgroundColor(self.bgColor)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setTextColor(self.textColor)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009local overflow = x - self:termX() + string.len(v) - barWidth\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009local ax, ay = term.getCursorPos()\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.setCursorPos(ax - overflow, ay)\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009\\\\009term.write(string.sub(v, math.abs(string.len(v) - overflow) + 1))\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009\\\\009\\\\009term.write(v)\\\\\\\
\\\\009\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009\\\\009end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
\\\\009update = function(self) return false end;\\\\\\\
}\\\\\\\
ProgressBar.mt = {\\\\\\\
\\\\009__index = function (table, key)\\\\\\\
\\\\009\\\\009if (ProgressBar.prototype[key] ~= nil) then\\\\\\\
\\\\009\\\\009\\\\009return ProgressBar.prototype[key]\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009return Component.prototype[key]\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end;\\\\\\\
}\\\\\\\
function ProgressBar:new(progressBarTbl)\\\\\\\
\\\\009if (progressBarTbl == nil) then\\\\\\\
\\\\009\\\\009progressBarTbl = self\\\\\\\
\\\\009end\\\\\\\
\\\\009setmetatable(progressBarTbl, ProgressBar.mt)\\\\\\\
\\\\009return progressBarTbl\\\\\\\
end\\\\\\\
\\\\\\\
Controller:setDefaultStyle(Style:new({}))\\\\\\\
]]\\\\\\\
\\\\\\\
persist(\\\\\\\"GUI\\\\\\\", libcode)\\\\\\\
\\\\\\\
return 1\\\"\",\
  \"F:libstdlua.2.so\",\
  \"\\\"local libcode = [[\\\\\\\
--\\\\\\\
--Copyright (C) 2012 Thomas Farr a.k.a tomass1996 [farr.thomas@gmail.com]\\\\\\\
--Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\\\\\\\
--associated documentation files (the \\\\\\\"Software\\\\\\\"), to deal in the Software without restriction,\\\\\\\
--including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\\\\\\\
--copies of the Software, and to permit persons to whom the Software is furnished to do so,\\\\\\\
--subject to the following conditions:\\\\\\\
---The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\\\\\\
---Visible credit is given to the original author.\\\\\\\
---The software is distributed in a non-profit way.\\\\\\\
--THE SOFTWARE IS PROVIDED \\\\\\\"AS IS\\\\\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\\\\\\\
--WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\\\\\\\
--COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\\\\\\\
--ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\\\\\\
--\\\\\\\
\\\\\\\
local floor,modf, insert = math.floor,math.modf, table.insert\\\\\\\
local char,format,rep = string.char,string.format,string.rep\\\\\\\
\\\\\\\
local function basen(n,b)\\\\\\\
\\\\009if n < 0 then\\\\\\\
\\\\009\\\\009n = -n\\\\\\\
\\\\009end\\\\\\\
       local t = \\\\\\\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^_abcdefghijklmnopqrstuvwxyz{|}~\\\\\\\"\\\\\\\
   if n < b then\\\\\\\
\\\\009local ret = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009ret = ret..string.sub(t, (n%b)+1,(n%b)+1)\\\\\\\
\\\\009return ret\\\\\\\
   else\\\\\\\
\\\\009local tob = tostring(basen(math.floor(n/b), b))\\\\\\\
\\\\009local ret = tob..t:sub((n%b)+1,(n%b)+1)\\\\\\\
\\\\009return ret\\\\\\\
   end\\\\\\\
end\\\\\\\
\\\\\\\
local Base64 = {}\\\\\\\
Base64[\\\\\\\"lsh\\\\\\\"] = function(value,shift)\\\\\\\
    return (value*(2^shift)) % 256\\\\\\\
end\\\\\\\
Base64[\\\\\\\"rsh\\\\\\\"] = function(value,shift)\\\\\\\
    return math.floor(value/2^shift) % 256\\\\\\\
end\\\\\\\
Base64[\\\\\\\"bit\\\\\\\"] = function(x,b)\\\\\\\
    return (x % 2^b - x % 2^(b-1) > 0)\\\\\\\
end\\\\\\\
Base64[\\\\\\\"lor\\\\\\\"] = function(x,y)\\\\\\\
    local result = 0\\\\\\\
    for p=1,8 do result = result + (((Base64.bit(x,p) or Base64.bit(y,p)) == true) and 2^(p-1) or 0) end\\\\\\\
    return result\\\\\\\
end\\\\\\\
Base64[\\\\\\\"base64chars\\\\\\\"] = {\\\\\\\
    [0]='A',[1]='B',[2]='C',[3]='D',[4]='E',[5]='F',[6]='G',[7]='H',[8]='I',[9]='J',[10]='K',\\\\\\\
    [11]='L',[12]='M',[13]='N',[14]='O',[15]='P',[16]='Q',[17]='R',[18]='S',[19]='T',[20]='U',\\\\\\\
    [21]='V',[22]='W',[23]='X',[24]='Y',[25]='Z',[26]='a',[27]='b',[28]='c',[29]='d',[30]='e',\\\\\\\
    [31]='f',[32]='g',[33]='h',[34]='i',[35]='j',[36]='k',[37]='l',[38]='m',[39]='n',[40]='o',\\\\\\\
    [41]='p',[42]='q',[43]='r',[44]='s',[45]='t',[46]='u',[47]='v',[48]='w',[49]='x',[50]='y',\\\\\\\
    [51]='z',[52]='0',[53]='1',[54]='2',[55]='3',[56]='4',[57]='5',[58]='6',[59]='7',[60]='8',\\\\\\\
    [61]='9',[62]='-',[63]='_'}\\\\\\\
Base64[\\\\\\\"base64bytes\\\\\\\"] = {\\\\\\\
    ['A']=0,['B']=1,['C']=2,['D']=3,['E']=4,['F']=5,['G']=6,['H']=7,['I']=8,['J']=9,['K']=10,\\\\\\\
    ['L']=11,['M']=12,['N']=13,['O']=14,['P']=15,['Q']=16,['R']=17,['S']=18,['T']=19,['U']=20,\\\\\\\
    ['V']=21,['W']=22,['X']=23,['Y']=24,['Z']=25,['a']=26,['b']=27,['c']=28,['d']=29,['e']=30,\\\\\\\
    ['f']=31,['g']=32,['h']=33,['i']=34,['j']=35,['k']=36,['l']=37,['m']=38,['n']=39,['o']=40,\\\\\\\
    ['p']=41,['q']=42,['r']=43,['s']=44,['t']=45,['u']=46,['v']=47,['w']=48,['x']=49,['y']=50,\\\\\\\
    ['z']=51,['0']=52,['1']=53,['2']=54,['3']=55,['4']=56,['5']=57,['6']=58,['7']=59,['8']=60,\\\\\\\
    ['9']=61,['-']=62,['_']=63,['=']=nil}\\\\\\\
\\\\\\\
local base32 = \\\\\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\\\\\\\"\\\\\\\
\\\\\\\
local tSHA1 = {}\\\\\\\
tSHA1[\\\\\\\"bytes_to_w32\\\\\\\"] = function(a,b,c,d) return a*0x1000000+b*0x10000+c*0x100+d end\\\\\\\
tSHA1[\\\\\\\"w32_to_bytes\\\\\\\"] = function(i) return floor(i/0x1000000)%0x100,floor(i/0x10000)%0x100,floor(i/0x100)%0x100,i%0x100 end\\\\\\\
tSHA1[\\\\\\\"w32_rot\\\\\\\"] = function(bits,a)\\\\\\\
    local b2 = 2^(32-bits)\\\\\\\
    local a,b = modf(a/b2)\\\\\\\
    return a+b*b2*(2^(bits))\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"byte_to_bits\\\\\\\"] = function(b)\\\\\\\
    local b = function (n)\\\\\\\
        local b = floor(b/n)\\\\\\\
        return b%2==1\\\\\\\
    end\\\\\\\
    return b(1),b(2),b(4),b(8),b(16),b(32),b(64),b(128)\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"bits_to_byte\\\\\\\"] = function(a,b,c,d,e,f,g,h)\\\\\\\
    local function n(b,x) return b and x or 0 end\\\\\\\
    return n(a,1)+n(b,2)+n(c,4)+n(d,8)+n(e,16)+n(f,32)+n(g,64)+n(h,128)\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"bits_to_string\\\\\\\"] = function(a,b,c,d,e,f,g,h)\\\\\\\
    local function x(b) return b and \\\\\\\"1\\\\\\\" or \\\\\\\"0\\\\\\\" end\\\\\\\
    return (\\\\\\\"%s%s%s%s %s%s%s%s\\\\\\\"):format(x(a),x(b),x(c),x(d),x(e),x(f),x(g),x(h))\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"byte_to_bit_string\\\\\\\"] = function(b) return tSHA1.bits_to_string(byte_to_bits(b)) end\\\\\\\
tSHA1[\\\\\\\"w32_to_bit_string\\\\\\\"] = function(a)\\\\\\\
    if type(a) == \\\\\\\"string\\\\\\\" then return a end\\\\\\\
    local aa,ab,ac,ad = tSHA1.w32_to_bytes(a)\\\\\\\
    local s = tSHA1.byte_to_bit_string\\\\\\\
    return (\\\\\\\"%s %s %s %s\\\\\\\"):format(s(aa):reverse(),s(ab):reverse(),s(ac):reverse(),s(ad):reverse()):reverse()\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"band\\\\\\\"] = function(a,b)\\\\\\\
    local A,B,C,D,E,F,G,H = tSHA1.byte_to_bits(b)\\\\\\\
    local a,b,c,d,e,f,g,h = tSHA1.byte_to_bits(a)\\\\\\\
    return tSHA1.bits_to_byte(\\\\\\\
        A and a, B and b, C and c, D and d,\\\\\\\
        E and e, F and f, G and g, H and h)\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"bor\\\\\\\"] = function(a,b)\\\\\\\
    local A,B,C,D,E,F,G,H = tSHA1.byte_to_bits(b)\\\\\\\
    local a,b,c,d,e,f,g,h = tSHA1.byte_to_bits(a)\\\\\\\
    return tSHA1.bits_to_byte(\\\\\\\
        A or a, B or b, C or c, D or d,\\\\\\\
        E or e, F or f, G or g, H or h)\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"bxor\\\\\\\"] = function(a,b)\\\\\\\
    local A,B,C,D,E,F,G,H = tSHA1.byte_to_bits(b)\\\\\\\
    local a,b,c,d,e,f,g,h = tSHA1.byte_to_bits(a)\\\\\\\
    return tSHA1.bits_to_byte(\\\\\\\
        A ~= a, B ~= b, C ~= c, D ~= d,\\\\\\\
        E ~= e, F ~= f, G ~= g, H ~= h)\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"bnot\\\\\\\"] = function(x) return 255-(x % 256) end\\\\\\\
tSHA1[\\\\\\\"w32_comb\\\\\\\"] = function(fn)\\\\\\\
    return function (a,b)\\\\\\\
        local aa,ab,ac,ad = tSHA1.w32_to_bytes(a)\\\\\\\
        local ba,bb,bc,bd = tSHA1.w32_to_bytes(b)\\\\\\\
        return tSHA1.bytes_to_w32(fn(aa,ba),fn(ab,bb),fn(ac,bc),fn(ad,bd))\\\\\\\
    end\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"w32_xor_n\\\\\\\"] = function(a,...)\\\\\\\
    local aa,ab,ac,ad = tSHA1.w32_to_bytes(a)\\\\\\\
    for i=1,select('#',...) do\\\\\\\
        local ba,bb,bc,bd = tSHA1.w32_to_bytes(select(i,...))\\\\\\\
        aa,ab,ac,ad = tSHA1.bxor(aa,ba),tSHA1.bxor(ab,bb),tSHA1.bxor(ac,bc),tSHA1.bxor(ad,bd)\\\\\\\
    end\\\\\\\
    return tSHA1.bytes_to_w32(aa,ab,ac,ad)\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"w32_or3\\\\\\\"] = function(a,b,c)\\\\\\\
    local aa,ab,ac,ad = tSHA1.w32_to_bytes(a)\\\\\\\
    local ba,bb,bc,bd = tSHA1.w32_to_bytes(b)\\\\\\\
    local ca,cb,cc,cd = tSHA1.w32_to_bytes(c)\\\\\\\
    return tSHA1.bytes_to_w32(\\\\\\\
        tSHA1.bor(aa,tSHA1.bor(ba,ca)), tSHA1.bor(ab,tSHA1.bor(bb,cb)), tSHA1.bor(ac,tSHA1.bor(bc,cc)), tSHA1.bor(ad,tSHA1.bor(bd,cd))\\\\\\\
    )\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"w32_not\\\\\\\"] = function(a) return 4294967295-(a % 4294967296) end\\\\\\\
tSHA1[\\\\\\\"w32_add\\\\\\\"] = function(a,b) return (a+b) % 4294967296 end\\\\\\\
tSHA1[\\\\\\\"w32_add_n\\\\\\\"] = function(a,...)\\\\\\\
    for i=1,select('#',...) do\\\\\\\
        a = (a+select(i,...)) % 4294967296\\\\\\\
    end\\\\\\\
    return a\\\\\\\
end\\\\\\\
tSHA1[\\\\\\\"w32_to_hexstring\\\\\\\"] = function(w) return format(\\\\\\\"%08x\\\\\\\",w) end\\\\\\\
tSHA1[\\\\\\\"w32_and\\\\\\\"] = tSHA1.w32_comb(tSHA1.band)\\\\\\\
tSHA1[\\\\\\\"w32_xor\\\\\\\"] = tSHA1.w32_comb(tSHA1.bxor)\\\\\\\
tSHA1[\\\\\\\"w32_or\\\\\\\"] = tSHA1.w32_comb(tSHA1.bor)\\\\\\\
\\\\\\\
local CRC = {}\\\\\\\
CRC.crc32 = {\\\\\\\
    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F,\\\\\\\
    0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988,\\\\\\\
    0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2,\\\\\\\
    0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\\\\\\\
    0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,\\\\\\\
    0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172,\\\\\\\
    0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C,\\\\\\\
    0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59,\\\\\\\
    0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423,\\\\\\\
    0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\\\\\\\
    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106,\\\\\\\
    0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\\\\\\\
    0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D,\\\\\\\
    0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,\\\\\\\
    0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,\\\\\\\
    0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65,\\\\\\\
    0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7,\\\\\\\
    0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0,\\\\\\\
    0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA,\\\\\\\
    0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\\\\\\\
    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81,\\\\\\\
    0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A,\\\\\\\
    0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84,\\\\\\\
    0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1,\\\\\\\
    0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,\\\\\\\
    0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC,\\\\\\\
    0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E,\\\\\\\
    0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,\\\\\\\
    0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55,\\\\\\\
    0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\\\\\\\
    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28,\\\\\\\
    0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D,\\\\\\\
    0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F,\\\\\\\
    0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38,\\\\\\\
    0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,\\\\\\\
    0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777,\\\\\\\
    0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69,\\\\\\\
    0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2,\\\\\\\
    0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC,\\\\\\\
    0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\\\\\\\
    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693,\\\\\\\
    0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,\\\\\\\
    0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D }\\\\\\\
\\\\\\\
local bit = {}\\\\\\\
bit[\\\\\\\"bnot\\\\\\\"] = function(n)\\\\\\\
    local tbl = bit.tobits(n)\\\\\\\
    local size = math.max(table.getn(tbl), 32)\\\\\\\
    for i = 1, size do\\\\\\\
        if(tbl[i] == 1) then\\\\\\\
            tbl[i] = 0\\\\\\\
        else\\\\\\\
            tbl[i] = 1\\\\\\\
        end\\\\\\\
    end\\\\\\\
    return bit.tonumb(tbl)\\\\\\\
end\\\\\\\
bit[\\\\\\\"band\\\\\\\"] = function(m, n)\\\\\\\
    local tbl_m = bit.tobits(m)\\\\\\\
    local tbl_n = bit.tobits(n)\\\\\\\
    bit.expand(tbl_m, tbl_n)\\\\\\\
    local tbl = {}\\\\\\\
    local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))\\\\\\\
    for i = 1, rslt do\\\\\\\
        if(tbl_m[i]== 0 or tbl_n[i] == 0) then\\\\\\\
            tbl[i] = 0\\\\\\\
        else\\\\\\\
            tbl[i] = 1\\\\\\\
        end\\\\\\\
    end\\\\\\\
    return bit.tonumb(tbl)\\\\\\\
end\\\\\\\
bit[\\\\\\\"bor\\\\\\\"] = function(m, n)\\\\\\\
    local tbl_m = bit.tobits(m)\\\\\\\
    local tbl_n = bit.tobits(n)\\\\\\\
    bit.expand(tbl_m, tbl_n)\\\\\\\
    local tbl = {}\\\\\\\
    local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))\\\\\\\
    for i = 1, rslt do\\\\\\\
        if(tbl_m[i]== 0 and tbl_n[i] == 0) then\\\\\\\
            tbl[i] = 0\\\\\\\
        else\\\\\\\
            tbl[i] = 1\\\\\\\
        end\\\\\\\
    end\\\\\\\
    return bit.tonumb(tbl)\\\\\\\
end\\\\\\\
bit[\\\\\\\"bxor\\\\\\\"] = function(m, n)\\\\\\\
    local tbl_m = bit.tobits(m)\\\\\\\
    local tbl_n = bit.tobits(n)\\\\\\\
    bit.expand(tbl_m, tbl_n)\\\\\\\
    local tbl = {}\\\\\\\
    local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))\\\\\\\
    for i = 1, rslt do\\\\\\\
        if(tbl_m[i] ~= tbl_n[i]) then\\\\\\\
            tbl[i] = 1\\\\\\\
        else\\\\\\\
            tbl[i] = 0\\\\\\\
        end\\\\\\\
    end\\\\\\\
    return bit.tonumb(tbl)\\\\\\\
end\\\\\\\
bit[\\\\\\\"brshift\\\\\\\"] = function(n, bits)\\\\\\\
    bit.checkint(n)\\\\\\\
    local high_bit = 0\\\\\\\
    if(n < 0) then\\\\\\\
        n = bit.bnot(math.abs(n)) + 1\\\\\\\
        high_bit = 2147483648\\\\\\\
    end\\\\\\\
    for i=1, bits do\\\\\\\
        n = n/2\\\\\\\
        n = bit.bor(math.floor(n), high_bit)\\\\\\\
    end\\\\\\\
    return math.floor(n)\\\\\\\
end\\\\\\\
bit[\\\\\\\"blshift\\\\\\\"] = function(n, bits)\\\\\\\
    bit.checkint(n)\\\\\\\
    if(n < 0) then\\\\\\\
        n = bit.bnot(math.abs(n)) + 1\\\\\\\
    end\\\\\\\
    for i=1, bits do\\\\\\\
        n = n*2\\\\\\\
    end\\\\\\\
    return bit.band(n, 4294967295)\\\\\\\
end\\\\\\\
bit[\\\\\\\"bxor2\\\\\\\"] = function(m, n)\\\\\\\
    local rhs = bit.bor(bit.bnot(m), bit.bnot(n))\\\\\\\
    local lhs = bit.bor(m, n)\\\\\\\
    local rslt = bit.band(lhs, rhs)\\\\\\\
    return rslt\\\\\\\
end\\\\\\\
bit[\\\\\\\"blogic_rshift\\\\\\\"] = function(n, bits)\\\\\\\
    bit.checkint(n)\\\\\\\
    if(n < 0) then\\\\\\\
        n = bit.bnot(math.abs(n)) + 1\\\\\\\
    end\\\\\\\
    for i=1, bits do\\\\\\\
        n = n/2\\\\\\\
    end\\\\\\\
    return math.floor(n)\\\\\\\
end\\\\\\\
bit[\\\\\\\"tobits\\\\\\\"] = function(n)\\\\\\\
    bit.checkint(n)\\\\\\\
    if(n < 0) then\\\\\\\
        return bit.tobits(bit.bnot(math.abs(n)) + 1)\\\\\\\
    end\\\\\\\
    local tbl = {}\\\\\\\
    local cnt = 1\\\\\\\
    while (n > 0) do\\\\\\\
        local last = math.fmod(n,2)\\\\\\\
        if(last == 1) then\\\\\\\
            tbl[cnt] = 1\\\\\\\
        else\\\\\\\
            tbl[cnt] = 0\\\\\\\
        end\\\\\\\
        n = (n-last)/2\\\\\\\
        cnt = cnt + 1\\\\\\\
    end\\\\\\\
    return tbl\\\\\\\
end\\\\\\\
bit[\\\\\\\"tonumb\\\\\\\"] = function(tbl)\\\\\\\
    local n = table.getn(tbl)\\\\\\\
    local rslt = 0\\\\\\\
    local power = 1\\\\\\\
    for i = 1, n do\\\\\\\
        rslt = rslt + tbl[i]*power\\\\\\\
        power = power*2\\\\\\\
    end\\\\\\\
    return rslt\\\\\\\
end\\\\\\\
bit[\\\\\\\"checkint\\\\\\\"] = function(n)\\\\\\\
    if(n - math.floor(n) > 0) then\\\\\\\
        error(\\\\\\\"trying to use bitwise operation on non-integer!\\\\\\\")\\\\\\\
    end\\\\\\\
end\\\\\\\
bit[\\\\\\\"expand\\\\\\\"] = function(tbl_m, tbl_n)\\\\\\\
    local big = {}\\\\\\\
    local small = {}\\\\\\\
    if(table.getn(tbl_m) > table.getn(tbl_n)) then\\\\\\\
        big = tbl_m\\\\\\\
        small = tbl_n\\\\\\\
    else\\\\\\\
        big = tbl_n\\\\\\\
        small = tbl_m\\\\\\\
    end\\\\\\\
    for i = table.getn(small) + 1, table.getn(big) do\\\\\\\
        small[i] = 0\\\\\\\
    end\\\\\\\
end\\\\\\\
\\\\\\\
local FCS = {}\\\\\\\
FCS[\\\\\\\"16\\\\\\\"] = {\\\\\\\
    [0]=0, 4489, 8978, 12955, 17956, 22445, 25910, 29887,\\\\\\\
    35912, 40385, 44890, 48851, 51820, 56293, 59774, 63735,\\\\\\\
    4225, 264, 13203, 8730, 22181, 18220, 30135, 25662,\\\\\\\
    40137, 36160, 49115, 44626, 56045, 52068, 63999, 59510,\\\\\\\
    8450, 12427, 528, 5017, 26406, 30383, 17460, 21949,\\\\\\\
    44362, 48323, 36440, 40913, 60270, 64231, 51324, 55797,\\\\\\\
    12675, 8202, 4753, 792, 30631, 26158, 21685, 17724,\\\\\\\
    48587, 44098, 40665, 36688, 64495, 60006, 55549, 51572,\\\\\\\
    16900, 21389, 24854, 28831, 1056, 5545, 10034, 14011,\\\\\\\
    52812, 57285, 60766, 64727, 34920, 39393, 43898, 47859,\\\\\\\
    21125, 17164, 29079, 24606, 5281, 1320, 14259, 9786,\\\\\\\
    57037, 53060, 64991, 60502, 39145, 35168, 48123, 43634,\\\\\\\
    25350, 29327, 16404, 20893, 9506, 13483, 1584, 6073,\\\\\\\
    61262, 65223, 52316, 56789, 43370, 47331, 35448, 39921,\\\\\\\
    29575, 25102, 20629, 16668, 13731, 9258, 5809, 1848,\\\\\\\
    65487, 60998, 56541, 52564, 47595, 43106, 39673, 35696,\\\\\\\
    33800, 38273, 42778, 46739, 49708, 54181, 57662, 61623,\\\\\\\
    2112, 6601, 11090, 15067, 20068, 24557, 28022, 31999,\\\\\\\
    38025, 34048, 47003, 42514, 53933, 49956, 61887, 57398,\\\\\\\
    6337, 2376, 15315, 10842, 24293, 20332, 32247, 27774,\\\\\\\
    42250, 46211, 34328, 38801, 58158, 62119, 49212, 53685,\\\\\\\
    10562, 14539, 2640, 7129, 28518, 32495, 19572, 24061,\\\\\\\
    46475, 41986, 38553, 34576, 62383, 57894, 53437, 49460,\\\\\\\
    14787, 10314, 6865, 2904, 32743, 28270, 23797, 19836,\\\\\\\
    50700, 55173, 58654, 62615, 32808, 37281, 41786, 45747,\\\\\\\
    19012, 23501, 26966, 30943, 3168, 7657, 12146, 16123,\\\\\\\
    54925, 50948, 62879, 58390, 37033, 33056, 46011, 41522,\\\\\\\
    23237, 19276, 31191, 26718, 7393, 3432, 16371, 11898,\\\\\\\
    59150, 63111, 50204, 54677, 41258, 45219, 33336, 37809,\\\\\\\
    27462, 31439, 18516, 23005, 11618, 15595, 3696, 8185,\\\\\\\
    63375, 58886, 54429, 50452, 45483, 40994, 37561, 33584,\\\\\\\
    31687, 27214, 22741, 18780, 15843, 11370, 7921, 3960 }\\\\\\\
FCS[\\\\\\\"32\\\\\\\"] = {\\\\\\\
    [0]=0, 1996959894, -301047508, -1727442502, 124634137, 1886057615, -379345611, -1637575261,\\\\\\\
    249268274, 2044508324, -522852066, -1747789432, 162941995, 2125561021, -407360249, -1866523247,\\\\\\\
    498536548, 1789927666, -205950648, -2067906082, 450548861, 1843258603, -187386543, -2083289657,\\\\\\\
    325883990, 1684777152, -43845254, -1973040660, 335633487, 1661365465, -99664541, -1928851979,\\\\\\\
    997073096, 1281953886, -715111964, -1570279054, 1006888145, 1258607687, -770865667, -1526024853,\\\\\\\
    901097722, 1119000684, -608450090, -1396901568, 853044451, 1172266101, -589951537, -1412350631,\\\\\\\
    651767980, 1373503546, -925412992, -1076862698, 565507253, 1454621731, -809855591, -1195530993,\\\\\\\
    671266974, 1594198024, -972236366, -1324619484, 795835527, 1483230225, -1050600021, -1234817731,\\\\\\\
    1994146192, 31158534, -1731059524, -271249366, 1907459465, 112637215, -1614814043, -390540237,\\\\\\\
    2013776290, 251722036, -1777751922, -519137256, 2137656763, 141376813, -1855689577, -429695999,\\\\\\\
    1802195444, 476864866, -2056965928, -228458418, 1812370925, 453092731, -2113342271, -183516073,\\\\\\\
    1706088902, 314042704, -1950435094, -54949764, 1658658271, 366619977, -1932296973, -69972891,\\\\\\\
    1303535960, 984961486, -1547960204, -725929758, 1256170817, 1037604311, -1529756563, -740887301,\\\\\\\
    1131014506, 879679996, -1385723834, -631195440, 1141124467, 855842277, -1442165665, -586318647,\\\\\\\
    1342533948, 654459306, -1106571248, -921952122, 1466479909, 544179635, -1184443383, -832445281,\\\\\\\
    1591671054, 702138776, -1328506846, -942167884, 1504918807, 783551873, -1212326853, -1061524307,\\\\\\\
    -306674912, -1698712650, 62317068, 1957810842, -355121351, -1647151185, 81470997, 1943803523,\\\\\\\
    -480048366, -1805370492, 225274430, 2053790376, -468791541, -1828061283, 167816743, 2097651377,\\\\\\\
    -267414716, -2029476910, 503444072, 1762050814, -144550051, -2140837941, 426522225, 1852507879,\\\\\\\
    -19653770, -1982649376, 282753626, 1742555852, -105259153, -1900089351, 397917763, 1622183637,\\\\\\\
    -690576408, -1580100738, 953729732, 1340076626, -776247311, -1497606297, 1068828381, 1219638859,\\\\\\\
    -670225446, -1358292148, 906185462, 1090812512, -547295293, -1469587627, 829329135, 1181335161,\\\\\\\
    -882789492, -1134132454, 628085408, 1382605366, -871598187, -1156888829, 570562233, 1426400815,\\\\\\\
    -977650754, -1296233688, 733239954, 1555261956, -1026031705, -1244606671, 752459403, 1541320221,\\\\\\\
    -1687895376, -328994266, 1969922972, 40735498, -1677130071, -351390145, 1913087877, 83908371,\\\\\\\
    -1782625662, -491226604, 2075208622, 213261112, -1831694693, -438977011, 2094854071, 198958881,\\\\\\\
    -2032938284, -237706686, 1759359992, 534414190, -2118248755, -155638181, 1873836001, 414664567,\\\\\\\
    -2012718362, -15766928, 1711684554, 285281116, -1889165569, -127750551, 1634467795, 376229701,\\\\\\\
    -1609899400, -686959890, 1308918612, 956543938, -1486412191, -799009033, 1231636301, 1047427035,\\\\\\\
    -1362007478, -640263460, 1088359270, 936918000, -1447252397, -558129467, 1202900863, 817233897,\\\\\\\
    -1111625188, -893730166, 1404277552, 615818150, -1160759803, -841546093, 1423857449, 601450431,\\\\\\\
    -1285129682, -1000256840, 1567103746, 711928724, -1274298825, -1022587231, 1510334235, 755167117 }\\\\\\\
\\\\\\\
--String Utils :\\\\\\\
\\\\\\\
function toCharTable(str)  --Returns table of @str's chars\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009local chars = {}\\\\\\\
\\\\009for n=1,#str do\\\\\\\
\\\\009\\\\009chars[n] = str:sub(n,n)\\\\\\\
\\\\009end\\\\\\\
\\\\009return chars\\\\\\\
end\\\\\\\
\\\\\\\
function toByteTable(str)  --Returns table of @str's bytes\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009local bytes = {}\\\\\\\
\\\\009for n=1,#str do\\\\\\\
\\\\009\\\\009bytes[n] = str:byte(n)\\\\\\\
\\\\009end\\\\\\\
\\\\009return bytes\\\\\\\
end\\\\\\\
\\\\\\\
function fromCharTable(chars)  --Returns string made of chracters in @chars\\\\\\\
    if not chars or type(chars)~=\\\\\\\"table\\\\\\\" then return nil end\\\\\\\
\\\\009return table.concat(chars)\\\\\\\
end\\\\\\\
\\\\\\\
function fromByteTable(bytes)  --Returns string made of bytes in @bytes\\\\\\\
    if not bytes or type(bytes)~=\\\\\\\"table\\\\\\\" then return nil end\\\\\\\
\\\\009local str = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for n=1,#bytes do\\\\\\\
\\\\009\\\\009str = str..string.char(bytes[n])\\\\\\\
\\\\009end\\\\\\\
\\\\009return str\\\\\\\
end\\\\\\\
\\\\\\\
function contains(str,find)  --Returns true if @str contains @find\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009for n=1, #str-#find+1 do\\\\\\\
\\\\009\\\\009if str:sub(n,n+#find-1) == find then return true end\\\\\\\
\\\\009end\\\\\\\
\\\\009return false\\\\\\\
end\\\\\\\
\\\\\\\
function startsWith(str,Start) --Check if @str starts with @Start\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
    return str:sub(1,Start:len())==Start\\\\\\\
end\\\\\\\
\\\\\\\
function endsWith(str,End)  --Check if @str ends with @End\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
    return End=='' or str:sub(#str-#End+1)==End\\\\\\\
end\\\\\\\
\\\\\\\
function trim(str)  --Trim @str of initial/trailing whitespace\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
    return (str:gsub(\\\\\\\"^%s*(.-)%s*$\\\\\\\", \\\\\\\"%1\\\\\\\"))\\\\\\\
end\\\\\\\
\\\\\\\
function firstLetterUpper(str)  --Capitilizes first letter of @str\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009str = str:gsub(\\\\\\\"%a\\\\\\\", string.upper, 1)\\\\\\\
    return str\\\\\\\
end\\\\\\\
\\\\\\\
function titleCase(str)  --Changes @str to title case\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
    local function tchelper(first, rest)\\\\\\\
\\\\009\\\\009return first:upper()..rest:lower()\\\\\\\
    end\\\\\\\
    str = str:gsub(\\\\\\\"(%a)([%w_']*)\\\\\\\", tchelper)\\\\\\\
\\\\009return str\\\\\\\
end\\\\\\\
\\\\\\\
function isRepetition(str, pat)  --Checks if @str is a repetition of @pat\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009return \\\\\\\"\\\\\\\" == str:gsub(pat, \\\\\\\"\\\\\\\")\\\\\\\
end\\\\\\\
\\\\\\\
function isRepetitionWS(str, pat)  --Checks if @str is a repetition of @pat seperated by whitespaces\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009return not str:gsub(pat, \\\\\\\"\\\\\\\"):find\\\\\\\"%S\\\\\\\"\\\\\\\
end\\\\\\\
\\\\\\\
function urlDecode(str)  --Url decodes @str\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009str = string.gsub (str, \\\\\\\"+\\\\\\\", \\\\\\\" \\\\\\\")\\\\\\\
\\\\009str = string.gsub (str, \\\\\\\"%%(%x%x)\\\\\\\", function(h) return string.char(tonumber(h,16)) end)\\\\\\\
\\\\009str = string.gsub (str, \\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\", \\\\\\\"\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009return str\\\\\\\
end\\\\\\\
\\\\\\\
function urlEncode(str)  --Url encodes @str\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009if (str) then\\\\\\\
\\\\009\\\\009str = string.gsub (str, \\\\\\\"\\\\\\\\n\\\\\\\", \\\\\\\"\\\\\\\\r\\\\\\\\n\\\\\\\")\\\\\\\
\\\\009\\\\009str = string.gsub (str, \\\\\\\"([^%w ])\\\\\\\", function (c) return string.format (\\\\\\\"%%%02X\\\\\\\", string.byte(c)) end)\\\\\\\
\\\\009\\\\009str = string.gsub (str, \\\\\\\" \\\\\\\", \\\\\\\"+\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009return str\\\\\\\
end\\\\\\\
\\\\\\\
function isEmailAddress(str)  --Checks if @str is a valid email address\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
\\\\009if (str:match(\\\\\\\"[A-Za-z0-9%.%%%+%-]+@[A-Za-z0-9%.%%%+%-]+%.%w%w%w?%w?\\\\\\\")) then\\\\\\\
\\\\009\\\\009return true\\\\\\\
\\\\009else\\\\\\\
\\\\009\\\\009return false\\\\\\\
\\\\009end\\\\\\\
end\\\\\\\
\\\\\\\
function chunk(str, size)  --Splits @str into chunks of length @size\\\\\\\
\\\\009if not size then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local num2App = size - (#str%size)\\\\\\\
\\\\009str = str..(rep(char(0), num2App) or \\\\\\\"\\\\\\\")\\\\\\\
\\\\009assert(#str%size==0)\\\\\\\
\\\\009local chunks = {}\\\\\\\
\\\\009local numChunks = #str / size\\\\\\\
\\\\009local chunk = 0\\\\\\\
\\\\009while chunk < numChunks do\\\\\\\
\\\\009\\\\009local start = chunk * size + 1\\\\\\\
        chunk = chunk+1\\\\\\\
\\\\009\\\\009if start+size-1 > #str-num2App then\\\\\\\
            if str:sub(start, #str-num2App) ~= (nil or \\\\\\\"\\\\\\\") then\\\\\\\
\\\\009\\\\009\\\\009    chunks[chunk] = str:sub(start, #str-num2App)\\\\\\\
            end\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009chunks[chunk] = str:sub(start, start+size-1)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return chunks\\\\\\\
end\\\\\\\
\\\\\\\
function find(str, match, startIndex)  --Finds @match in @str optionally after @startIndex\\\\\\\
\\\\009if not match then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local _ = startIndex or 1\\\\\\\
\\\\009local _s = nil\\\\\\\
\\\\009local _e = nil\\\\\\\
\\\\009local _len = match:len()\\\\\\\
\\\\009while true do\\\\\\\
\\\\009\\\\009local _t = str:sub( _ , _len + _ - 1)\\\\\\\
\\\\009\\\\009if _t == match then\\\\\\\
\\\\009\\\\009\\\\009_s = _\\\\\\\
\\\\009\\\\009\\\\009_e = _ + _len - 1\\\\\\\
\\\\009\\\\009\\\\009break\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009_ = _ + 1\\\\\\\
\\\\009\\\\009if _ > str:len() then break end\\\\\\\
\\\\009end\\\\\\\
\\\\009if _s == nil then return nil else return _s, _e end\\\\\\\
end\\\\\\\
\\\\\\\
function separate(str, divider)  --Separates @str on @divider\\\\\\\
\\\\009if not divider then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local start = {}\\\\\\\
\\\\009local endS = {}\\\\\\\
\\\\009local n=1\\\\\\\
\\\\009repeat\\\\\\\
\\\\009\\\\009if n==1 then\\\\\\\
\\\\009\\\\009\\\\009start[n], endS[n] = find(str, divider)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009start[n], endS[n] = find(str, divider, endS[n-1]+1)\\\\\\\
        end\\\\\\\
\\\\009\\\\009n=n+1\\\\\\\
\\\\009until start[n-1]==nil\\\\\\\
\\\\009local subs = {}\\\\\\\
\\\\009for n=1, #start+1 do\\\\\\\
\\\\009\\\\009if n==1 then\\\\\\\
\\\\009\\\\009\\\\009subs[n] = str:sub(1, start[n]-1)\\\\\\\
\\\\009\\\\009elseif n==#start+1 then\\\\\\\
\\\\009\\\\009\\\\009subs[n] = str:sub(endS[n-1]+1)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009subs[n] = str:sub(endS[n-1]+1, start[n]-1)\\\\\\\
        end\\\\\\\
\\\\009end\\\\\\\
\\\\009return subs\\\\\\\
end\\\\\\\
\\\\\\\
function replace(str, from, to)  --Replaces @from to @to in @str\\\\\\\
\\\\009if not from then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local pcs = seperate(str, from)\\\\\\\
\\\\009str = pcs[1]\\\\\\\
\\\\009for n=2,#pcs do\\\\\\\
\\\\009\\\\009str = str..to..pcs[n]\\\\\\\
\\\\009end\\\\\\\
\\\\009return str\\\\\\\
end\\\\\\\
\\\\\\\
function jumble(str)  --Jumbles @str\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local chars = {}\\\\\\\
\\\\009for i = 1, #str do\\\\\\\
\\\\009\\\\009chars[i] = str:sub(i, i)\\\\\\\
\\\\009end\\\\\\\
\\\\009local usedNums = \\\\\\\":\\\\\\\"\\\\\\\
\\\\009local res = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009local rand = 0\\\\\\\
\\\\009for i=1, #chars do\\\\\\\
\\\\009\\\\009while true do\\\\\\\
\\\\009\\\\009\\\\009rand = math.random(#chars)\\\\\\\
\\\\009\\\\009\\\\009if find(usedNums, \\\\\\\":\\\\\\\"..rand..\\\\\\\":\\\\\\\") == nil then break end\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009res = res..chars[rand]\\\\\\\
\\\\009\\\\009usedNums = usedNums..rand..\\\\\\\":\\\\\\\"\\\\\\\
\\\\009end\\\\\\\
\\\\009return res\\\\\\\
end\\\\\\\
\\\\\\\
function toBase(str, base)  --Encodes @str in @base\\\\\\\
\\\\009if not base then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local res = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for i = 1, str:len() do\\\\\\\
\\\\009\\\\009if i == 1 then\\\\\\\
\\\\009\\\\009\\\\009res = basen(str:byte(i), base)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009res = res..\\\\\\\":\\\\\\\"..basen(str:byte(i), base)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return res\\\\\\\
end\\\\\\\
\\\\\\\
function fromBase(str, base)  --Decodes @str from @base\\\\\\\
\\\\009if not base then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local bytes = seperate(str, \\\\\\\":\\\\\\\")\\\\\\\
\\\\009local res = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for i = 1, #bytes do\\\\\\\
\\\\009\\\\009res = res..(string.char(basen(tonumber(bytes[i], base), 10)))\\\\\\\
\\\\009end\\\\\\\
\\\\009return res\\\\\\\
end\\\\\\\
\\\\\\\
function toBinary(str)  --Encodes @str in binary\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return toBase(str, 2)\\\\\\\
end\\\\\\\
\\\\\\\
function fromBinary(str)  --Decodes @str from binary\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return fromBase(str, 2)\\\\\\\
end\\\\\\\
\\\\\\\
function toOctal(str)  --Encodes @str in octal\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return toBase(str, 8)\\\\\\\
end\\\\\\\
\\\\\\\
function fromOctal(str)  --Decodes @str from octal\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return fromBase(str, 8)\\\\\\\
end\\\\\\\
\\\\\\\
function toHex(str)  --Encodes @str in hex\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return toBase(str, 16)\\\\\\\
end\\\\\\\
\\\\\\\
function fromHex(str)  --Decodes @str from hex\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return fromBase(str, 16)\\\\\\\
end\\\\\\\
\\\\\\\
function toBase36(str)  --Encodes @str in Base36\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return toBase(str, 36)\\\\\\\
end\\\\\\\
\\\\\\\
function fromBase36(str)  --Decodes @str from Base36\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009return fromBase(str, 36)\\\\\\\
end\\\\\\\
\\\\\\\
function toBase32(str)  --Encodes @str in Base32\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local byte=0\\\\\\\
\\\\009local bits=0\\\\\\\
\\\\009local rez=\\\\\\\"\\\\\\\"\\\\\\\
\\\\009local i=0\\\\\\\
\\\\009for i = 1, str:len() do\\\\\\\
\\\\009\\\\009byte=byte*256+str:byte(i)\\\\\\\
\\\\009\\\\009bits=bits+8\\\\\\\
\\\\009\\\\009repeat\\\\\\\
\\\\009\\\\009\\\\009bits=bits-5\\\\\\\
\\\\009\\\\009\\\\009local mul=(2^(bits))\\\\\\\
\\\\009\\\\009\\\\009local b32n=math.floor(byte/mul)\\\\\\\
\\\\009\\\\009\\\\009byte=byte-(b32n*mul)\\\\\\\
\\\\009\\\\009\\\\009b32n=b32n+1\\\\\\\
\\\\009\\\\009\\\\009rez=rez..string.sub(base32,b32n,b32n)\\\\\\\
\\\\009\\\\009until bits<5\\\\\\\
\\\\009end\\\\\\\
\\\\009if bits>0 then\\\\\\\
\\\\009\\\\009local b32n= math.fmod(byte*(2^(5-bits)),32)\\\\\\\
\\\\009\\\\009b32n=b32n+1\\\\\\\
\\\\009\\\\009rez=rez..string.sub(base32,b32n,b32n)\\\\\\\
\\\\009end\\\\\\\
\\\\009return rez\\\\\\\
end\\\\\\\
\\\\\\\
function fromBase32(str)  --Decodes @str from Base32\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local b32n=0\\\\\\\
\\\\009local bits=0\\\\\\\
\\\\009local rez=\\\\\\\"\\\\\\\"\\\\\\\
\\\\009local i=0\\\\\\\
\\\\009string.gsub(str:upper(), \\\\\\\"[\\\\\\\"..base32..\\\\\\\"]\\\\\\\", function (char)\\\\\\\
\\\\009\\\\009local num = string.find(base32, char, 1, true)\\\\\\\
\\\\009\\\\009b32n=b32n*32+(num - 1)\\\\\\\
\\\\009\\\\009bits=bits+5\\\\\\\
\\\\009\\\\009while  bits>=8 do\\\\\\\
\\\\009\\\\009\\\\009bits=bits-8\\\\\\\
\\\\009\\\\009\\\\009local mul=(2^(bits))\\\\\\\
\\\\009\\\\009\\\\009local byte = math.floor(b32n/mul)\\\\\\\
\\\\009\\\\009\\\\009b32n=b32n-(byte*mul)\\\\\\\
\\\\009\\\\009\\\\009rez=rez..string.char(byte)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end)\\\\\\\
\\\\009return rez\\\\\\\
end\\\\\\\
\\\\\\\
function toBase64(str)  --Encodes @str in Base64\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local bytes = {}\\\\\\\
\\\\009local result = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for spos=0,str:len()-1,3 do\\\\\\\
\\\\009\\\\009for byte=1,3 do bytes[byte] = str:byte(spos+byte) or 0 end\\\\\\\
\\\\009\\\\009result = string.format('%s%s%s%s%s',result,Base64.base64chars[Base64.rsh(bytes[1],2)],Base64.base64chars[Base64.lor(Base64.lsh((bytes[1] % 4),4), Base64.rsh(bytes[2],4))] or \\\\\\\"=\\\\\\\",((str:len()-spos) > 1) and Base64.base64chars[Base64.lor(Base64.lsh(bytes[2] % 16,2), Base64.rsh(bytes[3],6))] or \\\\\\\"=\\\\\\\",((str:len()-spos) > 2) and Base64.base64chars[(bytes[3] % 64)] or \\\\\\\"=\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009return result\\\\\\\
end\\\\\\\
\\\\\\\
function fromBase64(str)  --Decodes @str from Base64\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local chars = {}\\\\\\\
\\\\009local result=\\\\\\\"\\\\\\\"\\\\\\\
\\\\009for dpos=0,str:len()-1,4 do\\\\\\\
\\\\009\\\\009for char=1,4 do chars[char] = Base64.base64bytes[(str:sub((dpos+char),(dpos+char)) or \\\\\\\"=\\\\\\\")] end\\\\\\\
\\\\009\\\\009result = string.format('%s%s%s%s',result,string.char(Base64.lor(Base64.lsh(chars[1],2), Base64.rsh(chars[2],4))),(chars[3] ~= nil) and string.char(Base64.lor(Base64.lsh(chars[2],4), Base64.rsh(chars[3],2))) or \\\\\\\"\\\\\\\",(chars[4] ~= nil) and string.char(Base64.lor(Base64.lsh(chars[3],6) % 192, (chars[4]))) or \\\\\\\"\\\\\\\")\\\\\\\
\\\\009end\\\\\\\
\\\\009return result\\\\\\\
end\\\\\\\
\\\\\\\
function rot13(str)  --Rot13s @str\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local rot = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009local len = str:len()\\\\\\\
\\\\009for i = 1, len do\\\\\\\
\\\\009\\\\009local k = str:byte(i)\\\\\\\
\\\\009\\\\009if (k >= 65 and k <= 77) or (k >= 97 and k <=109) then\\\\\\\
\\\\009\\\\009\\\\009rot = rot..string.char(k+13)\\\\\\\
\\\\009\\\\009elseif (k >= 78 and k <= 90) or (k >= 110 and k <= 122) then\\\\\\\
\\\\009\\\\009\\\\009rot = rot..string.char(k-13)\\\\\\\
\\\\009\\\\009else\\\\\\\
\\\\009\\\\009\\\\009rot = rot..string.char(k)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009end\\\\\\\
\\\\009return rot\\\\\\\
end\\\\\\\
\\\\\\\
function rot47(str)  --Rot47s @str\\\\\\\
\\\\009if not str then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local rot = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for i = 1, str:len() do\\\\\\\
\\\\009\\\\009local p = str:byte(i)\\\\\\\
\\\\009\\\\009if p >= string.byte('!') and p <= string.byte('O') then\\\\\\\
\\\\009\\\\009\\\\009p = ((p + 47) % 127)\\\\\\\
\\\\009\\\\009elseif p >= string.byte('P') and p <= string.byte('~') then\\\\\\\
\\\\009\\\\009\\\\009p = ((p - 47) % 127)\\\\\\\
\\\\009\\\\009end\\\\\\\
\\\\009\\\\009rot = rot..string.char(p)\\\\\\\
\\\\009end\\\\\\\
\\\\009return rot\\\\\\\
end\\\\\\\
\\\\\\\
function SHA1(str) --Returns SHA1 Hash of @str\\\\\\\
    if not str then return nil end\\\\\\\
    str = tostring(str)\\\\\\\
    local H0,H1,H2,H3,H4 = 0x67452301,0xEFCDAB89,0x98BADCFE,0x10325476,0xC3D2E1F0\\\\\\\
    local msg_len_in_bits = #str * 8\\\\\\\
    local first_append = char(0x80)\\\\\\\
    local non_zero_message_bytes = #str +1 +8\\\\\\\
    local current_mod = non_zero_message_bytes % 64\\\\\\\
    local second_append = current_mod>0 and rep(char(0), 64 - current_mod) or \\\\\\\"\\\\\\\"\\\\\\\
    local B1, R1 = modf(msg_len_in_bits  / 0x01000000)\\\\\\\
    local B2, R2 = modf( 0x01000000 * R1 / 0x00010000)\\\\\\\
    local B3, R3 = modf( 0x00010000 * R2 / 0x00000100)\\\\\\\
    local B4\\\\009  =\\\\0090x00000100 * R3\\\\\\\
    local L64 = char( 0) .. char( 0) .. char( 0) .. char( 0)\\\\\\\
            .. char(B1) .. char(B2) .. char(B3) .. char(B4)\\\\\\\
    str = str .. first_append .. second_append .. L64\\\\\\\
    assert(#str % 64 == 0)\\\\\\\
    local chunks = #str / 64\\\\\\\
    local W = { }\\\\\\\
    local start, A, B, C, D, E, f, K, TEMP\\\\\\\
    local chunk = 0\\\\\\\
    while chunk < chunks do\\\\\\\
        start,chunk = chunk * 64 + 1,chunk + 1\\\\\\\
        for t = 0, 15 do\\\\\\\
            W[t] = tSHA1.bytes_to_w32(str:byte(start, start + 3))\\\\\\\
            start = start + 4\\\\\\\
        end\\\\\\\
        for t = 16, 79 do\\\\\\\
            W[t] = tSHA1.w32_rot(1, tSHA1.w32_xor_n(W[t-3], W[t-8], W[t-14], W[t-16]))\\\\\\\
        end\\\\\\\
        A,B,C,D,E = H0,H1,H2,H3,H4\\\\\\\
        for t = 0, 79 do\\\\\\\
            if t <= 19 then\\\\\\\
                f = tSHA1.w32_or(tSHA1.w32_and(B, C), tSHA1.w32_and(tSHA1.w32_not(B), D))\\\\\\\
                K = 0x5A827999\\\\\\\
            elseif t <= 39 then\\\\\\\
                f = tSHA1.w32_xor_n(B, C, D)\\\\\\\
                K = 0x6ED9EBA1\\\\\\\
            elseif t <= 59 then\\\\\\\
                f = tSHA1.w32_or3(tSHA1.w32_and(B, C), tSHA1.w32_and(B, D), tSHA1.w32_and(C, D))\\\\\\\
                K = 0x8F1BBCDC\\\\\\\
            else\\\\\\\
                f = tSHA1.w32_xor_n(B, C, D)\\\\\\\
                K = 0xCA62C1D6\\\\\\\
            end\\\\\\\
            A,B,C,D,E = tSHA1.w32_add_n(tSHA1.w32_rot(5, A), f, E, W[t], K),\\\\\\\
            A, tSHA1.w32_rot(30, B), C, D\\\\\\\
        end\\\\\\\
        H0,H1,H2,H3,H4 = tSHA1.w32_add(H0, A),tSHA1.w32_add(H1, B),tSHA1.w32_add(H2, C),tSHA1.w32_add(H3, D),tSHA1.w32_add(H4, E)\\\\\\\
    end\\\\\\\
    local f = tSHA1.w32_to_hexstring\\\\\\\
    return f(H0) .. f(H1) .. f(H2) .. f(H3) .. f(H4)\\\\\\\
end\\\\\\\
\\\\\\\
function CRC32(str) --Returns CRC32 Hash of @str\\\\\\\
    local crc, l, i = 0xFFFFFFFF, string.len(str)\\\\\\\
    for i = 1, l, 1 do\\\\\\\
        crc = bit.bxor(bit.brshift(crc, 8), CRC.crc32[bit.band(bit.bxor(crc, string.byte(str, i)), 0xFF) + 1])\\\\\\\
    end\\\\\\\
    return bit.bxor(crc, -1)\\\\\\\
end\\\\\\\
\\\\\\\
function FCS16(str) --Returns FCS16 Hash of @str\\\\\\\
    local i\\\\\\\
    local l=string.len(str)\\\\\\\
    local uFcs16 = 65535\\\\\\\
    for i = 1,l do\\\\\\\
        uFcs16 = bit.bxor(bit.brshift(uFcs16,8), FCS[\\\\\\\"16\\\\\\\"][bit.band(bit.bxor(uFcs16, string.byte(str,i)), 255)])\\\\\\\
    end\\\\\\\
    return  bit.bxor(uFcs16, 65535)\\\\\\\
end\\\\\\\
\\\\\\\
function FCS32(str) --Returns FCS32 Hash of @str\\\\\\\
    local i\\\\\\\
    local l = string.len(str)\\\\\\\
    local uFcs32 = -1\\\\\\\
    for i=1,l do\\\\\\\
        uFcs32 = bit.bxor(bit.brshift(uFcs32,8), FCS[\\\\\\\"32\\\\\\\"][bit.band(bit.bxor(uFcs32, string.byte(str,i)), 255)])\\\\\\\
    end\\\\\\\
    return bit.bnot(uFcs32)\\\\\\\
end\\\\\\\
\\\\\\\
function encrypt(str, key)  --Encrypts @str with @key\\\\\\\
\\\\009if not key then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local alphabet = \\\\\\\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\\\\\]^_abcdefghijklmnopqrstuvwxyz{|}~\\\\\\\"\\\\\\\
\\\\009local _rand = math.random(#alphabet-10)\\\\\\\
\\\\009local iv = string.sub(jumble(alphabet), _rand, _rand  + 9)\\\\\\\
\\\\009iv = jumble(iv)\\\\\\\
\\\\009str = iv..str\\\\\\\
\\\\009local key = SHA1(key)\\\\\\\
\\\\009local strLen = str:len()\\\\\\\
\\\\009local keyLen = key:len()\\\\\\\
\\\\009local j=1\\\\\\\
\\\\009local result = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for i=1, strLen do\\\\\\\
\\\\009\\\\009local ordStr = string.byte(str:sub(i,i))\\\\\\\
\\\\009\\\\009if j == keyLen then j=1 end\\\\\\\
\\\\009\\\\009local ordKey = string.byte(key:sub(j,j))\\\\\\\
\\\\009\\\\009result = result..string.reverse(basen(ordStr+ordKey, 36))\\\\\\\
\\\\009\\\\009j = j+1\\\\\\\
\\\\009end\\\\\\\
\\\\009return result\\\\\\\
end\\\\\\\
\\\\\\\
function decrypt(str, key)  --Decrypts @str with @key\\\\\\\
\\\\009if not key then return nil end\\\\\\\
\\\\009str = tostring(str)\\\\\\\
\\\\009local key = SHA1(key)\\\\\\\
\\\\009local strLen = str:len()\\\\\\\
\\\\009local keyLen = key:len()\\\\\\\
\\\\009local j=1\\\\\\\
\\\\009local result = \\\\\\\"\\\\\\\"\\\\\\\
\\\\009for i=1, strLen, 2 do\\\\\\\
\\\\009\\\\009local ordStr = basen(tonumber(string.reverse(str:sub(i, i+1)),36),10)\\\\\\\
\\\\009\\\\009if j==keyLen then j=1 end\\\\\\\
\\\\009\\\\009local ordKey = string.byte(key:sub(j,j))\\\\\\\
\\\\009\\\\009result = result..string.char(ordStr-ordKey)\\\\\\\
\\\\009\\\\009j = j+1\\\\\\\
\\\\009end\\\\\\\
\\\\009return result:sub(11)\\\\\\\
end\\\\\\\
\\\\\\\
function setRandSeed(seed)  --Sets random seed to @seed\\\\\\\
\\\\009math.randomseed(seed)\\\\\\\
end\\\\\\\
\\\\\\\
\\\\\\\
--\\\\\\\
-- MODIFIED CODE FROM TESSERACT LIES BELOW. \\\\\\\
--\\\\\\\
\\\\\\\
\\\\\\\
function traverseKey(array, text)\\\\\\\
 for k,v in pairs(array) do\\\\\\\
  if v == text then\\\\\\\
   return true, k\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false, nil\\\\\\\
end\\\\\\\
\\\\\\\
function traverseValue(array, text)\\\\\\\
 for k,v in pairs(array) do\\\\\\\
  if k == text then\\\\\\\
   return true, v\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false, nil\\\\\\\
end\\\\\\\
\\\\\\\
function findKey(array, text)\\\\\\\
 for k,v in pairs(array) do\\\\\\\
  if k == text then\\\\\\\
   return true, k\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false, nil\\\\\\\
end\\\\\\\
\\\\\\\
function findValue(array, text)\\\\\\\
 for k,v in pairs(array) do\\\\\\\
  if v == text then\\\\\\\
   return true, v\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false, nil\\\\\\\
end\\\\\\\
\\\\\\\
function queryKey(array, text)\\\\\\\
 for k,v in pairs(array) do\\\\\\\
  if string.find(k, text) then\\\\\\\
   return true, k\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false, nil\\\\\\\
end\\\\\\\
\\\\\\\
function queryValue(array, text)\\\\\\\
 for k,v in pairs(array) do\\\\\\\
  if string.find(v, text) then\\\\\\\
   return true, v\\\\\\\
  end\\\\\\\
 end\\\\\\\
 return false, nil\\\\\\\
end\\\\\\\
\\\\\\\
function iterateFileLines(path)\\\\\\\
 if not fs.exists(path) then return nil end\\\\\\\
 local handle = fs.open(path, fs.AF_READ)\\\\\\\
 local commands = {}\\\\\\\
 local line = handle.readLine()\\\\\\\
 while line do\\\\\\\
  commands[#commands + 1] = line\\\\\\\
  line = handle.readLine()\\\\\\\
 end\\\\\\\
 handle.close()\\\\\\\
 return commands\\\\\\\
end\\\\\\\
\\\\\\\
function readFile(path)\\\\\\\
 if not fs.exists(path) then return nil end\\\\\\\
 local handle = fs.open(path, fs.AF_READ)\\\\\\\
 local content = handle.readAll()\\\\\\\
 handle.close()\\\\\\\
 return content\\\\\\\
end\\\\\\\
]]\\\\\\\
persist(\\\\\\\"stdlib\\\\\\\", libcode)\\\\\\\
\\\\\\\
return 1\\\"\",\
  \"F:libuser.2.so\",\
  \"\\\"local libcode = [[\\\\\\\
CONSTANT_LINE = \\\\\\\"---------------------------------------------------\\\\\\\"\\\\\\\
\\\\\\\
--MenuAPI functions (mprint, drawBootMenu) by 1Ridav and MelnikovSM\\\\\\\
--Context menu provided generously by MasonCipher\\\\\\\
local function mprint(array, this, s1, s2, x, y)\\\\\\\
   local c = term.getTextColor()\\\\\\\
   term.setTextColor(colors.lightGray)\\\\\\\
   for i = 1, #array do\\\\\\\
      term.setCursorPos(x, y)\\\\\\\
      --Check if option selected\\\\\\\
      if i == this then \\\\\\\
      --Option selected   \\\\\\\
         write(s1)\\\\\\\
      else \\\\\\\
      --Option NOT selected\\\\\\\
         write(s2)\\\\\\\
      end\\\\\\\
      --Print the string\\\\\\\
      print(array[i])\\\\\\\
      y = y + 1 \\\\\\\
   end\\\\\\\
   term.setTextColor(c)\\\\\\\
end\\\\\\\
\\\\\\\
local function stdoutg(text, bg, fg)\\\\\\\
 local a = term.getBackgroundColor()\\\\\\\
 local b = term.getTextColor()\\\\\\\
 term.setBackgroundColor(bg or colors.black)\\\\\\\
 term.setTextColor(fg or colors.white)\\\\\\\
 write(text)\\\\\\\
 term.setBackgroundColor(a)\\\\\\\
 term.setTextColor(b)\\\\\\\
end\\\\\\\
\\\\\\\
function clearScreen(color)\\\\\\\
 term.setBackgroundColor(color or colors.black)\\\\\\\
 term.clear()\\\\\\\
 term.setCursorPos(1,1)\\\\\\\
end\\\\\\\
\\\\\\\
function button(text, x1, x2, y)\\\\\\\
 term.setCursorPos(x1, y)\\\\\\\
 print(text)\\\\\\\
 local a, b, xx, yy = os.pullEvent(\\\\\\\"mouse_click\\\\\\\")\\\\\\\
 if (xx >= x1 and xx <= x2 and yy == y) then\\\\\\\
  return true\\\\\\\
 else\\\\\\\
  return false\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function counter(text, y)\\\\\\\
 for i=1,100 do\\\\\\\
  sleep(0.1)\\\\\\\
  term.setCursorPos(1, y)\\\\\\\
  print(text..\\\\\\\" [\\\\\\\"..tostring(i)..\\\\\\\"%]\\\\\\\")\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function drawProgress(txt, y)\\\\\\\
 term.setCursorPos(4, 4)\\\\\\\
 print(txt)\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 print(\\\\\\\"[                             ]\\\\\\\")\\\\\\\
 term.setCursorPos(2, y)\\\\\\\
 textutils.slowPrint(\\\\\\\"==============================]\\\\\\\", 10)\\\\\\\
end\\\\\\\
\\\\\\\
function drawProgressBig(color)\\\\\\\
 term.setCursorPos(4, 10)\\\\\\\
 print(\\\\\\\"\\\\\\\\#-------------------------------------------\\\\\\\\#\\\\\\\")\\\\\\\
 term.setCursorPos(4, 11)\\\\\\\
 print(\\\\\\\"|                                           |\\\\\\\")\\\\\\\
 term.setCursorPos(4, 12)\\\\\\\
 print(\\\\\\\"\\\\\\\\#-------------------------------------------\\\\\\\\#\\\\\\\")\\\\\\\
 term.setBackgroundColor(color or colors.yellow)\\\\\\\
 term.setCursorPos(5, 11)\\\\\\\
 textutils.slowWrite(\\\\\\\"                                           \\\\\\\", 10)\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\
end\\\\\\\
\\\\\\\
function printColoredTextLine(y, txt, bg, fg)\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\\\\\
 term.write(\\\\\\\"                                                   \\\\\\\")\\\\\\\
 term.setCursorPos(1, y)\\\\\\\
 term.setTextColor(fg or colors.black)\\\\\\\
 print(txt)\\\\\\\
 term.setBackgroundColor(colors.black)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
function outputInfo(header, msg)\\\\\\\
 term.setTextColor(colors.cyan)\\\\\\\
 write(header..\\\\\\\": \\\\\\\")\\\\\\\
 term.setTextColor(colors.lightGray)\\\\\\\
 print(msg)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
function outputWarning(header, msg)\\\\\\\
 term.setTextColor(colors.red)\\\\\\\
 write(header..\\\\\\\": \\\\\\\")\\\\\\\
 term.setTextColor(colors.orange)\\\\\\\
 print(msg)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
function outputSuccess(header, msg)\\\\\\\
 term.setTextColor(colors.lime)\\\\\\\
 write(header..\\\\\\\": \\\\\\\")\\\\\\\
 term.setTextColor(colors.green)\\\\\\\
 print(msg)\\\\\\\
 term.setTextColor(colors.white)\\\\\\\
end\\\\\\\
\\\\\\\
function request(req)\\\\\\\
 while true do\\\\\\\
  term.setTextColor(colors.cyan)\\\\\\\
  write(req .. \\\\\\\"? \\\\\\\")\\\\\\\
  term.setTextColor(colors.lightGray)\\\\\\\
  write(\\\\\\\"(\\\\\\\")\\\\\\\
  term.setTextColor(colors.lime)\\\\\\\
  write(\\\\\\\"Y\\\\\\\")\\\\\\\
  term.setTextColor(colors.lightGray)\\\\\\\
  write(\\\\\\\"/\\\\\\\")\\\\\\\
  term.setTextColor(colors.red)\\\\\\\
  write(\\\\\\\"N\\\\\\\")\\\\\\\
  term.setTextColor(colors.lightGray)\\\\\\\
  write(\\\\\\\") \\\\\\\")\\\\\\\
  local presel=read()\\\\\\\
  if presel==\\\\\\\"Y\\\\\\\" or presel==\\\\\\\"y\\\\\\\" then\\\\\\\
   return true\\\\\\\
  elseif presel==\\\\\\\"N\\\\\\\" or presel==\\\\\\\"n\\\\\\\" then\\\\\\\
   return false\\\\\\\
  end\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function drawImg(path, x, y)\\\\\\\
 if fs.exists(path) and not fs.isDir(path) then\\\\\\\
  local img = paintutils.loadImage(path)\\\\\\\
  paintutils.drawImage(img, x, y)\\\\\\\
 else\\\\\\\
  gui.outputWarning(\\\\\\\"gui\\\\\\\", \\\\\\\"image not found\\\\\\\")\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function drawDialogBox(prompt)\\\\\\\
 drawImg(\\\\\\\"/system/res/dialog_box.img\\\\\\\", 1, 1)\\\\\\\
 term.setCursorPos(6,7)\\\\\\\
 term.setBackgroundColor(colors.white)\\\\\\\
 term.setTextColor(colors.black)\\\\\\\
 print(prompt)\\\\\\\
end\\\\\\\
\\\\\\\
function drawDialogButton(text, newline)\\\\\\\
 stdoutg(text, colors.gray, colors.white)\\\\\\\
 if newline then\\\\\\\
  stdoutg(\\\\\\\"\\\\\\\\n\\\\\\\", colors.gray, colors.white)\\\\\\\
 else\\\\\\\
  stdoutg(\\\\\\\" \\\\\\\", colors.gray, colors.white)\\\\\\\
 end\\\\\\\
end\\\\\\\
\\\\\\\
function printColored(text, color)\\\\\\\
 local tmp = term.getTextColor()\\\\\\\
 term.setTextColor(color)\\\\\\\
 print(text)\\\\\\\
 term.setTextColor(tmp)\\\\\\\
end\\\\\\\
\\\\\\\
function drawBootMenu(array, state1, state2, pos_x, pos_y)\\\\\\\
   local select = 1\\\\\\\
   local x, y = term.getCursorPos()\\\\\\\
   \\\\\\\
   while true do\\\\\\\
      term.setCursorPos(x, y)\\\\\\\
      mprint(array, select, state1, state2, pos_x, pos_y)\\\\\\\
      event, key = os.pullEvent(\\\\\\\"key\\\\\\\")\\\\\\\
      --Enter\\\\\\\
      if key == 28 then \\\\\\\
         return select \\\\\\\
      end\\\\\\\
      \\\\\\\
      if #array > 1 then\\\\\\\
         --Arrow UP or W key\\\\\\\
         if key == 200 or key == 17 then \\\\\\\
      \\\\009\\\\009    select = select - 1 \\\\\\\
\\\\009\\\\009\\\\009\\\\\\\
            if select < 1 then \\\\\\\
               select = #array \\\\\\\
            end\\\\\\\
         --Arrow Down or S key\\\\\\\
         elseif key == 208 or key == 31 then \\\\\\\
      \\\\009\\\\009    select = select + 1     \\\\\\\
        \\\\009\\\\009\\\\009 if select > #array then select = 1 end\\\\\\\
  \\\\009      end\\\\\\\
      end   \\\\\\\
   end\\\\\\\
end\\\\\\\
\\\\\\\
function drawContextMenu(...)\\\\\\\
  if #arg < 3 or type(arg[3]) ~= \\\\\\\"table\\\\\\\" then error(\\\\\\\"Usage: UI.drawContextMenu(number x, number y, table Element1, table Element2, table Element3...) \\\\\\\\nReturns: string Action \\\\\\\\n<Element> structure: {string Name[, boolean isElementHidden][,number colorOfText]}\\\\\\\") end\\\\\\\
  local xSize, ySize = term.getSize()\\\\\\\
   \\\\\\\
  local function text(x,y,text1,color)\\\\\\\
    term.setTextColor(color)\\\\\\\
    term.setCursorPos(x,y)\\\\\\\
    term.write(text1)\\\\\\\
  end\\\\\\\
   \\\\\\\
  local Objects = {}\\\\\\\
  local function newObj(name,isHidden,xStart,xEnd,y)\\\\\\\
    Objects[name]={}\\\\\\\
    Objects[name][\\\\\\\"isHidden\\\\\\\"] = isHidden\\\\\\\
    Objects[name][\\\\\\\"xStart\\\\\\\"] = xStart\\\\\\\
    Objects[name][\\\\\\\"xEnd\\\\\\\"] = xEnd\\\\\\\
    Objects[name][\\\\\\\"y\\\\\\\"] = y\\\\\\\
  end\\\\\\\
       \\\\\\\
  local theLongestElement = #arg[3][1]\\\\\\\
  for i=3,#arg do\\\\\\\
    if arg[i] ~= \\\\\\\"-\\\\\\\" and theLongestElement < #arg[i][1] then\\\\\\\
      theLongestElement = #arg[i][1]\\\\\\\
    end\\\\\\\
  end\\\\\\\
   \\\\\\\
  local xSizeOfMenu = theLongestElement + 4\\\\\\\
  local ySizeOfMenu = #arg-2\\\\\\\
 \\\\\\\
  local xStartToDisplay = nil\\\\\\\
  local yStartToDisplay = nil\\\\\\\
     \\\\\\\
  local function square(x1,y1,width,height,color)\\\\\\\
    local string = string.rep(\\\\\\\" \\\\\\\",width)\\\\\\\
    term.setBackgroundColor(color)\\\\\\\
    for y=y1,(y1+height-1) do\\\\\\\
      term.setCursorPos(x1,y)\\\\\\\
      term.write(string)\\\\\\\
    end\\\\\\\
  end\\\\\\\
  \\\\\\\
  local function drawSeparator(x,y,size)\\\\\\\
    term.setTextColor(colors.lightGray)\\\\\\\
    term.setCursorPos(x,y)\\\\\\\
    term.write(string.rep(\\\\\\\"-\\\\\\\",size))\\\\\\\
  end\\\\\\\
  \\\\\\\
  local function drawMenu(xMenu,yMenu)\\\\\\\
    if yMenu+ySizeOfMenu - 1  >= ySize then yMenu = yMenu - (yMenu+ySizeOfMenu - 1 - ySize) - 1 end\\\\\\\
    if xMenu+xSizeOfMenu - 1  >= xSize then xMenu = xMenu - (xMenu+xSizeOfMenu - 1 - xSize) - 1 end\\\\\\\
    xStartToDisplay = xMenu + 2\\\\\\\
    yStartToDisplay = yMenu\\\\\\\
    square(xMenu+1,yMenu+1,xSizeOfMenu,ySizeOfMenu,colors.gray)\\\\\\\
    square(xMenu,yMenu,xSizeOfMenu,ySizeOfMenu,colors.white)\\\\\\\
    for i=3,#arg do\\\\\\\
      if arg[i] ~= \\\\\\\"-\\\\\\\" then\\\\\\\
        local contextColor = colors.black\\\\\\\
        if arg[i][2] == nil and arg[i][3] == nil then\\\\\\\
          contextColor = colors.black\\\\\\\
        elseif arg[i][2] == false and arg[i][3] == nil then\\\\\\\
          contextColor = colors.black\\\\\\\
        elseif arg[i][2] == false and arg[i][3] ~= nil then\\\\\\\
          contextColor = arg[i][3]\\\\\\\
        elseif arg[i][2] == true then\\\\\\\
          contextColor = colors.lightGray\\\\\\\
        end\\\\\\\
        text(xStartToDisplay,yStartToDisplay+i-3,arg[i][1],contextColor)\\\\\\\
        newObj(arg[i][1],arg[i][2],xMenu,xMenu+xSizeOfMenu-1,yStartToDisplay+i-3)\\\\\\\
      else\\\\\\\
        drawSeparator(xMenu,yStartToDisplay+i-3,xSizeOfMenu)\\\\\\\
      end\\\\\\\
    end\\\\\\\
  end\\\\\\\
  drawMenu(arg[1],arg[2])\\\\\\\
  local event,side,xClick,yClick = os.pullEvent()\\\\\\\
  if event == \\\\\\\"monitor_touch\\\\\\\" then side = 1 end\\\\\\\
  if event == \\\\\\\"mouse_click\\\\\\\" or event == \\\\\\\"monitor_touch\\\\\\\" then\\\\\\\
    for key,val in pairs(Objects) do\\\\\\\
      if xClick >= Objects[key][\\\\\\\"xStart\\\\\\\"] and xClick <= Objects[key][\\\\\\\"xEnd\\\\\\\"] and yClick == Objects[key][\\\\\\\"y\\\\\\\"] and Objects[key][\\\\\\\"isHidden\\\\\\\"] == false or xClick >= Objects[key][\\\\\\\"xStart\\\\\\\"] and xClick <= Objects[key][\\\\\\\"xEnd\\\\\\\"] and yClick == Objects[key][\\\\\\\"y\\\\\\\"] and Objects[key][\\\\\\\"isHidden\\\\\\\"] == nil then\\\\\\\
        for i=Objects[key][\\\\\\\"xStart\\\\\\\"],Objects[key][\\\\\\\"xEnd\\\\\\\"] do\\\\\\\
          paintutils.drawPixel(i,Objects[key][\\\\\\\"y\\\\\\\"],colors.blue)\\\\\\\
        end\\\\\\\
        text(xStartToDisplay,Objects[key][\\\\\\\"y\\\\\\\"],key,colors.white)\\\\\\\
        sleep(0.3)\\\\\\\
        return key\\\\\\\
      end\\\\\\\
    end\\\\\\\
  end\\\\\\\
end\\\\\\\
]]\\\\\\\
persist(\\\\\\\"UI\\\\\\\", libcode)\\\\\\\
\\\\\\\
return 1\\\"\",\
}",
  "F:link-formatter",
  "\"local tArgs = {...}\\\
\\\
local cryptonym = tArgs[1]\\\
\\\
print(\\\"ENS Link Formatter v1.1\\\")\\\
print(\\\"(c) NSPC/EASG, 2361\\\")\\\
\"",
  "F:link-formatter",
  [ 21 ] = "F:startup",
  [ 22 ] = "\"local bootConfigDefaults = {}\\\
bootConfigDefaults.script = \\\"Orbital\\\"\\\
\\\
local function boot_handleBootElement(str)\\\
   local s1 = \\\"                                           \\\"\\\
   local n1 = s1:len()\\\
   local n2 = str:len()\\\
   local s2 = string.sub(s1, 1, n1-n2)\\\
   return \\\" \\\"..str..s2..\\\" \\\"\\\
end\\\
\\\
local function boot_mprint(array, this, x, y, h, g)\\\
   local c1 = term.getBackgroundColor()\\\
   local c2 = term.getTextColor()\\\
   term.setTextColor(colors.lightGray)\\\
   for i = 1, #array do\\\
      term.setCursorPos(x, y)\\\
      --Check if option selected\\\
      if i == this then \\\
      --Option selected   \\\
         term.setBackgroundColor(h)\\\
         term.setTextColor(g)\\\
      else \\\
      --Option NOT selected \\\
         term.setBackgroundColor(g)\\\
         term.setTextColor(h)\\\
      end\\\
      --Print the string\\\
      term.write(boot_handleBootElement(array[i]))\\\
      y = y + 1 \\\
   end\\\
   term.setBackgroundColor(c1)\\\
   term.setTextColor(c2)\\\
end\\\
\\\
local function boot_drawBootMenu(array, pos_x, pos_y, highlight, generic)\\\
   local select = 1\\\
   local x, y = term.getCursorPos()\\\
   \\\
   while true do\\\
      term.setCursorPos(x, y)\\\
      boot_mprint(array, select, pos_x, pos_y, highlight, generic)\\\
      event, key = os.pullEvent(\\\"key\\\")\\\
      --Enter\\\
      if key == 28 then \\\
         return select \\\
      end\\\
      \\\
      if #array > 1 then\\\
         --Arrow UP or W key\\\
         if key == 200 or key == 17 then \\\
      \\009\\009    select = select - 1 \\\
\\009\\009\\009\\\
            if select < 1 then \\\
               select = #array \\\
            end\\\
         --Arrow Down or S key\\\
         elseif key == 208 or key == 31 then \\\
      \\009\\009    select = select + 1     \\\
        \\009\\009\\009 if select > #array then select = 1 end\\\
  \\009      end\\\
      end   \\\
   end\\\
end\\\
\\\
local function boot_printColoredTextLine(y, txt, bg, fg)\\\
 term.setCursorPos(1, y)\\\
 term.setBackgroundColor(bg or colors.lightGray)\\\
 term.write(\\\"                                                   \\\")\\\
 term.setCursorPos(1, y)\\\
 term.setTextColor(fg or colors.black)\\\
 print(txt)\\\
 term.setBackgroundColor(colors.black)\\\
 term.setTextColor(colors.white)\\\
end\\\
\\\
local function drawBootManager(opt)\\\
    term.setBackgroundColor(colors.black)\\\
    term.clear()\\\
    term.setCursorPos(1,1)\\\
\\009if not opt then\\\
        boot_printColoredTextLine(2, \\\"             Orbital Boot Manager v1.0             \\\", colors.lightGray, colors.black)\\\
        boot_printColoredTextLine(18, \\\" F2=ESI Setup                                      \\\", colors.lightGray, colors.black)\\\
\\009else\\\
        boot_printColoredTextLine(2, \\\"             Orbital Boot Manager v2.1             \\\", colors.red, colors.black)\\\
        boot_printColoredTextLine(18, \\\" CTRL+R=Reboot                                     \\\", colors.red, colors.black)\\\
\\009end\\\
end\\\
\\\
rawset(_G, \\\"__declare\\\", function(g, v)\\\
 return rawset(_G, g, v)\\\
end)\\\
\\\
__declare(\\\"__declare_api\\\", function(a, g, v)\\\
 return rawset(_G[a], g, v)\\\
end)\\\
\\\
__declare(\\\"__try\\\", function(f, e)\\\
local r = {pcall(f)}\\\
if table.remove(r, 1) == true then\\\
 return unpack(r)\\\
else\\\
 if e ~= nil then\\\
  e(unpack(r))\\\
 else\\\
  return __kstop(0x0000FFFF, unpack(r))\\\
 end\\\
end\\\
end)\\\
\\\
local sr = shell.run\\\
\\\
local esiTable = {}\\\
esiTable.ROMStructure = function(t)\\\
 if t == _G then\\\
  return setmetatable({}, {\\\
   __index = t,\\\
   __newindex = function(table, key, value)\\\
    __kstop(0x00000004, table, key, value)\\\
   end,\\\
   __metatable = {}\\\
  })\\\
 else\\\
  return setmetatable({}, {\\\
   __index = t,\\\
   __newindex = function(table, key, value)\\\
    __kstop(0x00000005, table, key, value)\\\
   end,\\\
   __metatable = {}\\\
  })\\\
 end\\\
end\\\
esiTable.LoadBootConfig = function()\\\
 if not fs.exists(\\\"/boot/bootConfig.dat\\\") then\\\
  return nil\\\
 end\\\
 local lf = fs.open(\\\"/boot/bootConfig.dat\\\", \\\"r\\\")\\\
 local contents = lf.readAll()\\\
 lf.close()\\\
 return textutils.unserialize(contents) \\\
end\\\
esiTable.SaveBootConfig = function(cTable)\\\
 local sf = fs.open(\\\"/boot/bootConfig.dat\\\", \\\"w\\\")\\\
 sf.write(textutils.serialize(cTable))\\\
 sf.close()\\\
 return true\\\
end\\\
esiTable.InitializeScript = function()\\\
__declare(\\\"RunInternal\\\", function(m)\\\
 dofile(\\\"/boot/modules/\\\"..m..\\\".b\\\")\\\
end)\\\
__declare(\\\"RunMap\\\", function(m)\\\
 sr(\\\"/boot/\\\"..m..\\\".map\\\")\\\
end)\\\
__declare(\\\"UserMode\\\", function(null)\\\
 sr(\\\"/system/bin/sh\\\")\\\
end)\\\
__declare(\\\"Boot\\\", function(k)\\\
 dofile(\\\"/boot/kernel/\\\"..k)\\\
end)\\\
__declare(\\\"RunExternal\\\", function(f)\\\
 dofile(\\\"/boot/\\\"..f)\\\
end)\\\
end\\\
esiTable.FinalizeScript = function()\\\
__declare(\\\"RunInternal\\\", nil)\\\
__declare(\\\"RunMap\\\", nil)\\\
__declare(\\\"UserMode\\\", nil)\\\
__declare(\\\"Boot\\\", nil)\\\
__declare(\\\"RunExternal\\\", nil)\\\
__declare_api(\\\"ESI\\\", \\\"InitializeScript\\\", nil)\\\
__declare_api(\\\"ESI\\\", \\\"FinalizeScript\\\", nil)\\\
__declare_api(\\\"ESI\\\", \\\"RunScript\\\", nil)\\\
end\\\
esiTable.RunScript = function(s)\\\
 sr(\\\"/boot/\\\"..s..\\\".script\\\")\\\
end\\\
\\\
__declare(\\\"ESI\\\", esiTable)\\\
\\\
local function handleRegionMouseInput(xx, yy, x1, x2, y1, y2)\\\
 y0 = y2 or y1\\\
 if (xx >= x1 and xx <= x2) then\\\
  if (yy >= y1 and yy <= y0) then\\\
   return true\\\
  elseif yy == y1 or yy == y0 then\\\
   return true\\\
  end\\\
 end\\\
 return false\\\
end\\\
\\\
__declare_api(\\\"peripheral\\\", \\\"handleMouseInput\\\", function(...)\\\
 local tArgs = {...}\\\
 if #tArgs < 1 then\\\
  error(\\\"usage: handleMouseInput(<table describing the minX, maxX, minY and maxY positions of a button>, [more tables like this]\\\")\\\
 else\\\
  while true do\\\
   sleep(0.01)\\\
   local a, b, x, y = os.pullEvent(\\\"mouse_click\\\")\\\
   sleep(0.01)\\\
   for k,v in ipairs(tArgs) do\\\
    local minX = v[1]\\\
\\009local maxX = v[2]\\\
\\009local minY = v[3]\\\
\\009local maxY = v[4] or v[3]\\\
    if handleRegionMouseInput(x, y, minX, maxX, minY, maxY) then\\\
     return k\\\
    end\\\
   end\\\
  end\\\
 end\\\
end)\\\
\\\
ESI.InitializeScript()\\\
\\\
if not fs.isDir(\\\"/boot\\\") or not fs.isDir(\\\"/boot/modules\\\") or not fs.exists(\\\"/boot/bootConfig.dat\\\") or not loadfile(\\\"/boot/bcd/orbital\\\") or not loadfile(\\\"/boot/modules/esiboot.b\\\") then\\\
    if fs.exists(\\\"/SKIP_ESI_CHECKS\\\") then ESI.RunScript(\\\"Orbital\\\") end\\\
    drawBootManager(true)\\\
    term.setBackgroundColor(colors.black)\\\
    term.setTextColor(colors.red)\\009\\\
\\009term.setCursorPos(2,4)\\\
\\009print(\\\"The Orbital Boot Manager was unable to boot the\\\")\\\
\\009term.setCursorPos(2,5)\\\
\\009print(\\\"operating system.\\\")\\\
\\009term.setCursorPos(2,7)\\\
\\009print(\\\"Status:\\\")\\\
\\009term.setCursorPos(2,8)\\\
\\009print(\\\"ESI_BINARIES_INVALID (0x00000002)\\\")\\\
\\009term.setCursorPos(2,10)\\\
\\009print(\\\"Information:\\\")\\\
\\009term.setCursorPos(2,11)\\\
\\009print(\\\"One or more ESI files are missing.\\\")\\\
\\009term.setCursorPos(2,12)\\\
\\009print(\\\"Please re-install the operating system.\\\")\\\
    while true do\\\
\\009    sleep(1)\\\
\\009end\\\
end\\\
\\\
local conf = ESI.LoadBootConfig()\\\
\\\
if not conf then\\\
    ESI.SaveBootConfig(bootConfigDefaults)\\\
    drawBootManager(true)\\\
    term.setBackgroundColor(colors.black)\\\
    term.setTextColor(colors.red)\\009\\\
\\009term.setCursorPos(2,4)\\\
\\009print(\\\"The Orbital Boot Manager was unable to continue\\\")\\\
\\009term.setCursorPos(2,5)\\\
\\009print(\\\"the booting process.\\\")\\\
\\009term.setCursorPos(2,7)\\\
\\009print(\\\"Status:\\\")\\\
\\009term.setCursorPos(2,8)\\\
\\009print(\\\"ESI_CONFIGURATION_MISSING (0x00000001)\\\")\\\
\\009term.setCursorPos(2,10)\\\
\\009print(\\\"Information:\\\")\\\
\\009term.setCursorPos(2,11)\\\
\\009print(\\\"The /boot/bootConfig.dat file is missing.\\\")\\\
\\009term.setCursorPos(2,12)\\\
\\009print(\\\"A default file will be generated after rebooting.\\\")\\\
    while true do\\\
\\009    sleep(1)\\\
\\009end\\\
end\\\
\\\
local secondsPast = 0\\\
local timerID = os.startTimer( 1 )\\\
\\\
drawBootManager(false)\\\
term.setBackgroundColor(colors.black)\\\
term.setTextColor(colors.lightGray)\\009\\\
term.setCursorPos(2,16)\\\
print(\\\"Booting ESI...\\\")\\\
\\\
while true do\\\
 local event, value = os.pullEvent()\\\
 if event == \\\"timer\\\" and value == timerID then\\\
  secondsPast = secondsPast + 1 -- Increment secondsPast by one, a second has passed\\\
  if secondsPast == 3 then\\\
   break\\\
  else\\\
   timerID = os.startTimer( 1 )\\\
  end\\\
 elseif event == \\\"key\\\" and value == 60 then\\\
  break\\\
 end\\\
end\\\
\\\
if secondsPast == 3 then\\\
 ESI.RunScript(\\\"Orbital\\\")\\\
else\\\
 RunInternal \\\"esiconfig\\\"\\\
end\"",
  [ 23 ] = "D:system",
  [ 24 ] = "{\
  \"D:app\",\
  \"{\\\
  \\\"F:BootOptions\\\",\\\
  \\\"\\\\\\\"local w, h = term.getSize()\\\\\\\\\\\\\\\
local window = GUI.Window:new({w = w; h = h;})\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local CheckBox1 = GUI.Checkbox:new({x = 4; y = 8; text = \\\\\\\\\\\\\\\"Enable auto-completion in console\\\\\\\\\\\\\\\"; checked = settings.get(\\\\\\\\\\\\\\\"shell.autocomplete\\\\\\\\\\\\\\\");})\\\\\\\\\\\\\\\
local CheckBox2 = GUI.Checkbox:new({x = 4; y = 10; text = \\\\\\\\\\\\\\\"Enable auto-completion in Lua interpreter\\\\\\\\\\\\\\\"; checked = settings.get(\\\\\\\\\\\\\\\"lua.autocomplete\\\\\\\\\\\\\\\");})\\\\\\\\\\\\\\\
local CheckBox3 = GUI.Checkbox:new({x = 4; y = 12; text = \\\\\\\\\\\\\\\"List hidden files\\\\\\\\\\\\\\\"; checked = settings.get(\\\\\\\\\\\\\\\"list.show_hidden\\\\\\\\\\\\\\\");})\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local commit = function(self)\\\\\\\\\\\\\\\
    settings.set(\\\\\\\\\\\\\\\"shell.autocomplete\\\\\\\\\\\\\\\", CheckBox1.checked)\\\\\\\\\\\\\\\
    settings.set(\\\\\\\\\\\\\\\"lua.autocomplete\\\\\\\\\\\\\\\", CheckBox2.checked)\\\\\\\\\\\\\\\
    settings.set(\\\\\\\\\\\\\\\"list.show_hidden\\\\\\\\\\\\\\\", CheckBox3.checked)\\\\\\\\\\\\\\\
    settings.save( \\\\\\\\\\\\\\\".settings\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
\\\\\\\\009self.parent:close()\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
GUI.Controller:addWindow(window)\\\\\\\\\\\\\\\
window:setTitleLabel(GUI.Label:new({text = \\\\\\\\\\\\\\\"Terminal Options\\\\\\\\\\\\\\\"; textColor = colors.white; textAlign = \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\
--window:addComponent(GUI.Button:new({x = 1; y = 1; w = 1; h = 1; action = (function(self) self.parent:close() end); textColor = colors.red; bgColor = window.tlColor; text = \\\\\\\\\\\\\\\"X\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
window:addComponent(GUI.Label:new({x = 4; y = 4; text = \\\\\\\\\\\\\\\"The following options regulate the behaviour\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\\\\\\\\\
window:addComponent(GUI.Label:new({x = 4; y = 5; text = \\\\\\\\\\\\\\\"of the Orbital Terminal. Mark the checkboxes\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\\\\\\\\\
window:addComponent(GUI.Label:new({x = 4; y = 6; text = \\\\\\\\\\\\\\\"corresponding with options you wish to enable.\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\\\\\\\\\
window:addComponent(CheckBox1)\\\\\\\\\\\\\\\
window:addComponent(CheckBox2)\\\\\\\\\\\\\\\
window:addComponent(CheckBox3)\\\\\\\\\\\\\\\
window:addComponent(GUI.Button:new({x = 35; y = 16; action = commit; text = \\\\\\\\\\\\\\\"Commit Options\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
GUI.Controller:startUpdateCycle()\\\\\\\"\\\",\\\
  \\\"F:PowerManagement.app\\\",\\\
  \\\"\\\\\\\"UI.clearScreen(colors.black)\\\\\\\\\\\\\\\
UI.drawDialogBox(\\\\\\\\\\\\\\\"Please choose preferred shutdown action. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
term.setCursorPos(6,11)\\\\\\\\\\\\\\\
UI.drawDialogButton(\\\\\\\\\\\\\\\"< Shutdown >  \\\\\\\\\\\\\\\") -- 6 17\\\\\\\\\\\\\\\
UI.drawDialogButton(\\\\\\\\\\\\\\\"< Reboot >  \\\\\\\\\\\\\\\") -- 20 29\\\\\\\\\\\\\\\
UI.drawDialogButton(\\\\\\\\\\\\\\\"< ESI Setup >\\\\\\\\\\\\\\\") -- 32 44\\\\\\\\\\\\\\\
local ch1 = peripheral.handleMouseInput({6,17,11},{20,29,11},{32,44,11})\\\\\\\\\\\\\\\
if ch1 == 1 then\\\\\\\\\\\\\\\
 os.shutdown()\\\\\\\\\\\\\\\
elseif ch1 == 2 then\\\\\\\\\\\\\\\
 os.reboot()\\\\\\\\\\\\\\\
elseif ch1 == 3 then\\\\\\\\\\\\\\\
 UI.clearScreen()\\\\\\\\\\\\\\\
end\\\\\\\"\\\",\\\
  \\\"F:TerminalOptions.app\\\",\\\
  \\\"\\\\\\\"local w, h = term.getSize()\\\\\\\\\\\\\\\
local window = GUI.Window:new({w = w; h = h;})\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local CheckBox1 = GUI.Checkbox:new({x = 4; y = 8; text = \\\\\\\\\\\\\\\"Enable auto-completion in console\\\\\\\\\\\\\\\"; checked = settings.get(\\\\\\\\\\\\\\\"shell.autocomplete\\\\\\\\\\\\\\\");})\\\\\\\\\\\\\\\
local CheckBox2 = GUI.Checkbox:new({x = 4; y = 10; text = \\\\\\\\\\\\\\\"Enable auto-completion in Lua interpreter\\\\\\\\\\\\\\\"; checked = settings.get(\\\\\\\\\\\\\\\"lua.autocomplete\\\\\\\\\\\\\\\");})\\\\\\\\\\\\\\\
local CheckBox3 = GUI.Checkbox:new({x = 4; y = 12; text = \\\\\\\\\\\\\\\"List hidden files\\\\\\\\\\\\\\\"; checked = settings.get(\\\\\\\\\\\\\\\"list.show_hidden\\\\\\\\\\\\\\\");})\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local commit = function(self)\\\\\\\\\\\\\\\
    settings.set(\\\\\\\\\\\\\\\"shell.autocomplete\\\\\\\\\\\\\\\", CheckBox1.checked)\\\\\\\\\\\\\\\
    settings.set(\\\\\\\\\\\\\\\"lua.autocomplete\\\\\\\\\\\\\\\", CheckBox2.checked)\\\\\\\\\\\\\\\
    settings.set(\\\\\\\\\\\\\\\"list.show_hidden\\\\\\\\\\\\\\\", CheckBox3.checked)\\\\\\\\\\\\\\\
    settings.save( \\\\\\\\\\\\\\\".settings\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
\\\\\\\\009self.parent:close()\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
GUI.Controller:addWindow(window)\\\\\\\\\\\\\\\
window:setTitleLabel(GUI.Label:new({text = \\\\\\\\\\\\\\\"Terminal Options\\\\\\\\\\\\\\\"; textColor = colors.white; textAlign = \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\
--window:addComponent(GUI.Button:new({x = 1; y = 1; w = 1; h = 1; action = (function(self) self.parent:close() end); textColor = colors.red; bgColor = window.tlColor; text = \\\\\\\\\\\\\\\"X\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
window:addComponent(GUI.Label:new({x = 4; y = 4; text = \\\\\\\\\\\\\\\"The following options regulate the behaviour\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\\\\\\\\\
window:addComponent(GUI.Label:new({x = 4; y = 5; text = \\\\\\\\\\\\\\\"of the Orbital Terminal. Mark the checkboxes\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\\\\\\\\\
window:addComponent(GUI.Label:new({x = 4; y = 6; text = \\\\\\\\\\\\\\\"corresponding with options you wish to enable.\\\\\\\\\\\\\\\"; textAlign = \\\\\\\\\\\\\\\"left\\\\\\\\\\\\\\\"; bgColor = colors.lightGray;}))\\\\\\\\\\\\\\\
window:addComponent(CheckBox1)\\\\\\\\\\\\\\\
window:addComponent(CheckBox2)\\\\\\\\\\\\\\\
window:addComponent(CheckBox3)\\\\\\\\\\\\\\\
window:addComponent(GUI.Button:new({x = 35; y = 16; action = commit; text = \\\\\\\\\\\\\\\"Commit Options\\\\\\\\\\\\\\\";}))\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
GUI.Controller:startUpdateCycle()\\\\\\\"\\\",\\\
  \\\"F:TextEdit.app\\\",\\\
  \\\"\\\\\\\"-- Get file to edit\\\\\\\\\\\\\\\
local tArgs = { ... }\\\\\\\\\\\\\\\
if #tArgs == 0 then\\\\\\\\\\\\\\\
    print( \\\\\\\\\\\\\\\"Usage: edit <path>\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    return\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Error checking\\\\\\\\\\\\\\\
local sPath = shell.resolve( tArgs[1] )\\\\\\\\\\\\\\\
local bReadOnly = fs.isReadOnly( sPath )\\\\\\\\\\\\\\\
if fs.exists( sPath ) and fs.isDir( sPath ) then\\\\\\\\\\\\\\\
    print( \\\\\\\\\\\\\\\"Cannot edit a directory.\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    return\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Create .txt files by default\\\\\\\\\\\\\\\
if not fs.exists( sPath ) and not string.find( sPath, \\\\\\\\\\\\\\\"%.\\\\\\\\\\\\\\\" ) then\\\\\\\\\\\\\\\
    sPath = sPath .. \\\\\\\\\\\\\\\".txt\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local x,y = 1,1\\\\\\\\\\\\\\\
local w,h = term.getSize()\\\\\\\\\\\\\\\
local scrollX, scrollY = 0,0\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tLines = {}\\\\\\\\\\\\\\\
local bRunning = true\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Colours\\\\\\\\\\\\\\\
local highlightColour, keywordColour, commentColour, textColour, bgColour, stringColour\\\\\\\\\\\\\\\
if term.isColour() then\\\\\\\\\\\\\\\
    bgColour = colours.white\\\\\\\\\\\\\\\
    textColour = colours.black\\\\\\\\\\\\\\\
    highlightColour = colours.black\\\\\\\\\\\\\\\
    keywordColour = colours.black\\\\\\\\\\\\\\\
    commentColour = colours.black\\\\\\\\\\\\\\\
    stringColour = colours.black\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Menus\\\\\\\\\\\\\\\
local bMenu = false\\\\\\\\\\\\\\\
local nMenuItem = 1\\\\\\\\\\\\\\\
local tMenuItems = {}\\\\\\\\\\\\\\\
if not bReadOnly then\\\\\\\\\\\\\\\
    table.insert( tMenuItems, \\\\\\\\\\\\\\\"Save\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
if shell.openTab then\\\\\\\\\\\\\\\
    table.insert( tMenuItems, \\\\\\\\\\\\\\\"Run\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
if peripheral.find( \\\\\\\\\\\\\\\"printer\\\\\\\\\\\\\\\" ) then\\\\\\\\\\\\\\\
    table.insert( tMenuItems, \\\\\\\\\\\\\\\"Print\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
table.insert( tMenuItems, \\\\\\\\\\\\\\\"Exit\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local sStatus = \\\\\\\\\\\\\\\"Press Ctrl to access menu\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
if string.len( sStatus ) > w - 5 then\\\\\\\\\\\\\\\
    sStatus = \\\\\\\\\\\\\\\"Press Ctrl for menu\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function load( _sPath )\\\\\\\\\\\\\\\
    tLines = {}\\\\\\\\\\\\\\\
    if fs.exists( _sPath ) then\\\\\\\\\\\\\\\
        local file = io.open( _sPath, \\\\\\\\\\\\\\\"r\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
        local sLine = file:read()\\\\\\\\\\\\\\\
        while sLine do\\\\\\\\\\\\\\\
            table.insert( tLines, sLine )\\\\\\\\\\\\\\\
            sLine = file:read()\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        file:close()\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
    if #tLines == 0 then\\\\\\\\\\\\\\\
        table.insert( tLines, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function save( _sPath )\\\\\\\\\\\\\\\
    -- Create intervening folder\\\\\\\\\\\\\\\
    local sDir = _sPath:sub(1, _sPath:len() - fs.getName(_sPath):len() )\\\\\\\\\\\\\\\
    if not fs.exists( sDir ) then\\\\\\\\\\\\\\\
        fs.makeDir( sDir )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- Save\\\\\\\\\\\\\\\
    local file = nil\\\\\\\\\\\\\\\
    local function innerSave()\\\\\\\\\\\\\\\
        file = fs.open( _sPath, \\\\\\\\\\\\\\\"w\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
        if file then\\\\\\\\\\\\\\\
            for n, sLine in ipairs( tLines ) do\\\\\\\\\\\\\\\
                file.write( sLine .. \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            error( \\\\\\\\\\\\\\\"Failed to open \\\\\\\\\\\\\\\".._sPath )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
    local ok, err = pcall( innerSave )\\\\\\\\\\\\\\\
    if file then \\\\\\\\\\\\\\\
        file.close()\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return ok, err\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tKeywords = {\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"and\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"break\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"do\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"else\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"elseif\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"end\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"for\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"if\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"in\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"local\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"nil\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"not\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"or\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"repeat\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"return\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"then\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"until\\\\\\\\\\\\\\\"]= true,\\\\\\\\\\\\\\\
    [\\\\\\\\\\\\\\\"while\\\\\\\\\\\\\\\"] = true,\\\\\\\\\\\\\\\
}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function tryWrite( sLine, regex, colour )\\\\\\\\\\\\\\\
    local match = string.match( sLine, regex )\\\\\\\\\\\\\\\
    if match then\\\\\\\\\\\\\\\
        if type(colour) == \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            term.setTextColour( colour )\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            term.setTextColour( colour(match) )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        term.write( match )\\\\\\\\\\\\\\\
        term.setTextColour( textColour )\\\\\\\\\\\\\\\
        return string.sub( sLine, string.len(match) + 1 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function writeHighlighted( sLine )\\\\\\\\\\\\\\\
    while string.len(sLine) > 0 do    \\\\\\\\\\\\\\\
        sLine = \\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^%-%-%[%[.-%]%]\\\\\\\\\\\\\\\", commentColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^%-%-.*\\\\\\\\\\\\\\\", commentColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", stringColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".-[^\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\]\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", stringColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\", stringColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^\\\\\\\\\\\\\\\\'.-[^\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\]\\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\", stringColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^%[%[.-%]%]\\\\\\\\\\\\\\\", stringColour ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^[%w_]+\\\\\\\\\\\\\\\", function( match )\\\\\\\\\\\\\\\
                if tKeywords[ match ] then\\\\\\\\\\\\\\\
                    return keywordColour\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                return textColour\\\\\\\\\\\\\\\
            end ) or\\\\\\\\\\\\\\\
            tryWrite( sLine, \\\\\\\\\\\\\\\"^[^%w_]\\\\\\\\\\\\\\\", textColour )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tCompletions\\\\\\\\\\\\\\\
local nCompletion\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tCompleteEnv = _ENV\\\\\\\\\\\\\\\
local function complete( sLine )\\\\\\\\\\\\\\\
    return nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function recomplete()\\\\\\\\\\\\\\\
    local sLine = tLines[y]\\\\\\\\\\\\\\\
    if not bMenu and not bReadOnly and x == string.len(sLine) + 1 then\\\\\\\\\\\\\\\
        tCompletions = complete( sLine )\\\\\\\\\\\\\\\
        if tCompletions and #tCompletions > 0 then\\\\\\\\\\\\\\\
            nCompletion = 1\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            nCompletion = nil\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
        tCompletions = nil\\\\\\\\\\\\\\\
        nCompletion = nil\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function writeCompletion( sLine )\\\\\\\\\\\\\\\
    if nCompletion then\\\\\\\\\\\\\\\
        local sCompletion = tCompletions[ nCompletion ]\\\\\\\\\\\\\\\
        term.setTextColor( colours.white )\\\\\\\\\\\\\\\
        term.setBackgroundColor( colours.grey )\\\\\\\\\\\\\\\
        term.write( sCompletion )\\\\\\\\\\\\\\\
        term.setTextColor( textColour )\\\\\\\\\\\\\\\
        term.setBackgroundColor( bgColour )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function redrawText()\\\\\\\\\\\\\\\
    local cursorX, cursorY = x, y\\\\\\\\\\\\\\\
    for y=1,h-1 do\\\\\\\\\\\\\\\
        term.setCursorPos( 1 - scrollX, y )\\\\\\\\\\\\\\\
        term.clearLine()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        local sLine = tLines[ y + scrollY ]\\\\\\\\\\\\\\\
        if sLine ~= nil then\\\\\\\\\\\\\\\
            writeHighlighted( sLine )\\\\\\\\\\\\\\\
            if cursorY == y and cursorX == #sLine + 1 then\\\\\\\\\\\\\\\
                writeCompletion()\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    term.setCursorPos( x - scrollX, y - scrollY )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function redrawLine(_nY)\\\\\\\\\\\\\\\
    local sLine = tLines[_nY]\\\\\\\\\\\\\\\
    if sLine then\\\\\\\\\\\\\\\
        term.setCursorPos( 1 - scrollX, _nY - scrollY )\\\\\\\\\\\\\\\
        term.clearLine()\\\\\\\\\\\\\\\
        writeHighlighted( sLine )\\\\\\\\\\\\\\\
        if _nY == y and x == #sLine + 1 then\\\\\\\\\\\\\\\
            writeCompletion()\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        term.setCursorPos( x - scrollX, _nY - scrollY )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function redrawMenu()\\\\\\\\\\\\\\\
    -- Clear line\\\\\\\\\\\\\\\
    term.setCursorPos( 1, h )\\\\\\\\\\\\\\\
    term.clearLine()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- Draw line numbers\\\\\\\\\\\\\\\
    term.setCursorPos( w - string.len( \\\\\\\\\\\\\\\"Ln \\\\\\\\\\\\\\\"..y ) + 1, h )\\\\\\\\\\\\\\\
    term.setTextColour( highlightColour )\\\\\\\\\\\\\\\
    term.write( \\\\\\\\\\\\\\\"Ln \\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    term.setTextColour( textColour )\\\\\\\\\\\\\\\
    term.write( y )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    term.setCursorPos( 1, h )\\\\\\\\\\\\\\\
    if bMenu then\\\\\\\\\\\\\\\
        -- Draw menu\\\\\\\\\\\\\\\
        term.setTextColour( textColour )\\\\\\\\\\\\\\\
        for nItem,sItem in pairs( tMenuItems ) do\\\\\\\\\\\\\\\
            if nItem == nMenuItem then\\\\\\\\\\\\\\\
                term.setTextColour( highlightColour )\\\\\\\\\\\\\\\
                term.write( \\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
                term.setTextColour( textColour )\\\\\\\\\\\\\\\
                term.write( sItem )\\\\\\\\\\\\\\\
                term.setTextColour( highlightColour )\\\\\\\\\\\\\\\
                term.write( \\\\\\\\\\\\\\\"]\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
                term.setTextColour( textColour )\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                term.write( \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"..sItem..\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
        -- Draw status\\\\\\\\\\\\\\\
        term.setTextColour( highlightColour )\\\\\\\\\\\\\\\
        term.write( sStatus )\\\\\\\\\\\\\\\
        term.setTextColour( textColour )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- Reset cursor\\\\\\\\\\\\\\\
    term.setCursorPos( x - scrollX, y - scrollY )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tMenuFuncs = { \\\\\\\\\\\\\\\
    Save = function()\\\\\\\\\\\\\\\
        if bReadOnly then\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"Access denied\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            local ok, err = save( sPath )\\\\\\\\\\\\\\\
            if ok then\\\\\\\\\\\\\\\
                sStatus=\\\\\\\\\\\\\\\"Saved to \\\\\\\\\\\\\\\"..sPath\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                sStatus=\\\\\\\\\\\\\\\"Error saving to \\\\\\\\\\\\\\\"..sPath\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        redrawMenu()\\\\\\\\\\\\\\\
    end,\\\\\\\\\\\\\\\
    Print = function()\\\\\\\\\\\\\\\
        local printer = peripheral.find( \\\\\\\\\\\\\\\"printer\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
        if not printer then\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"No printer attached\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            return\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        local nPage = 0\\\\\\\\\\\\\\\
        local sName = fs.getName( sPath )\\\\\\\\\\\\\\\
        if printer.getInkLevel() < 1 then\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"Printer out of ink\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            return\\\\\\\\\\\\\\\
        elseif printer.getPaperLevel() < 1 then\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"Printer out of paper\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            return\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        local screenTerminal = term.current()\\\\\\\\\\\\\\\
        local printerTerminal = {\\\\\\\\\\\\\\\
            getCursorPos = printer.getCursorPos,\\\\\\\\\\\\\\\
            setCursorPos = printer.setCursorPos,\\\\\\\\\\\\\\\
            getSize = printer.getPageSize,\\\\\\\\\\\\\\\
            write = printer.write,\\\\\\\\\\\\\\\
        }\\\\\\\\\\\\\\\
        printerTerminal.scroll = function()\\\\\\\\\\\\\\\
            if nPage == 1 then\\\\\\\\\\\\\\\
                printer.setPageTitle( sName..\\\\\\\\\\\\\\\" (page \\\\\\\\\\\\\\\"..nPage..\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\" )            \\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
            \\\\\\\\\\\\\\\
            while not printer.newPage()    do\\\\\\\\\\\\\\\
                if printer.getInkLevel() < 1 then\\\\\\\\\\\\\\\
                    sStatus = \\\\\\\\\\\\\\\"Printer out of ink, please refill\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
                elseif printer.getPaperLevel() < 1 then\\\\\\\\\\\\\\\
                    sStatus = \\\\\\\\\\\\\\\"Printer out of paper, please refill\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
                else\\\\\\\\\\\\\\\
                    sStatus = \\\\\\\\\\\\\\\"Printer output tray full, please empty\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
                term.redirect( screenTerminal )\\\\\\\\\\\\\\\
                redrawMenu()\\\\\\\\\\\\\\\
                term.redirect( printerTerminal )\\\\\\\\\\\\\\\
                \\\\\\\\\\\\\\\
                local timer = os.startTimer(0.5)\\\\\\\\\\\\\\\
                sleep(0.5)\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
            nPage = nPage + 1\\\\\\\\\\\\\\\
            if nPage == 1 then\\\\\\\\\\\\\\\
                printer.setPageTitle( sName )\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                printer.setPageTitle( sName..\\\\\\\\\\\\\\\" (page \\\\\\\\\\\\\\\"..nPage..\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        \\\\\\\\\\\\\\\
        bMenu = false\\\\\\\\\\\\\\\
        term.redirect( printerTerminal )\\\\\\\\\\\\\\\
        local ok, error = pcall( function()\\\\\\\\\\\\\\\
            term.scroll()\\\\\\\\\\\\\\\
            for n, sLine in ipairs( tLines ) do\\\\\\\\\\\\\\\
                print( sLine )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end )\\\\\\\\\\\\\\\
        term.redirect( screenTerminal )\\\\\\\\\\\\\\\
        if not ok then\\\\\\\\\\\\\\\
            print( error )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        \\\\\\\\\\\\\\\
        while not printer.endPage() do\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"Printer output tray full, please empty\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            redrawMenu()\\\\\\\\\\\\\\\
            sleep( 0.5 )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        bMenu = true\\\\\\\\\\\\\\\
            \\\\\\\\\\\\\\\
        if nPage > 1 then\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"Printed \\\\\\\\\\\\\\\"..nPage..\\\\\\\\\\\\\\\" Pages\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            sStatus = \\\\\\\\\\\\\\\"Printed 1 Page\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        redrawMenu()\\\\\\\\\\\\\\\
    end,\\\\\\\\\\\\\\\
    Exit = function()\\\\\\\\\\\\\\\
        bRunning = false\\\\\\\\\\\\\\\
    end,\\\\\\\\\\\\\\\
    Run = function()\\\\\\\\\\\\\\\
        local sTempPath = \\\\\\\\\\\\\\\"/.temp\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
        local ok, err = save( sTempPath )\\\\\\\\\\\\\\\
        if ok then\\\\\\\\\\\\\\\
            local nTask = shell.openTab( sTempPath )\\\\\\\\\\\\\\\
            if nTask then\\\\\\\\\\\\\\\
                shell.switchTab( nTask )\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                sStatus=\\\\\\\\\\\\\\\"Error starting Task\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
            fs.delete( sTempPath )\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            sStatus=\\\\\\\\\\\\\\\"Error saving to \\\\\\\\\\\\\\\"..sTempPath\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        redrawMenu()\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function doMenuItem( _n )\\\\\\\\\\\\\\\
    tMenuFuncs[tMenuItems[_n]]()\\\\\\\\\\\\\\\
    if bMenu then\\\\\\\\\\\\\\\
        bMenu = false\\\\\\\\\\\\\\\
        term.setCursorBlink( true )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    redrawMenu()\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function setCursor( newX, newY )\\\\\\\\\\\\\\\
    local oldX, oldY = x, y\\\\\\\\\\\\\\\
    x, y = newX, newY\\\\\\\\\\\\\\\
    local screenX = x - scrollX\\\\\\\\\\\\\\\
    local screenY = y - scrollY\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
    local bRedraw = false\\\\\\\\\\\\\\\
    if screenX < 1 then\\\\\\\\\\\\\\\
        scrollX = x - 1\\\\\\\\\\\\\\\
        screenX = 1\\\\\\\\\\\\\\\
        bRedraw = true\\\\\\\\\\\\\\\
    elseif screenX > w then\\\\\\\\\\\\\\\
        scrollX = x - w\\\\\\\\\\\\\\\
        screenX = w\\\\\\\\\\\\\\\
        bRedraw = true\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
    if screenY < 1 then\\\\\\\\\\\\\\\
        scrollY = y - 1\\\\\\\\\\\\\\\
        screenY = 1\\\\\\\\\\\\\\\
        bRedraw = true\\\\\\\\\\\\\\\
    elseif screenY > h-1 then\\\\\\\\\\\\\\\
        scrollY = y - (h-1)\\\\\\\\\\\\\\\
        screenY = h-1\\\\\\\\\\\\\\\
        bRedraw = true\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    recomplete()\\\\\\\\\\\\\\\
    if bRedraw then\\\\\\\\\\\\\\\
        redrawText()\\\\\\\\\\\\\\\
    elseif y ~= oldY then\\\\\\\\\\\\\\\
        redrawLine( oldY )\\\\\\\\\\\\\\\
        redrawLine( y )\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
        redrawLine( y )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    term.setCursorPos( screenX, screenY )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    redrawMenu()\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Actual program functionality begins\\\\\\\\\\\\\\\
load(sPath)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
term.setBackgroundColour( bgColour )\\\\\\\\\\\\\\\
term.clear()\\\\\\\\\\\\\\\
term.setCursorPos(x,y)\\\\\\\\\\\\\\\
term.setCursorBlink( true )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
recomplete()\\\\\\\\\\\\\\\
redrawText()\\\\\\\\\\\\\\\
redrawMenu()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function acceptCompletion()\\\\\\\\\\\\\\\
    if nCompletion then\\\\\\\\\\\\\\\
        -- Append the completion\\\\\\\\\\\\\\\
        local sCompletion = tCompletions[ nCompletion ]\\\\\\\\\\\\\\\
        tLines[y] = tLines[y] .. sCompletion\\\\\\\\\\\\\\\
        setCursor( x + string.len( sCompletion ), y )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Handle input\\\\\\\\\\\\\\\
while bRunning do\\\\\\\\\\\\\\\
    local sEvent, param, param2, param3 = os.pullEvent()\\\\\\\\\\\\\\\
    if sEvent == \\\\\\\\\\\\\\\"key\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        local oldX, oldY = x, y\\\\\\\\\\\\\\\
        if param == keys.up then\\\\\\\\\\\\\\\
            -- Up\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                if nCompletion then\\\\\\\\\\\\\\\
                    -- Cycle completions\\\\\\\\\\\\\\\
                    nCompletion = nCompletion - 1\\\\\\\\\\\\\\\
                    if nCompletion < 1 then\\\\\\\\\\\\\\\
                        nCompletion = #tCompletions\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                    redrawLine(y)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
                elseif y > 1 then\\\\\\\\\\\\\\\
                    -- Move cursor up\\\\\\\\\\\\\\\
                    setCursor(\\\\\\\\\\\\\\\
                        math.min( x, string.len( tLines[y - 1] ) + 1 ),\\\\\\\\\\\\\\\
                        y - 1\\\\\\\\\\\\\\\
                    )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.down then\\\\\\\\\\\\\\\
            -- Down\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                -- Move cursor down\\\\\\\\\\\\\\\
                if nCompletion then\\\\\\\\\\\\\\\
                    -- Cycle completions\\\\\\\\\\\\\\\
                    nCompletion = nCompletion + 1\\\\\\\\\\\\\\\
                    if nCompletion > #tCompletions then\\\\\\\\\\\\\\\
                        nCompletion = 1\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                    redrawLine(y)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
                elseif y < #tLines then\\\\\\\\\\\\\\\
                    -- Move cursor down\\\\\\\\\\\\\\\
                    setCursor(\\\\\\\\\\\\\\\
                        math.min( x, string.len( tLines[y + 1] ) + 1 ),\\\\\\\\\\\\\\\
                        y + 1\\\\\\\\\\\\\\\
                    )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.tab then\\\\\\\\\\\\\\\
            -- Tab\\\\\\\\\\\\\\\
            if not bMenu and not bReadOnly then\\\\\\\\\\\\\\\
                if nCompletion and x == string.len(tLines[y]) + 1 then\\\\\\\\\\\\\\\
                    -- Accept autocomplete\\\\\\\\\\\\\\\
                    acceptCompletion()\\\\\\\\\\\\\\\
                else\\\\\\\\\\\\\\\
                    -- Indent line\\\\\\\\\\\\\\\
                    local sLine = tLines[y]\\\\\\\\\\\\\\\
                    tLines[y] = string.sub(sLine,1,x-1) .. \\\\\\\\\\\\\\\"    \\\\\\\\\\\\\\\" .. string.sub(sLine,x)\\\\\\\\\\\\\\\
                    setCursor( x + 4, y )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.pageUp then\\\\\\\\\\\\\\\
            -- Page Up\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                -- Move up a page\\\\\\\\\\\\\\\
                local newY\\\\\\\\\\\\\\\
                if y - (h - 1) >= 1 then\\\\\\\\\\\\\\\
                    newY = y - (h - 1)\\\\\\\\\\\\\\\
                else\\\\\\\\\\\\\\\
                    newY = 1\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                setCursor(\\\\\\\\\\\\\\\
                    math.min( x, string.len( tLines[newY] ) + 1 ),\\\\\\\\\\\\\\\
                    newY\\\\\\\\\\\\\\\
                )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.pageDown then\\\\\\\\\\\\\\\
            -- Page Down\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                -- Move down a page\\\\\\\\\\\\\\\
                local newY\\\\\\\\\\\\\\\
                if y + (h - 1) <= #tLines then\\\\\\\\\\\\\\\
                    newY = y + (h - 1)\\\\\\\\\\\\\\\
                else\\\\\\\\\\\\\\\
                    newY = #tLines\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                local newX = math.min( x, string.len( tLines[newY] ) + 1 )\\\\\\\\\\\\\\\
                setCursor( newX, newY )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.home then\\\\\\\\\\\\\\\
            -- Home\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                -- Move cursor to the beginning\\\\\\\\\\\\\\\
                if x > 1 then\\\\\\\\\\\\\\\
                    setCursor(1,y)\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys[\\\\\\\\\\\\\\\"end\\\\\\\\\\\\\\\"] then\\\\\\\\\\\\\\\
            -- End\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                -- Move cursor to the end\\\\\\\\\\\\\\\
                local nLimit = string.len( tLines[y] ) + 1\\\\\\\\\\\\\\\
                if x < nLimit then\\\\\\\\\\\\\\\
                    setCursor( nLimit, y )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.left then\\\\\\\\\\\\\\\
            -- Left\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                if x > 1 then\\\\\\\\\\\\\\\
                    -- Move cursor left\\\\\\\\\\\\\\\
                    setCursor( x - 1, y )\\\\\\\\\\\\\\\
                elseif x==1 and y>1 then\\\\\\\\\\\\\\\
                    setCursor( string.len( tLines[y-1] ) + 1, y - 1 )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                -- Move menu left\\\\\\\\\\\\\\\
                nMenuItem = nMenuItem - 1\\\\\\\\\\\\\\\
                if nMenuItem < 1 then\\\\\\\\\\\\\\\
                    nMenuItem = #tMenuItems\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                redrawMenu()\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.right then\\\\\\\\\\\\\\\
            -- Right\\\\\\\\\\\\\\\
            if not bMenu then\\\\\\\\\\\\\\\
                local nLimit = string.len( tLines[y] ) + 1\\\\\\\\\\\\\\\
                if x < nLimit then\\\\\\\\\\\\\\\
                    -- Move cursor right\\\\\\\\\\\\\\\
                    setCursor( x + 1, y )\\\\\\\\\\\\\\\
                elseif nCompletion and x == string.len(tLines[y]) + 1 then\\\\\\\\\\\\\\\
                    -- Accept autocomplete\\\\\\\\\\\\\\\
                    acceptCompletion()\\\\\\\\\\\\\\\
                elseif x==nLimit and y<#tLines then\\\\\\\\\\\\\\\
                    -- Go to next line\\\\\\\\\\\\\\\
                    setCursor( 1, y + 1 )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                -- Move menu right\\\\\\\\\\\\\\\
                nMenuItem = nMenuItem + 1\\\\\\\\\\\\\\\
                if nMenuItem > #tMenuItems then\\\\\\\\\\\\\\\
                    nMenuItem = 1\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                redrawMenu()\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.delete then\\\\\\\\\\\\\\\
            -- Delete\\\\\\\\\\\\\\\
            if not bMenu and not bReadOnly then\\\\\\\\\\\\\\\
                local nLimit = string.len( tLines[y] ) + 1\\\\\\\\\\\\\\\
                if x < nLimit then\\\\\\\\\\\\\\\
                    local sLine = tLines[y]\\\\\\\\\\\\\\\
                    tLines[y] = string.sub(sLine,1,x-1) .. string.sub(sLine,x+1)\\\\\\\\\\\\\\\
                    recomplete()\\\\\\\\\\\\\\\
                    redrawLine(y)\\\\\\\\\\\\\\\
                elseif y<#tLines then\\\\\\\\\\\\\\\
                    tLines[y] = tLines[y] .. tLines[y+1]\\\\\\\\\\\\\\\
                    table.remove( tLines, y+1 )\\\\\\\\\\\\\\\
                    recomplete()\\\\\\\\\\\\\\\
                    redrawText()\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.backspace then\\\\\\\\\\\\\\\
            -- Backspace\\\\\\\\\\\\\\\
            if not bMenu and not bReadOnly then\\\\\\\\\\\\\\\
                if x > 1 then\\\\\\\\\\\\\\\
                    -- Remove character\\\\\\\\\\\\\\\
                    local sLine = tLines[y]\\\\\\\\\\\\\\\
                    if x > 4 and string.sub(sLine,x-4,x-1) == \\\\\\\\\\\\\\\"    \\\\\\\\\\\\\\\" and not string.sub(sLine, 1, x - 1):find(\\\\\\\\\\\\\\\"%S\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
                        tLines[y] = string.sub(sLine,1,x-5) .. string.sub(sLine,x)\\\\\\\\\\\\\\\
                        setCursor( x - 4, y )\\\\\\\\\\\\\\\
                    else\\\\\\\\\\\\\\\
                        tLines[y] = string.sub(sLine,1,x-2) .. string.sub(sLine,x)\\\\\\\\\\\\\\\
                        setCursor( x - 1, y )\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                elseif y > 1 then\\\\\\\\\\\\\\\
                    -- Remove newline\\\\\\\\\\\\\\\
                    local sPrevLen = string.len( tLines[y-1] )\\\\\\\\\\\\\\\
                    tLines[y-1] = tLines[y-1] .. tLines[y]\\\\\\\\\\\\\\\
                    table.remove( tLines, y )\\\\\\\\\\\\\\\
                    setCursor( sPrevLen + 1, y - 1 )\\\\\\\\\\\\\\\
                    redrawText()\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.enter then\\\\\\\\\\\\\\\
            -- Enter\\\\\\\\\\\\\\\
            if not bMenu and not bReadOnly then\\\\\\\\\\\\\\\
                -- Newline\\\\\\\\\\\\\\\
                local sLine = tLines[y]\\\\\\\\\\\\\\\
                local _,spaces=string.find(sLine,\\\\\\\\\\\\\\\"^[ ]+\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
                if not spaces then\\\\\\\\\\\\\\\
                    spaces=0\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                tLines[y] = string.sub(sLine,1,x-1)\\\\\\\\\\\\\\\
                table.insert( tLines, y+1, string.rep(' ',spaces)..string.sub(sLine,x) )\\\\\\\\\\\\\\\
                setCursor( spaces + 1, y + 1 )\\\\\\\\\\\\\\\
                redrawText()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
            elseif bMenu then\\\\\\\\\\\\\\\
                -- Menu selection\\\\\\\\\\\\\\\
                doMenuItem( nMenuItem )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif param == keys.leftCtrl or param == keys.rightCtrl or param == keys.rightAlt then\\\\\\\\\\\\\\\
            -- Menu toggle\\\\\\\\\\\\\\\
            bMenu = not bMenu\\\\\\\\\\\\\\\
            if bMenu then\\\\\\\\\\\\\\\
                term.setCursorBlink( false )\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                term.setCursorBlink( true )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
            redrawMenu()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        \\\\\\\\\\\\\\\
    elseif sEvent == \\\\\\\\\\\\\\\"char\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        if not bMenu and not bReadOnly then\\\\\\\\\\\\\\\
            -- Input text\\\\\\\\\\\\\\\
            local sLine = tLines[y]\\\\\\\\\\\\\\\
            tLines[y] = string.sub(sLine,1,x-1) .. param .. string.sub(sLine,x)\\\\\\\\\\\\\\\
            setCursor( x + 1, y )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif bMenu then\\\\\\\\\\\\\\\
            -- Select menu items\\\\\\\\\\\\\\\
            for n,sMenuItem in ipairs( tMenuItems ) do\\\\\\\\\\\\\\\
                if string.lower(string.sub(sMenuItem,1,1)) == string.lower(param) then\\\\\\\\\\\\\\\
                    doMenuItem( n )\\\\\\\\\\\\\\\
                    break\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    elseif sEvent == \\\\\\\\\\\\\\\"paste\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        if not bReadOnly then\\\\\\\\\\\\\\\
            -- Close menu if open\\\\\\\\\\\\\\\
            if bMenu then\\\\\\\\\\\\\\\
                bMenu = false\\\\\\\\\\\\\\\
                term.setCursorBlink( true )\\\\\\\\\\\\\\\
                redrawMenu()\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
            -- Input text\\\\\\\\\\\\\\\
            local sLine = tLines[y]\\\\\\\\\\\\\\\
            tLines[y] = string.sub(sLine,1,x-1) .. param .. string.sub(sLine,x)\\\\\\\\\\\\\\\
            setCursor( x + string.len( param ), y )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        \\\\\\\\\\\\\\\
    elseif sEvent == \\\\\\\\\\\\\\\"mouse_click\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        if not bMenu then\\\\\\\\\\\\\\\
            if param == 1 then\\\\\\\\\\\\\\\
                -- Left click\\\\\\\\\\\\\\\
                local cx,cy = param2, param3\\\\\\\\\\\\\\\
                if cy < h then\\\\\\\\\\\\\\\
                    local newY = math.min( math.max( scrollY + cy, 1 ), #tLines )\\\\\\\\\\\\\\\
                    local newX = math.min( math.max( scrollX + cx, 1 ), string.len( tLines[newY] ) + 1 )\\\\\\\\\\\\\\\
                    setCursor( newX, newY )\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        \\\\\\\\\\\\\\\
    elseif sEvent == \\\\\\\\\\\\\\\"mouse_scroll\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        if not bMenu then\\\\\\\\\\\\\\\
            if param == -1 then\\\\\\\\\\\\\\\
                -- Scroll up\\\\\\\\\\\\\\\
                if scrollY > 0 then\\\\\\\\\\\\\\\
                    -- Move cursor up\\\\\\\\\\\\\\\
                    scrollY = scrollY - 1\\\\\\\\\\\\\\\
                    redrawText()\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            \\\\\\\\\\\\\\\
            elseif param == 1 then\\\\\\\\\\\\\\\
                -- Scroll down\\\\\\\\\\\\\\\
                local nMaxScroll = #tLines - (h-1)\\\\\\\\\\\\\\\
                if scrollY < nMaxScroll then\\\\\\\\\\\\\\\
                    -- Move cursor down\\\\\\\\\\\\\\\
                    scrollY = scrollY + 1\\\\\\\\\\\\\\\
                    redrawText()\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                \\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    elseif sEvent == \\\\\\\\\\\\\\\"term_resize\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        w,h = term.getSize()\\\\\\\\\\\\\\\
        setCursor( x, y )\\\\\\\\\\\\\\\
        redrawMenu()\\\\\\\\\\\\\\\
        redrawText()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Cleanup\\\\\\\\\\\\\\\
term.clear()\\\\\\\\\\\\\\\
term.setCursorBlink( false )\\\\\\\\\\\\\\\
term.setCursorPos( 1, 1 )\\\\\\\"\\\",\\\
}\",\
  \"F:autorun\",\
  \"\\\"\\\"\",\
  \"D:bin\",\
  \"{\\\
  \\\"F:cat\\\",\\\
  \\\"\\\\\\\"local tArgs = {...}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if #tArgs >= 1 then\\\\\\\\\\\\\\\
 path = shell.resolve(tArgs[1])\\\\\\\\\\\\\\\
 if fs.isReadOnly(path) then\\\\\\\\\\\\\\\
  --return\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
 if not fs.exists(path) or fs.isDir(path) then\\\\\\\\\\\\\\\
  UI.outputInfo(\\\\\\\\\\\\\\\"cat\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"file does not exist\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 else\\\\\\\\\\\\\\\
  textutils.pagedPrint(stdlib.readFile(path))\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
else\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"cat\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"filename not specified\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\"\\\",\\\
  \\\"F:confdb\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
local tArgs = { ... }\\\\\\\\\\\\\\\
if #tArgs == 0 then\\\\\\\\\\\\\\\
    -- \\\\\\\\\\\\\\\"set\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    local x,y = term.getCursorPos()\\\\\\\\\\\\\\\
    local tSettings = {}\\\\\\\\\\\\\\\
\\\\\\\\009local tSetTemp = settings.getNames()\\\\\\\\\\\\\\\
    for n,sName in ipairs( tSetTemp ) do\\\\\\\\\\\\\\\
\\\\\\\\009    if sName ~= \\\\\\\\\\\\\\\"shell.allow_disk_startup\\\\\\\\\\\\\\\" and sName ~= \\\\\\\\\\\\\\\"shell.allow_startup\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            table.insert(tSettings, textutils.serialize(sName) .. \\\\\\\\\\\\\\\" = \\\\\\\\\\\\\\\" .. textutils.serialize(settings.get(sName)))\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
    textutils.pagedPrint(table.concat(tSettings,\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"),y-3)\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
elseif #tArgs == 1 then\\\\\\\\\\\\\\\
    -- \\\\\\\\\\\\\\\"set foo\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    local sName = tArgs[1]\\\\\\\\\\\\\\\
\\\\\\\\009term.setTextColor(colors.lightGray)\\\\\\\\\\\\\\\
    print( textutils.serialize(sName) .. \\\\\\\\\\\\\\\" = \\\\\\\\\\\\\\\" .. textutils.serialize(settings.get(sName)) )\\\\\\\\\\\\\\\
else\\\\\\\\\\\\\\\
    -- \\\\\\\\\\\\\\\"set foo bar\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    local sName = tArgs[1]\\\\\\\\\\\\\\\
    local sValue = tArgs[2]\\\\\\\\\\\\\\\
    local value\\\\\\\\\\\\\\\
    if sValue == \\\\\\\\\\\\\\\"true\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        value = true\\\\\\\\\\\\\\\
    elseif sValue == \\\\\\\\\\\\\\\"false\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        value = false\\\\\\\\\\\\\\\
    elseif sValue == \\\\\\\\\\\\\\\"nil\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        value = nil\\\\\\\\\\\\\\\
    elseif tonumber(sValue) then\\\\\\\\\\\\\\\
        value = tonumber(sValue)\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
        value = sValue\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    local oldValue = settings.get( sValue )\\\\\\\\\\\\\\\
    if value ~= nil then\\\\\\\\\\\\\\\
\\\\\\\\009    if sName ~= \\\\\\\\\\\\\\\"shell.allow_disk_startup\\\\\\\\\\\\\\\" and sName ~= \\\\\\\\\\\\\\\"shell.allow_startup\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            settings.set( sName, value )\\\\\\\\\\\\\\\
            UI.outputInfo( \\\\\\\\\\\\\\\"confdb\\\\\\\\\\\\\\\", textutils.serialize(sName) .. \\\\\\\\\\\\\\\" set to \\\\\\\\\\\\\\\" .. textutils.serialize(value) )\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009end\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
\\\\\\\\009    if sName ~= \\\\\\\\\\\\\\\"shell.allow_disk_startup\\\\\\\\\\\\\\\" and sName ~= \\\\\\\\\\\\\\\"shell.allow_startup\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            settings.unset( sName )\\\\\\\\\\\\\\\
            UI.outputInfo( \\\\\\\\\\\\\\\"confdb\\\\\\\\\\\\\\\", textutils.serialize(sName) .. \\\\\\\\\\\\\\\" unset\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    if value ~= oldValue then\\\\\\\\\\\\\\\
        settings.save( \\\\\\\\\\\\\\\"/system/confdb.dat\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\"\\\",\\\
  \\\"F:df\\\",\\\
  \\\"\\\\\\\"local tArgs = {...}\\\\\\\\\\\\\\\
local sz = fs.getSize(shell.dir())\\\\\\\\\\\\\\\
local fspc = fs.getFreeSpace(shell.dir())\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
UI.outputInfo(\\\\\\\\\\\\\\\"type\\\\\\\\\\\\\\\", fs.getDrive(shell.dir()))\\\\\\\\\\\\\\\
if stdlib.findValue(tArgs, \\\\\\\\\\\\\\\"-sB\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"size\\\\\\\\\\\\\\\", tostring(sz)..\\\\\\\\\\\\\\\" B\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"free space\\\\\\\\\\\\\\\", tostring(fspc)..\\\\\\\\\\\\\\\" B\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
elseif stdlib.findValue(tArgs, \\\\\\\\\\\\\\\"-sKB\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"size\\\\\\\\\\\\\\\", tostring(sz/1024)..\\\\\\\\\\\\\\\" KB\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"free space\\\\\\\\\\\\\\\", tostring(fspc/1024)..\\\\\\\\\\\\\\\" KB\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\"\\\",\\\
  \\\"F:dmesg\\\",\\\
  \\\"\\\\\\\"local logfile = stdlib.readFile(\\\\\\\\\\\\\\\"/var/darwin.log\\\\\\\\\\\\\\\") or \\\\\\\\\\\\\\\"/var/darwin.log missing or corrupt\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
textutils.pagedPrint(logfile)\\\\\\\"\\\",\\\
  \\\"F:hostname\\\",\\\
  \\\"\\\\\\\"UI.outputInfo(\\\\\\\\\\\\\\\"net\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"hostname is \\\\\\\\\\\\\\\"..os.getComputerLabel() or tostring(os.getComputerID()))\\\\\\\"\\\",\\\
  \\\"F:sh\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
local multishell = multishell\\\\\\\\\\\\\\\
local parentShell = shell\\\\\\\\\\\\\\\
local parentTerm = term.current()\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if multishell then\\\\\\\\\\\\\\\
    multishell.setTitle( multishell.getCurrent(), \\\\\\\\\\\\\\\"shell\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local bExit = false\\\\\\\\\\\\\\\
local sDir = (parentShell and parentShell.dir()) or \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
local sPath = (parentShell and parentShell.path()) or \\\\\\\\\\\\\\\".:/rom/programs\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
local tAliases = (parentShell and parentShell.aliases()) or {}\\\\\\\\\\\\\\\
local tCompletionInfo = (parentShell and parentShell.getCompletionInfo()) or {}\\\\\\\\\\\\\\\
local tProgramStack = {}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local shell = {}\\\\\\\\\\\\\\\
local function createShellEnv( sDir )\\\\\\\\\\\\\\\
    local tEnv = {}\\\\\\\\\\\\\\\
    tEnv[ \\\\\\\\\\\\\\\"shell\\\\\\\\\\\\\\\" ] = shell\\\\\\\\\\\\\\\
    tEnv[ \\\\\\\\\\\\\\\"multishell\\\\\\\\\\\\\\\" ] = multishell\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    local package = {}\\\\\\\\\\\\\\\
    package.loaded = {\\\\\\\\\\\\\\\
        _G = _G,\\\\\\\\\\\\\\\
        bit32 = bit32,\\\\\\\\\\\\\\\
        coroutine = coroutine,\\\\\\\\\\\\\\\
        math = math,\\\\\\\\\\\\\\\
        package = package,\\\\\\\\\\\\\\\
        string = string,\\\\\\\\\\\\\\\
        table = table,\\\\\\\\\\\\\\\
    }\\\\\\\\\\\\\\\
\\\\\\\\009package.standard_libraries = {}\\\\\\\\\\\\\\\
\\\\\\\\009package.standard_libraries.stdlib = \\\\\\\\\\\\\\\"/lib/libstdlua.2.so\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\009package.standard_libraries.UI = \\\\\\\\\\\\\\\"/lib/libuser.2.so\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\009package.standard_libraries.debug = \\\\\\\\\\\\\\\"/lib/libdebug.1.so\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\009package.standard_libraries.cryptlib = \\\\\\\\\\\\\\\"/lib/libcrypt.1.so\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\009package.standard_libraries.dism = \\\\\\\\\\\\\\\"/lib/libdism.1.so\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    package.path = \\\\\\\\\\\\\\\"?;?.lua;?/init.lua;/rom/modules/main/?;/rom/modules/main/?.lua;/rom/modules/main/?/init.lua\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    if turtle then\\\\\\\\\\\\\\\
        package.path = package.path..\\\\\\\\\\\\\\\";/rom/modules/turtle/?;/rom/modules/turtle/?.lua;/rom/modules/turtle/?/init.lua\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    elseif command then\\\\\\\\\\\\\\\
        package.path = package.path..\\\\\\\\\\\\\\\";/rom/modules/command/?;/rom/modules/command/?.lua;/rom/modules/command/?/init.lua\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    package.config = \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\\n;\\\\\\\\\\\\\\\\n?\\\\\\\\\\\\\\\\n!\\\\\\\\\\\\\\\\n-\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    package.preload = {}\\\\\\\\\\\\\\\
    package.loaders = {\\\\\\\\\\\\\\\
        function( name )\\\\\\\\\\\\\\\
            if package.preload[name] then\\\\\\\\\\\\\\\
                return package.preload[name]\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                return nil, \\\\\\\\\\\\\\\"no field package.preload['\\\\\\\\\\\\\\\" .. name .. \\\\\\\\\\\\\\\"']\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end,\\\\\\\\\\\\\\\
        function( name )\\\\\\\\\\\\\\\
            local fname = string.gsub(name, \\\\\\\\\\\\\\\"%.\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
            local sError = \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            for pattern in string.gmatch(package.path, \\\\\\\\\\\\\\\"[^;]+\\\\\\\\\\\\\\\") do\\\\\\\\\\\\\\\
                local sPath = string.gsub(pattern, \\\\\\\\\\\\\\\"%?\\\\\\\\\\\\\\\", fname)\\\\\\\\\\\\\\\
                if sPath:sub(1,1) ~= \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
                    sPath = fs.combine(sDir, sPath)\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                if fs.exists(sPath) and not fs.isDir(sPath) then\\\\\\\\\\\\\\\
                    local fnFile, sError = loadfile( sPath, tEnv )\\\\\\\\\\\\\\\
                    if fnFile then\\\\\\\\\\\\\\\
                        return fnFile, sPath\\\\\\\\\\\\\\\
                    else\\\\\\\\\\\\\\\
                        return nil, sError\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                else\\\\\\\\\\\\\\\
                    if #sError > 0 then\\\\\\\\\\\\\\\
                        sError = sError .. \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                    sError = sError .. \\\\\\\\\\\\\\\"no file '\\\\\\\\\\\\\\\" .. sPath .. \\\\\\\\\\\\\\\"'\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
            return nil, sError\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    }\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    local sentinel = {}\\\\\\\\\\\\\\\
    local function require( name )\\\\\\\\\\\\\\\
        if type( name ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( name ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        if package.loaded[name] == sentinel then\\\\\\\\\\\\\\\
            error(\\\\\\\\\\\\\\\"Loop detected requiring '\\\\\\\\\\\\\\\" .. name .. \\\\\\\\\\\\\\\"'\\\\\\\\\\\\\\\", 0)\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        if package.loaded[name] then\\\\\\\\\\\\\\\
            return package.loaded[name]\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        local sError = \\\\\\\\\\\\\\\"Error loading module '\\\\\\\\\\\\\\\" .. name .. \\\\\\\\\\\\\\\"':\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
        for n,searcher in ipairs(package.loaders) do\\\\\\\\\\\\\\\
            local loader, err = searcher(name)\\\\\\\\\\\\\\\
            if loader then\\\\\\\\\\\\\\\
                package.loaded[name] = sentinel\\\\\\\\\\\\\\\
                local result = loader( err )\\\\\\\\\\\\\\\
                if result ~= nil then\\\\\\\\\\\\\\\
                    package.loaded[name] = result\\\\\\\\\\\\\\\
                    return result\\\\\\\\\\\\\\\
                else\\\\\\\\\\\\\\\
                    package.loaded[name] = true\\\\\\\\\\\\\\\
                    return true\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                sError = sError .. \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\" .. err\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        error(sError, 2)\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    tEnv[\\\\\\\\\\\\\\\"package\\\\\\\\\\\\\\\"] = package\\\\\\\\\\\\\\\
    tEnv[\\\\\\\\\\\\\\\"require\\\\\\\\\\\\\\\"] = require\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    return tEnv\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Colours\\\\\\\\\\\\\\\
local promptColour, textColour, bgColour\\\\\\\\\\\\\\\
if term.isColour() then\\\\\\\\\\\\\\\
    promptColour = colours.yellow\\\\\\\\\\\\\\\
    textColour = colours.white\\\\\\\\\\\\\\\
    bgColour = colours.black\\\\\\\\\\\\\\\
else\\\\\\\\\\\\\\\
    promptColour = colours.white\\\\\\\\\\\\\\\
    textColour = colours.white\\\\\\\\\\\\\\\
    bgColour = colours.black\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function run( _sCommand, ... )\\\\\\\\\\\\\\\
    local sPath = shell.resolveProgram( _sCommand )\\\\\\\\\\\\\\\
    if sPath ~= nil then\\\\\\\\\\\\\\\
        tProgramStack[#tProgramStack + 1] = sPath\\\\\\\\\\\\\\\
        if multishell then\\\\\\\\\\\\\\\
            local sTitle = fs.getName( sPath )\\\\\\\\\\\\\\\
            if sTitle:sub(-4) == \\\\\\\\\\\\\\\".lua\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
                sTitle = sTitle:sub(1,-5)\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
            multishell.setTitle( multishell.getCurrent(), sTitle )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        local sDir = fs.getDir( sPath )\\\\\\\\\\\\\\\
        local result = os.run( createShellEnv( sDir ), sPath, ... )\\\\\\\\\\\\\\\
        tProgramStack[#tProgramStack] = nil\\\\\\\\\\\\\\\
        if multishell then\\\\\\\\\\\\\\\
            if #tProgramStack > 0 then\\\\\\\\\\\\\\\
                local sTitle = fs.getName( tProgramStack[#tProgramStack] )\\\\\\\\\\\\\\\
                if sTitle:sub(-4) == \\\\\\\\\\\\\\\".lua\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
                    sTitle = sTitle:sub(1,-5)\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                multishell.setTitle( multishell.getCurrent(), sTitle )\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                multishell.setTitle( multishell.getCurrent(), \\\\\\\\\\\\\\\"shell\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        return result\\\\\\\\\\\\\\\
       else\\\\\\\\\\\\\\\
        printError( \\\\\\\\\\\\\\\"No such program\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
        return false\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function tokenise( ... )\\\\\\\\\\\\\\\
    local sLine = table.concat( { ... }, \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    local tWords = {}\\\\\\\\\\\\\\\
    local bQuoted = false\\\\\\\\\\\\\\\
    for match in string.gmatch( sLine .. \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"(.-)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\" ) do\\\\\\\\\\\\\\\
        if bQuoted then\\\\\\\\\\\\\\\
            table.insert( tWords, match )\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            for m in string.gmatch( match, \\\\\\\\\\\\\\\"[^ \\\\\\\\\\\\\\\\t]+\\\\\\\\\\\\\\\" ) do\\\\\\\\\\\\\\\
                table.insert( tWords, m )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        bQuoted = not bQuoted\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return tWords\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
-- Install shell API\\\\\\\\\\\\\\\
function shell.run( ... )\\\\\\\\\\\\\\\
    local tWords = tokenise( ... )\\\\\\\\\\\\\\\
    local sCommand = tWords[1]\\\\\\\\\\\\\\\
    if sCommand then\\\\\\\\\\\\\\\
        return run( sCommand, table.unpack( tWords, 2 ) )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return false\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.exit()\\\\\\\\\\\\\\\
    bExit = true\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.dir()\\\\\\\\\\\\\\\
    return sDir\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.setDir( _sDir )\\\\\\\\\\\\\\\
    if type( _sDir ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( _sDir ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    if not fs.isDir( _sDir ) then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"Not a directory\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    sDir = _sDir\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.path()\\\\\\\\\\\\\\\
    return sPath\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.setPath( _sPath )\\\\\\\\\\\\\\\
    if type( _sPath ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( _sPath ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    sPath = _sPath\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.resolve( _sPath )\\\\\\\\\\\\\\\
    if type( _sPath ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( _sPath ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    local sStartChar = string.sub( _sPath, 1, 1 )\\\\\\\\\\\\\\\
    if sStartChar == \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" or sStartChar == \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        return fs.combine( \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", _sPath )\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
        return fs.combine( sDir, _sPath )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function pathWithExtension( _sPath, _sExt )\\\\\\\\\\\\\\\
    local nLen = #sPath\\\\\\\\\\\\\\\
    local sEndChar = string.sub( _sPath, nLen, nLen )\\\\\\\\\\\\\\\
    -- Remove any trailing slashes so we can add an extension to the path safely\\\\\\\\\\\\\\\
    if sEndChar == \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" or sEndChar == \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        _sPath = string.sub( _sPath, 1, nLen - 1 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return _sPath .. \\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\" .. _sExt\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.resolveProgram( _sCommand )\\\\\\\\\\\\\\\
    if type( _sCommand ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( _sCommand ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    -- Substitute aliases firsts\\\\\\\\\\\\\\\
    if tAliases[ _sCommand ] ~= nil then\\\\\\\\\\\\\\\
        _sCommand = tAliases[ _sCommand ]\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- If the path is a global path, use it directly\\\\\\\\\\\\\\\
    local sStartChar = string.sub( _sCommand, 1, 1 )\\\\\\\\\\\\\\\
    if sStartChar == \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" or sStartChar == \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        local sPath = fs.combine( \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", _sCommand )\\\\\\\\\\\\\\\
        if fs.exists( sPath ) and not fs.isDir( sPath ) then\\\\\\\\\\\\\\\
            return sPath\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            local sPathLua = pathWithExtension( sPath, \\\\\\\\\\\\\\\"lua\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            if fs.exists( sPathLua ) and not fs.isDir( sPathLua ) then\\\\\\\\\\\\\\\
                return sPathLua\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        return nil\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
     -- Otherwise, look on the path variable\\\\\\\\\\\\\\\
    for sPath in string.gmatch(sPath, \\\\\\\\\\\\\\\"[^:]+\\\\\\\\\\\\\\\") do\\\\\\\\\\\\\\\
        sPath = fs.combine( shell.resolve( sPath ), _sCommand )\\\\\\\\\\\\\\\
        if fs.exists( sPath ) and not fs.isDir( sPath ) then\\\\\\\\\\\\\\\
            return sPath\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            local sPathLua = pathWithExtension( sPath, \\\\\\\\\\\\\\\"lua\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            if fs.exists( sPathLua ) and not fs.isDir( sPathLua ) then\\\\\\\\\\\\\\\
                return sPathLua\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
    -- Not found\\\\\\\\\\\\\\\
    return nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.programs( _bIncludeHidden )\\\\\\\\\\\\\\\
    local tItems = {}\\\\\\\\\\\\\\\
    \\\\\\\\\\\\\\\
    -- Add programs from the path\\\\\\\\\\\\\\\
    for sPath in string.gmatch(sPath, \\\\\\\\\\\\\\\"[^:]+\\\\\\\\\\\\\\\") do\\\\\\\\\\\\\\\
        sPath = shell.resolve( sPath )\\\\\\\\\\\\\\\
        if fs.isDir( sPath ) then\\\\\\\\\\\\\\\
            local tList = fs.list( sPath )\\\\\\\\\\\\\\\
            for n=1,#tList do\\\\\\\\\\\\\\\
                local sFile = tList[n]\\\\\\\\\\\\\\\
                if not fs.isDir( fs.combine( sPath, sFile ) ) and\\\\\\\\\\\\\\\
                   (_bIncludeHidden or string.sub( sFile, 1, 1 ) ~= \\\\\\\\\\\\\\\".\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
                    if #sFile > 4 and sFile:sub(-4) == \\\\\\\\\\\\\\\".lua\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
                        sFile = sFile:sub(1,-5)\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                    tItems[ sFile ] = true\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    end    \\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- Sort and return\\\\\\\\\\\\\\\
    local tItemList = {}\\\\\\\\\\\\\\\
    for sItem, b in pairs( tItems ) do\\\\\\\\\\\\\\\
        table.insert( tItemList, sItem )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    table.sort( tItemList )\\\\\\\\\\\\\\\
    return tItemList\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function completeProgram( sLine )\\\\\\\\\\\\\\\
    if #sLine > 0 and string.sub( sLine, 1, 1 ) == \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        -- Add programs from the root\\\\\\\\\\\\\\\
        return fs.complete( sLine, \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", true, false )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    else\\\\\\\\\\\\\\\
        local tResults = {}\\\\\\\\\\\\\\\
        local tSeen = {}\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        -- Add aliases\\\\\\\\\\\\\\\
        for sAlias, sCommand in pairs( tAliases ) do\\\\\\\\\\\\\\\
            if #sAlias > #sLine and string.sub( sAlias, 1, #sLine ) == sLine then\\\\\\\\\\\\\\\
                local sResult = string.sub( sAlias, #sLine + 1 )\\\\\\\\\\\\\\\
                if not tSeen[ sResult ] then\\\\\\\\\\\\\\\
                    table.insert( tResults, sResult )\\\\\\\\\\\\\\\
                    tSeen[ sResult ] = true\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        -- Add programs from the path\\\\\\\\\\\\\\\
        local tPrograms = shell.programs()\\\\\\\\\\\\\\\
        for n=1,#tPrograms do\\\\\\\\\\\\\\\
            local sProgram = tPrograms[n]\\\\\\\\\\\\\\\
            if #sProgram > #sLine and string.sub( sProgram, 1, #sLine ) == sLine then\\\\\\\\\\\\\\\
                local sResult = string.sub( sProgram, #sLine + 1 )\\\\\\\\\\\\\\\
                if not tSeen[ sResult ] then\\\\\\\\\\\\\\\
                    table.insert( tResults, sResult )\\\\\\\\\\\\\\\
                    tSeen[ sResult ] = true\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        -- Sort and return\\\\\\\\\\\\\\\
        table.sort( tResults )\\\\\\\\\\\\\\\
        return tResults\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local function completeProgramArgument( sProgram, nArgument, sPart, tPreviousParts )\\\\\\\\\\\\\\\
    local tInfo = tCompletionInfo[ sProgram ]\\\\\\\\\\\\\\\
    if tInfo then\\\\\\\\\\\\\\\
        return tInfo.fnComplete( shell, nArgument, sPart, tPreviousParts )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.complete( sLine )\\\\\\\\\\\\\\\
    if type( sLine ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( sLine ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    if #sLine > 0 then\\\\\\\\\\\\\\\
        local tWords = tokenise( sLine )\\\\\\\\\\\\\\\
        local nIndex = #tWords\\\\\\\\\\\\\\\
        if string.sub( sLine, #sLine, #sLine ) == \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            nIndex = nIndex + 1\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        if nIndex == 1 then\\\\\\\\\\\\\\\
            local sBit = tWords[1] or \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            local sPath = shell.resolveProgram( sBit )\\\\\\\\\\\\\\\
            if tCompletionInfo[ sPath ] then\\\\\\\\\\\\\\\
                return { \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\" }\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                local tResults = completeProgram( sBit )\\\\\\\\\\\\\\\
                for n=1,#tResults do\\\\\\\\\\\\\\\
                    local sResult = tResults[n]\\\\\\\\\\\\\\\
                    local sPath = shell.resolveProgram( sBit .. sResult )\\\\\\\\\\\\\\\
                    if tCompletionInfo[ sPath ] then\\\\\\\\\\\\\\\
                        tResults[n] = sResult .. \\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
                    end\\\\\\\\\\\\\\\
                end\\\\\\\\\\\\\\\
                return tResults\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        elseif nIndex > 1 then\\\\\\\\\\\\\\\
            local sPath = shell.resolveProgram( tWords[1] )\\\\\\\\\\\\\\\
            local sPart = tWords[nIndex] or \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
            local tPreviousParts = tWords\\\\\\\\\\\\\\\
            tPreviousParts[nIndex] = nil\\\\\\\\\\\\\\\
            return completeProgramArgument( sPath , nIndex - 1, sPart, tPreviousParts )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.completeProgram( sProgram )\\\\\\\\\\\\\\\
    if type( sProgram ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( sProgram ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return completeProgram( sProgram )\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.setCompletionFunction( sProgram, fnComplete )\\\\\\\\\\\\\\\
    if type( sProgram ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( sProgram ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    if type( fnComplete ) ~= \\\\\\\\\\\\\\\"function\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #2 (expected function, got \\\\\\\\\\\\\\\" .. type( fnComplete ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    tCompletionInfo[ sProgram ] = {\\\\\\\\\\\\\\\
        fnComplete = fnComplete\\\\\\\\\\\\\\\
    }\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.getCompletionInfo()\\\\\\\\\\\\\\\
    return tCompletionInfo\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.getRunningProgram()\\\\\\\\\\\\\\\
    if #tProgramStack > 0 then\\\\\\\\\\\\\\\
        return tProgramStack[#tProgramStack]\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.setAlias( _sCommand, _sProgram )\\\\\\\\\\\\\\\
    if type( _sCommand ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( _sCommand ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    if type( _sProgram ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #2 (expected string, got \\\\\\\\\\\\\\\" .. type( _sProgram ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    tAliases[ _sCommand ] = _sProgram\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.clearAlias( _sCommand )\\\\\\\\\\\\\\\
    if type( _sCommand ) ~= \\\\\\\\\\\\\\\"string\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
        error( \\\\\\\\\\\\\\\"bad argument #1 (expected string, got \\\\\\\\\\\\\\\" .. type( _sCommand ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    tAliases[ _sCommand ] = nil\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.aliases()\\\\\\\\\\\\\\\
    -- Copy aliases\\\\\\\\\\\\\\\
    local tCopy = {}\\\\\\\\\\\\\\\
    for sAlias, sCommand in pairs( tAliases ) do\\\\\\\\\\\\\\\
        tCopy[sAlias] = sCommand\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    return tCopy\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if multishell then\\\\\\\\\\\\\\\
    function shell.openTab( ... )\\\\\\\\\\\\\\\
        local tWords = tokenise( ... )\\\\\\\\\\\\\\\
        local sCommand = tWords[1]\\\\\\\\\\\\\\\
        if sCommand then\\\\\\\\\\\\\\\
            local sPath = shell.resolveProgram( sCommand )\\\\\\\\\\\\\\\
            if sPath == \\\\\\\\\\\\\\\"rom/programs/shell.lua\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
                return multishell.launch( createShellEnv( \\\\\\\\\\\\\\\"rom/programs\\\\\\\\\\\\\\\" ), sPath, table.unpack( tWords, 2 ) )\\\\\\\\\\\\\\\
            elseif sPath ~= nil then\\\\\\\\\\\\\\\
                return multishell.launch( createShellEnv( \\\\\\\\\\\\\\\"rom/programs\\\\\\\\\\\\\\\" ), \\\\\\\\\\\\\\\"rom/programs/shell.lua\\\\\\\\\\\\\\\", sCommand, table.unpack( tWords, 2 ) )\\\\\\\\\\\\\\\
            else\\\\\\\\\\\\\\\
                printError( \\\\\\\\\\\\\\\"No such program\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
            end\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    function shell.switchTab( nID )\\\\\\\\\\\\\\\
        if type( nID ) ~= \\\\\\\\\\\\\\\"number\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
            error( \\\\\\\\\\\\\\\"bad argument #1 (expected number, got \\\\\\\\\\\\\\\" .. type( nID ) .. \\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\", 2 )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        multishell.setFocus( nID )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
function shell.executeScript(path)\\\\\\\\\\\\\\\
 if not fs.exists(path) or fs.isDir(path) then\\\\\\\\\\\\\\\
  return \\\\\\\\\\\\\\\"file does not exist\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
 else\\\\\\\\\\\\\\\
  local t = kernel.iterateFileLines(path)\\\\\\\\\\\\\\\
  if t[1] == \\\\\\\\\\\\\\\"@ #handler /system/bin/sh\\\\\\\\\\\\\\\" then\\\\\\\\\\\\\\\
   for _,cmd in pairs(t) do\\\\\\\\\\\\\\\
    shell.run(cmd)\\\\\\\\\\\\\\\
   end\\\\\\\\\\\\\\\
  else\\\\\\\\\\\\\\\
   return \\\\\\\\\\\\\\\"script header is missing or corrupt\\\\\\\\\\\\\\\" \\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
local tArgs = { ... }\\\\\\\\\\\\\\\
if #tArgs > 0 then\\\\\\\\\\\\\\\
    -- \\\\\\\\\\\\\\\"shell x y z\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    -- Run the program specified on the commandline\\\\\\\\\\\\\\\
    shell.run( ... )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
else\\\\\\\\\\\\\\\
    -- \\\\\\\\\\\\\\\"shell\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
    -- Print the header\\\\\\\\\\\\\\\
    term.setBackgroundColor( bgColour )\\\\\\\\\\\\\\\
    term.setTextColour( promptColour )\\\\\\\\\\\\\\\
    print( os.version() )\\\\\\\\\\\\\\\
    term.setTextColour( textColour )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- Run the startup program\\\\\\\\\\\\\\\
    if parentShell == nil then\\\\\\\\\\\\\\\
        shell.run( \\\\\\\\\\\\\\\"/rom/startup.lua\\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
    sPath = sPath..\\\\\\\\\\\\\\\":/system/bin\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
    -- Read commands and execute them\\\\\\\\\\\\\\\
    local tCommandHistory = {}\\\\\\\\\\\\\\\
    while not bExit do\\\\\\\\\\\\\\\
        term.redirect( parentTerm )\\\\\\\\\\\\\\\
        term.setBackgroundColor( bgColour )\\\\\\\\\\\\\\\
        term.setTextColour( promptColour )\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009if __DEBUG then\\\\\\\\\\\\\\\
            stdout( \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" .. shell.dir() .. \\\\\\\\\\\\\\\" # \\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009else\\\\\\\\\\\\\\\
            stdout( \\\\\\\\\\\\\\\"/\\\\\\\\\\\\\\\" .. shell.dir() .. \\\\\\\\\\\\\\\" $ \\\\\\\\\\\\\\\" )\\\\\\\\\\\\\\\
\\\\\\\\009\\\\\\\\009end\\\\\\\\\\\\\\\
        term.setTextColour( textColour )\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
        local sLine\\\\\\\\\\\\\\\
        if settings.get( \\\\\\\\\\\\\\\"shell.autocomplete\\\\\\\\\\\\\\\" ) then\\\\\\\\\\\\\\\
            sLine = read( nil, tCommandHistory, shell.complete )\\\\\\\\\\\\\\\
        else\\\\\\\\\\\\\\\
            sLine = read( nil, tCommandHistory )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        if sLine:match(\\\\\\\\\\\\\\\"%S\\\\\\\\\\\\\\\") and tCommandHistory[#tCommandHistory] ~= sLine then\\\\\\\\\\\\\\\
            table.insert( tCommandHistory, sLine )\\\\\\\\\\\\\\\
        end\\\\\\\\\\\\\\\
        shell.run( sLine )\\\\\\\\\\\\\\\
    end\\\\\\\\\\\\\\\
end\\\\\\\"\\\",\\\
  \\\"F:systeminfo\\\",\\\
  \\\"\\\\\\\"local tArgs = {...}\\\\\\\\\\\\\\\
local err = true\\\\\\\\\\\\\\\
local function findArg(arg)\\\\\\\\\\\\\\\
 for _,v in ipairs(tArgs) do\\\\\\\\\\\\\\\
  if v == arg then\\\\\\\\\\\\\\\
   return true\\\\\\\\\\\\\\\
  end\\\\\\\\\\\\\\\
 end\\\\\\\\\\\\\\\
 return false\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
if findArg(\\\\\\\\\\\\\\\"--os-version\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 err = false\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"systeminfo\\\\\\\\\\\\\\\", os.version())\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
if findArg(\\\\\\\\\\\\\\\"--shell-path\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 err = false\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"systeminfo\\\\\\\\\\\\\\\", shell.path())\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
if findArg(\\\\\\\\\\\\\\\"--computer-info\\\\\\\\\\\\\\\") then\\\\\\\\\\\\\\\
 err = false\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"systeminfo\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"ID \\\\\\\\\\\\\\\"..os.getComputerID())\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"systeminfo\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"Computer labeled as \\\\\\\\\\\\\\\"..os.getComputerLabel())\\\\\\\\\\\\\\\
end\\\\\\\\\\\\\\\
if #tArgs < 1 or err then\\\\\\\\\\\\\\\
 UI.outputInfo(\\\\\\\\\\\\\\\"systeminfo\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"arguments not specified\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\
end\\\\\\\"\\\",\\\
  \\\"F:tty\\\",\\\
  \\\"\\\\\\\"local x, y = term.getSize()\\\\\\\\\\\\\\\
UI.outputInfo(\\\\\\\\\\\\\\\"tty\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"terminal object size is \\\\\\\\\\\\\\\"..tostring(x)..\\\\\\\\\\\\\\\"x\\\\\\\\\\\\\\\"..tostring(y))\\\\\\\\\\\\\\\
\\\\\\\"\\\",\\\
}\",\
  \"F:confdb.dat\",\
  \"\\\"{\\\\\\\
  [ \\\\\\\"edit.default_extension\\\\\\\" ] = \\\\\\\"\\\\\\\",\\\\\\\
  [ \\\\\\\"terminal/autocomplete/editor\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"shell.allow_startup\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"lua.autocomplete\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"system/boot/recovery/enable\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"system/security/defaultExecutionLevel\\\\\\\" ] = 3,\\\\\\\
  [ \\\\\\\"bios.use_multishell\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"system/security/kernel/lockKernelEnv\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"terminal/autocomplete/interpreter\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"fs/showHiddenObjects\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"edit.autocomplete\\\\\\\" ] = false,\\\\\\\
  [ \\\\\\\"fs/defaultExt/paint\\\\\\\" ] = \\\\\\\"img\\\\\\\",\\\\\\\
  [ \\\\\\\"edit.use_syntax_highlight\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"system/security/kernel/bugCheckReboot\\\\\\\" ] = false,\\\\\\\
  [ \\\\\\\"fs/defaultExt/edit\\\\\\\" ] = \\\\\\\"\\\\\\\",\\\\\\\
  [ \\\\\\\"terminal/autocomplete/shell\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"shell.allow_disk_startup\\\\\\\" ] = false,\\\\\\\
  [ \\\\\\\"system/boot/menu/allowExternalBoot\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"system/boot/menu/enable\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"list.show_hidden\\\\\\\" ] = false,\\\\\\\
  [ \\\\\\\"shell.autocomplete\\\\\\\" ] = true,\\\\\\\
  [ \\\\\\\"paint.default_extension\\\\\\\" ] = \\\\\\\"img\\\\\\\",\\\\\\\
  [ \\\\\\\"system/boot/recovery/useGUI\\\\\\\" ] = false,\\\\\\\
  [ \\\\\\\"kernel.reboot_on_bug_check\\\\\\\" ] = false,\\\\\\\
}\\\"\",\
  \"F:darwin.log\",\
  \"\\\"1d:22:27 | Attempt to access system files!\\\\\\\
1d:22:27 | Superuser access verified.\\\\\\\
1d:22:33 | Attempt to access system files!\\\\\\\
1d:22:33 | Superuser access verified.\\\\\\\
1d:7:38 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:7:39 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:7:39 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:7:39 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:7:39 | Darwin kernel loaded\\\\\\\
1d:18:03 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:18:03 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:18:03 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:18:03 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:18:03 | Darwin kernel loaded\\\\\\\
2d:7:56 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
2d:7:56 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
2d:7:56 | Loaded system file: /lib/libuser.2.so\\\\\\\
2d:7:57 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
2d:7:57 | Darwin kernel loaded\\\\\\\
2d:12:18 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
2d:12:18 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
2d:12:18 | Loaded system file: /lib/libuser.2.so\\\\\\\
2d:12:18 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
2d:12:18 | Darwin kernel loaded\\\\\\\
4d:12:29 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
4d:12:29 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
4d:12:29 | Loaded system file: /lib/libuser.2.so\\\\\\\
4d:12:30 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
4d:12:30 | Darwin kernel loaded\\\\\\\
5d:5:20 | Attempt to access system files!\\\\\\\
5d:5:20 | Superuser access verified.\\\\\\\
5d:5:56 | Attempt to access system files!\\\\\\\
5d:5:56 | Superuser access verified.\\\\\\\
5d:6:00 | Attempt to access system files!\\\\\\\
5d:6:00 | Superuser access verified.\\\\\\\
5d:14:21 | Attempt to access system files!\\\\\\\
5d:14:21 | Superuser access verified.\\\\\\\
5d:14:29 | Attempt to access system files!\\\\\\\
5d:14:29 | Superuser access verified.\\\\\\\
5d:14:38 | Attempt to access system files!\\\\\\\
5d:14:38 | Superuser access verified.\\\\\\\
5d:17:53 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
5d:17:53 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
5d:17:54 | Loaded system file: /lib/libuser.2.so\\\\\\\
5d:17:54 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
5d:17:54 | Darwin kernel loaded\\\\\\\
5d:20:09 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
5d:20:09 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
5d:20:09 | Loaded system file: /lib/libuser.2.so\\\\\\\
5d:20:10 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
5d:20:10 | Darwin kernel loaded\\\\\\\
6d:1:10 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:1:10 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:1:10 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:1:11 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:1:11 | Darwin kernel loaded\\\\\\\
6d:1:26 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:1:27 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:1:27 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:1:27 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:1:27 | Darwin kernel loaded\\\\\\\
6d:1:43 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:1:44 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:1:44 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:1:44 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:1:44 | Darwin kernel loaded\\\\\\\
6d:2:00 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:2:00 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:2:01 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:2:01 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:2:01 | Darwin kernel loaded\\\\\\\
6d:2:17 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:2:17 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:2:17 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:2:18 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:2:18 | Darwin kernel loaded\\\\\\\
6d:2:33 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:2:34 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:2:34 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:2:34 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:2:34 | Darwin kernel loaded\\\\\\\
6d:2:50 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:2:51 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:2:51 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:2:51 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:2:51 | Darwin kernel loaded\\\\\\\
6d:3:01 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:3:42 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:4:57 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:6:03 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:6:03 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:6:03 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:6:04 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:6:04 | Darwin kernel loaded\\\\\\\
6d:6:19 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:6:20 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:6:20 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:6:20 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:6:20 | Darwin kernel loaded\\\\\\\
6d:6:36 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:6:37 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:6:37 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:6:37 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:6:37 | Darwin kernel loaded\\\\\\\
6d:6:56 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:6:56 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:6:57 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:6:57 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:6:57 | Darwin kernel loaded\\\\\\\
6d:7:13 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:7:13 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:7:13 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:7:14 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:7:14 | Darwin kernel loaded\\\\\\\
6d:7:30 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:7:30 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:7:30 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:7:30 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:7:30 | Darwin kernel loaded\\\\\\\
6d:7:46 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:7:47 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:7:47 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:7:47 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:7:47 | Darwin kernel loaded\\\\\\\
6d:8:03 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:8:03 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:8:04 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:8:04 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:8:04 | Darwin kernel loaded\\\\\\\
6d:8:20 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:8:20 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:8:20 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:8:21 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:8:21 | Darwin kernel loaded\\\\\\\
6d:8:39 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:8:40 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:8:40 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:8:40 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:8:40 | Darwin kernel loaded\\\\\\\
6d:9:08 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:9:08 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:9:09 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:9:09 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:9:09 | Darwin kernel loaded\\\\\\\
6d:9:23 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
6d:9:23 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
6d:9:24 | Loaded system file: /lib/libuser.2.so\\\\\\\
6d:9:24 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
6d:9:24 | Darwin kernel loaded\\\\\\\
1d:6:10 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:6:10 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:10 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:11 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:11 | Darwin kernel loaded\\\\\\\
1d:13:47 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:13:47 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:13:48 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:13:48 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:13:48 | Darwin kernel loaded\\\\\\\
1d:14:59 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:15:00 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:15:00 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:15:00 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:15:00 | Darwin kernel loaded\\\\\\\
1d:16:06 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:16:07 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:16:07 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:16:07 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:16:07 | Darwin kernel loaded\\\\\\\
1d:20:11 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
1d:20:12 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:20:13 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:20:13 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:20:13 | Darwin kernel loaded\\\\\\\
2d:12:52 | Loaded system file: /boot/ext/mouse.kext\\\\\\\
2d:12:52 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
2d:12:53 | Loaded system file: /lib/libuser.2.so\\\\\\\
2d:12:53 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
2d:12:53 | Darwin kernel loaded\\\\\\\
1d:6:12 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:12 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:13 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:13 | Darwin kernel loaded\\\\\\\
1d:6:12 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:12 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:13 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:13 | Darwin kernel loaded\\\\\\\
1d:6:15 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:15 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:15 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:15 | Darwin kernel loaded\\\\\\\
1d:6:15 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:15 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:16 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:16 | Darwin kernel loaded\\\\\\\
1d:6:12 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:12 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:12 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:12 | Darwin kernel loaded\\\\\\\
1d:6:11 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:11 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:11 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:11 | Darwin kernel loaded\\\\\\\
1d:6:14 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:15 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:15 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:15 | Darwin kernel loaded\\\\\\\
1d:9:43 | Attempt to access system files!\\\\\\\
1d:9:43 | Superuser access verified.\\\\\\\
1d:10:02 | Attempt to access system files!\\\\\\\
1d:10:02 | Superuser access verified.\\\\\\\
1d:6:10 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:10 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:11 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:11 | Darwin kernel loaded\\\\\\\
1d:6:10 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:10 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:10 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:10 | Darwin kernel loaded\\\\\\\
1d:6:11 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:11 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:11 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:11 | Darwin kernel loaded\\\\\\\
1d:6:17 | Loaded system file: /lib/libstdlua.2.so\\\\\\\
1d:6:17 | Loaded system file: /lib/libuser.2.so\\\\\\\
1d:6:18 | Loaded system file: /lib/libgui_txui.1.so\\\\\\\
1d:6:18 | Darwin kernel loaded\\\"\",\
  \"F:init\",\
  \"\\\"settings.load(\\\\\\\"/system/confdb.dat\\\\\\\")\\\\\\\
fs.delete(\\\\\\\"/.settings\\\\\\\")\\\\\\\
sleep(0.25)\\\\\\\
UI.clearScreen()\\\"\",\
  \"D:res\",\
  \"{\\\
  \\\"F:crimSprite.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
                        444\\\\\\\\\\\\\\\
                       44444\\\\\\\\\\\\\\\
                      1444441\\\\\\\\\\\\\\\
                     114444411\\\\\\\\\\\\\\\
                    11144444111\\\\\\\\\\\\\\\
                   e11444444411e\\\\\\\\\\\\\\\
                  ee11444444411ee\\\\\\\\\\\\\\\
                 ee1114444444111ee\\\\\\\\\\\\\\\
                  ee11444444411ee\\\\\\\\\\\\\\\
                   e11444444411e\\\\\\\\\\\\\\\
                    11144444111\\\\\\\\\\\\\\\
                     114444411\\\\\\\\\\\\\\\
                      1444441\\\\\\\\\\\\\\\
                       44444\\\\\\\\\\\\\\\
                        444\\\\\\\"\\\",\\\
  \\\"F:dialog_box.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\
   000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
   0000000000000000000000000000000000000000000007\\\\\\\\\\\\\\\
   0000000000000000000000000000000000000000000007\\\\\\\\\\\\\\\
   0000000000000000000000000000000000000000000007\\\\\\\\\\\\\\\
   0777777777777777777777777777777777777777777707\\\\\\\\\\\\\\\
   0777777777777777777777777777777777777777777707\\\\\\\\\\\\\\\
   0777777777777777777777777777777777777777777707\\\\\\\\\\\\\\\
   0000000000000000000000000000000000000000000007\\\\\\\\\\\\\\\
    777777777777777777777777777777777777777777777\\\\\\\"\\\",\\\
  \\\"F:orbital.img\\\",\\\
  \\\"\\\\\\\"000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
00000000000000000000000bbbbb00000000000000000000000\\\\\\\\\\\\\\\
0000000000000000000000bb111bb0000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000bb1bbb1bb000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000bb1bbb1bb000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000bb1bbb1bb000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000bb1bbb1bb000000000000000000000\\\\\\\\\\\\\\\
0000000000000000000000bb111bb0000000000000000000000\\\\\\\\\\\\\\\
00000000000000000000000bbbbb00000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\\\\\\\\\
000000000000000000000000000000000000000000000000000\\\\\\\"\\\",\\\
  \\\"F:sprite_left.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
       4\\\\\\\\\\\\\\\
      44\\\\\\\\\\\\\\\
     144\\\\\\\\\\\\\\\
    1144\\\\\\\\\\\\\\\
   11144\\\\\\\\\\\\\\\
  e11444\\\\\\\\\\\\\\\
 ee11444\\\\\\\\\\\\\\\
ee111444\\\\\\\\\\\\\\\
 ee11444\\\\\\\\\\\\\\\
  e11444\\\\\\\\\\\\\\\
   11144\\\\\\\\\\\\\\\
    1144\\\\\\\\\\\\\\\
     144\\\\\\\\\\\\\\\
      44\\\\\\\\\\\\\\\
       4\\\\\\\"\\\",\\\
  \\\"F:sprite_right.img\\\",\\\
  \\\"\\\\\\\"\\\\\\\\\\\\\\\
44\\\\\\\\\\\\\\\
444\\\\\\\\\\\\\\\
4441\\\\\\\\\\\\\\\
44411\\\\\\\\\\\\\\\
444111\\\\\\\\\\\\\\\
444411e\\\\\\\\\\\\\\\
444411ee\\\\\\\\\\\\\\\
4444111ee\\\\\\\\\\\\\\\
444411ee\\\\\\\\\\\\\\\
444411e\\\\\\\\\\\\\\\
444111\\\\\\\\\\\\\\\
44411\\\\\\\\\\\\\\\
4441\\\\\\\\\\\\\\\
444\\\\\\\\\\\\\\\
44\\\\\\\"\\\",\\\
}\",\
}",
  [ 25 ] = "D:system",
}
