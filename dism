local tArgs = {...}

if not UI then UI = {["outputInfo"] = print,} end

local FFormat = ".odi"
local nFile, nDir, size = 0, 0

local function getPath(input)
 if string.sub(input, 1, 1)=="/" then
  path = input
 else
  path=("/" .. shell.dir() .. "/" .. input)
 end
 return path
end

local function fopen(path, mode)
  local f = fs.open(path, mode)
  if not f then 
    stderr("ERROR: Could not open "..path.." with mode \""..mode.."\"")
    exit()
  end
  return f
end

local function skip(df)
  local skip = {"rom", "treasure", "tmp"}
  for _,v in ipairs(skip) do
    if fs.getName(df) == v then
	  return true
	end
  end
  return false
end

local function zip(file)
  UI.outputInfo("dism", "Capturing from FS: ".. file)
  local f = fopen(file, "r")
  local z = textutils.serialize(f.readAll())
  f.close()
  return z
end

local function capture(path)
  local list = fs.list(path)
  local array = {}
  local t, name, d = 0, "", 0
  
  for i = 2, #list * 2, 2 do
    t = i/2
    local tpath = path.."/"..list[t]
    if fs.isDir(tpath) then
      if not skip(tpath) then
        name = "D:"..list[t]
        array[i] = capture(tpath)
        nDir = nDir + 1
      end
    else
      name = "F:"..list[t]
      array[i] = zip(tpath)
      nFile = nFile + 1
    end
    array[i - 1] = name
  end
  
  return textutils.serialize(array)
end

local function unzip(text, path)
  UI.outputInfo("dism", "Applying to FS: "..path)
  local f = fopen(path, "w")
  f.write(textutils.unserialize(text))
  f.close()
end

local function apply(text, path)
  local array = textutils.unserialize(text)
  local unz, dp
  local d = 0
  for i = 2, #array, 2 do
    if string.sub(array[i-1], 1, 1) == "D" then
      dp = string.sub(array[i-1], 3, #array[i-1])
      fs.makeDir(path.."/"..dp)
      apply(array[i], path.."/"..dp)
      nDir = nDir + 1
    elseif string.sub(array[i-1], 1, 1) == "F" then
      local p = string.sub(array[i-1], 3, #array[i-1])
      unzip(array[i], path.."/"..p)
      nFile = nFile + 1
    end
  end
end

local function result()
  UI.outputInfo("dism", "Operation completed."
    .."\n   size: "
    ..tostring(size).. " B   "
    ..tostring(math.floor(size/1024)).. " KB"
    .."\n   Files:   ".. tostring(nFile)
    .."\n   Folders: ".. tostring(nDir)
  )
end

local outStr = "Deployment Image Servicing and Management \n\n"

if tArgs[2] then
 tArgs[2]=getPath(tArgs[2])
end

if #tArgs < 3 then 
  outStr = outStr..[[
Usage:
dism capture <source directory> <output image>
     OR
     apply <source image> <target directory>
     
     Original code by 1Ridav.
     Modified for Orbital by minebuild02.
]]
end

UI.outputInfo("dism", outStr)

if tArgs[1] == "capture" then
  if fs.exists(tArgs[2]) and fs.isDir(tArgs[2]) then
    local zipped = capture(shell.resolve(tArgs[2]))
    local f = fs.open(tArgs[3]..FFormat, "w")
    f.write(zipped)
    f.close()
    zipped = nil
    size = fs.getSize(tArgs[3]..FFormat)
    result()   
  end
  
elseif tArgs[1] == "apply" then
    local f = fopen(tArgs[2], "r")
    if not fs.exists(tArgs[3]) then 
      fs.makeDir(tArgs[3]) 
    end
    apply(f.readAll(), tArgs[3])
    size = fs.getSize(tArgs[2])
    result()
end
