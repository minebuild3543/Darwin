term.clear()
term.setCursorPos(1,1)

os.version = function()
 return "Orbital Recovery Environment"
end

-- initialize kernel-mode functions
if not dofile("/boot/kernel.map") then
 printError("[ X ] Failed to initialize kernel library")
 if __DEBUG then
  return 0
 else
  while true do
   coroutine.yield()
  end
 end
end

__declare("__DEBUG", __kstruct({true}))

-- load drivers and libraries
__kload("/boot/ext/mouse.kext")
__kload("/boot/recovery/lib/libstdlua.2.so")
__kload("/boot/recovery/lib/libuser.2.so")
__kload("/boot/recovery/lib/libgui_txui.1.so")

-- syscall wrapper
__declare("syscall", function(sc, ...)
 return dofile("/boot/system.map")[sc](...)
end)

-- finalize kernel-mode init
__kfinalize()

-- output
printk(1, "Darwin kernel loaded")

sleep(5)

term.clear()
term.setCursorPos(1,1)

shell.run("/boot/recovery/init")